<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: VectorBase.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>VectorBase.hpp</h1><a href="VectorBase_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001   
<a name="l00002"></a>00002 <span class="preprocessor">#ifndef INCLUDED_VectorBase_hpp</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="preprocessor">#define INCLUDED_VectorBase_hpp</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include "<a class="code" href="MathException_8hpp.htm">MathException.hpp</a>"</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include "<a class="code" href="MatrixInitializer_8hpp.htm">MatrixInitializer.hpp</a>"</span>
<a name="l00008"></a>00008 
<a name="l00015"></a>00015 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classMatrixBase.htm">MatrixBase</a>;
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T = <span class="keywordtype">double</span>&gt;
<a name="l00018"></a><a class="code" href="classVectorBase.htm">00018</a> <span class="keyword">class </span><a class="code" href="classVectorBase.htm">VectorBase</a>
<a name="l00019"></a>00019 {
<a name="l00020"></a>00020   <span class="keyword">public</span>:
<a name="l00021"></a><a class="code" href="classVectorBase.htm#7c6c8ed8176b411636e4fa653f98a29b">00021</a>     <a class="code" href="classVectorBase.htm#7c6c8ed8176b411636e4fa653f98a29b">VectorBase</a>(){}
<a name="l00025"></a><a class="code" href="classVectorBase.htm#f2835abe6a8ce98386c96ebdb63be5f2">00025</a>     <span class="keyword">virtual</span> <a class="code" href="classVectorBase.htm#f2835abe6a8ce98386c96ebdb63be5f2">~VectorBase</a>(){}
<a name="l00029"></a>00029     <span class="keyword">virtual</span> T *<a class="code" href="classVectorBase.htm#a4b541538865f78f3047602e81218572">getElementsPointer</a>() <span class="keyword">const </span>= 0;
<a name="l00033"></a>00033     <span class="keyword">virtual</span> T <a class="code" href="classVectorBase.htm#ca55b281d62b2c0d47048585b461ef5e">getElement</a>(<span class="keywordtype">int</span> i) <span class="keyword">const </span>= 0;
<a name="l00037"></a>00037     <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classVectorBase.htm#3f5f181627c37d72fd2b3384e4072f4c">setElement</a>(<span class="keywordtype">int</span> index, T value)= 0;
<a name="l00043"></a>00043     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classVectorBase.htm#382bad4c18bca2ff98666ae8187a0654">getNumElements</a>() <span class="keyword">const  </span>= 0;
<a name="l00047"></a>00047     <span class="keyword">inline</span> T <a class="code" href="classVectorBase.htm#a538b3378ecb84ffcf4f2932c3e2e802">norm</a>() <span class="keyword">const</span>;
<a name="l00051"></a>00051     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classVectorBase.htm#69bb4249c0f1bf59b464fb6bab1ce091">isRowVector</a>() <span class="keyword">const </span>= 0;
<a name="l00055"></a><a class="code" href="classVectorBase.htm#1e7d294bb30e884493842757079f2299">00055</a>     <span class="keywordtype">bool</span> <a class="code" href="classVectorBase.htm#1e7d294bb30e884493842757079f2299">isColumnVector</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> !<a class="code" href="classVectorBase.htm#69bb4249c0f1bf59b464fb6bab1ce091">isRowVector</a>(); }
<a name="l00059"></a>00059     <a class="code" href="classVectorBase.htm">VectorBase&lt;T&gt;</a> &amp;<a class="code" href="classVectorBase.htm#a8cf80b8534b85864af03a4a248be7b1">operator=</a>(<span class="keyword">const</span> <a class="code" href="classVectorBase.htm">VectorBase&lt;T&gt;</a> &amp;vectorBase);
<a name="l00063"></a>00063     <span class="keyword">virtual</span> <a class="code" href="classMatrixInitializer.htm">MatrixInitializer&lt;T&gt;</a> <a class="code" href="classVectorBase.htm#a8cf80b8534b85864af03a4a248be7b1">operator=</a>(<span class="keyword">const</span> T &amp;value) = 0;
<a name="l00067"></a>00067     <span class="keywordtype">void</span> <a class="code" href="classVectorBase.htm#79fd10d43f4a0dca23437c34078b7ec9">output</a>(std::ostream &amp;outputStream = std::cout);
<a name="l00072"></a>00072   <span class="keyword">protected</span>:
<a name="l00073"></a><a class="code" href="classVectorBase.htm#adf8f70a81831229c80cff1b4a467dad">00073</a>     <a class="code" href="classVectorBase.htm#7c6c8ed8176b411636e4fa653f98a29b">VectorBase</a>(<a class="code" href="classVectorBase.htm">VectorBase&lt;T&gt;</a> &amp;m) {};
<a name="l00077"></a>00077 };
<a name="l00078"></a>00078 <span class="preprocessor">#endif // INCLUDED_VectorBase_hpp</span>
</pre></div><hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon Sep 11 14:52:24 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
