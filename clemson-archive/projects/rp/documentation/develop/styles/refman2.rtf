{rtf1ansiansicpg1252uc1 deff0deflang1033deflangfe1033{fonttbl{f0fromanfcharset0fprq2{*anose 02020603050405020304}Times New Roman;}{f1fswissfcharset0fprq2{*anose 020b0604020202020204}Arial;}
{f2fmodernfcharset0fprq1{*anose 02070309020205020404}Courier New;}{f3fromanfcharset2fprq2{*anose 05050102010706020507}Symbol;}{f4fromanfcharset0fprq2{*anose 00000000000000000000}Times;}
{f5fswissfcharset0fprq2{*anose 00000000000000000000}Helvetica;}{f6fmodernfcharset0fprq1{*anose 00000000000000000000}Courier;}{f7fswissfcharset0fprq2{*anose 00000000000000000000}Geneva;}
{f8fromanfcharset0fprq2{*anose 00000000000000000000}Tms Rmn;}{f9fswissfcharset0fprq2{*anose 00000000000000000000}Helv;}{f10fromanfcharset0fprq2{*anose 00000000000000000000}MS Serif;}
{f11fswissfcharset0fprq2{*anose 00000000000000000000}MS Sans Serif;}{f12fromanfcharset0fprq2{*anose 00000000000000000000}New York;}{f13fswissfcharset0fprq2{*anose 00000000000000000000}System;}
{f14fnilfcharset2fprq2{*anose 05000000000000000000}Wingdings;}{f15fromanfcharset128fprq1{*anose 00000000000000000000}Mincho{*falt ??};}{f16fnilfcharset129fprq1{*anose 00000000000000000000}Batang{*falt ??};}
{f17fnilfcharset134fprq2{*anose 00000000000000000000}SimSun{*falt ??};}{f18fnilfcharset136fprq2{*anose 00000000000000000000}PMingLiU{*falt ????};}{f19fmodernfcharset128fprq1{*anose 00000000000000000000}Gothic{*falt ?????};}
{f20fmodernfcharset129fprq1{*anose 00000000000000000000}Dotum{*falt ??};}{f21fmodernfcharset134fprq1{*anose 00000000000000000000}SimHei{*falt ??};}{f22fmodernfcharset136fprq1{*anose 00000000000000000000}MingLiU{*falt ???};}
{f23fromanfcharset128fprq1{*anose 00000000000000000000}MS Mincho{*falt MS ??};}{f24fromanfcharset129fprq1{*anose 00000000000000000000}Gulim{*falt ??};}
{f25fmodernfcharset128fprq1{*anose 00000000000000000000}MS Gothic{*falt MS ????};}{f26fromanfcharset0fprq2{*anose 00000000000000000000}Century;}{f27fswissfcharset0fprq2{*anose 020b0604030504040204}Tahoma;}
{f28fswissfcharset0fprq2{*anose 00000000000000000000}AvantGarde;}{f29fromanfcharset0fprq2{*anose 00000000000000000000}ITC Bookman;}{f30fswissfcharset0fprq2{*anose 00000000000000000000}Helvetica-Narrow;}
{f31fromanfcharset0fprq2{*anose 00000000000000000000}NewCenturySchlbk;}{f32fromanfcharset0fprq2{*anose 00000000000000000000}Palatino;}{f33fromanfcharset0fprq2{*anose 00000000000000000000}ZapfChancery;}
{f34fdecorfcharset2fprq2{*anose 00000000000000000000}ZapfDingbats;}{f35fnilfcharset2fprq2{*anose 00000000000000000000}Marlett;}{f36fmodernfcharset0fprq1{*anose 020b0609040504020204}Lucida Console;}
{f37fswissfcharset0fprq2{*anose 020b0602030504020204}Lucida Sans Unicode;}{f38fromanfcharset2fprq2{*anose 05030102010509060703}Webdings;}{f39fswissfcharset0fprq2{*anose 020b0506020202030204}Arial Narrow;}
{f40fromanfcharset0fprq2{*anose 02040602050305030304}Book Antiqua;}{f41fromanfcharset0fprq2{*anose 02050604050505020204}Bookman Old Style;}{f42fswissfcharset0fprq2{*anose 020b0502020202020204}Century Gothic;}
{f43fromanfcharset0fprq2{*anose 02020404030301010803}Garamond;}{f44fscriptfcharset0fprq2{*anose 03010101010201010101}Monotype Corsiva;}{f45fnilfcharset2fprq2{*anose 05000000000000000000}MS Outlook;}
{f46fswissfcharset0fprq2{*anose 020b0603020202020204}Trebuchet MS;}{f47fromanfcharset2fprq2{*anose 05020102010507070707}Wingdings 2;}{f48fromanfcharset2fprq2{*anose 05040102010807070707}Wingdings 3;}
{f49fswissfcharset0fprq2{*anose 020b0a04020102020204}Arial Black;}{f50fswissfcharset0fprq2{*anose 020b0500000000000000}cmb10;}{f51fswissfcharset0fprq2{*anose 020b0500000000000000}cmbsy10;}
{f52fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx10;}{f53fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx12;}{f54fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx5;}
{f55fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx6;}{f56fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx7;}{f57fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx8;}
{f58fswissfcharset0fprq2{*anose 020b0500000000000000}cmbx9;}{f59fswissfcharset0fprq2{*anose 020b0500000000000000}cmbxsl10;}{f60fswissfcharset0fprq2{*anose 020b0500000000000000}cmbxti10;}
{f61fswissfcharset0fprq2{*anose 020b0500000000000000}cmcsc10;}{f62fswissfcharset0fprq2{*anose 020b0500000000000000}cmdunh10;}{f63fswissfcharset0fprq2{*anose 020b0500000000000000}cmex10;}
{f64fswissfcharset0fprq2{*anose 020b0500000000000000}cmff10;}{f65fswissfcharset0fprq2{*anose 020b0500000000000000}cmfi10;}{f66fswissfcharset0fprq2{*anose 020b0500000000000000}cmfib8;}
{f67fswissfcharset0fprq2{*anose 020b0500000000000000}cmitt10;}{f68fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi10;}{f69fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi12;}
{f70fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi5;}{f71fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi6;}{f72fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi7;}
{f73fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi8;}{f74fswissfcharset0fprq2{*anose 020b0500000000000000}cmmi9;}{f75fswissfcharset0fprq2{*anose 020b0500000000000000}cmmib10;}
{f76fswissfcharset0fprq2{*anose 020b0500000000000000}cmr10;}{f77fswissfcharset0fprq2{*anose 020b0500000000000000}cmr12;}{f78fswissfcharset0fprq2{*anose 020b0500000000000000}cmr17;}
{f79fswissfcharset0fprq2{*anose 020b0500000000000000}cmr5;}{f80fswissfcharset0fprq2{*anose 020b0500000000000000}cmr6;}{f81fswissfcharset0fprq2{*anose 020b0500000000000000}cmr7;}
{f82fswissfcharset0fprq2{*anose 020b0500000000000000}cmr8;}{f83fswissfcharset0fprq2{*anose 020b0500000000000000}cmr9;}{f84fswissfcharset0fprq2{*anose 020b0500000000000000}cmsl10;}
{f85fswissfcharset0fprq2{*anose 020b0500000000000000}cmsl12;}{f86fswissfcharset0fprq2{*anose 020b0500000000000000}cmsl8;}{f87fswissfcharset0fprq2{*anose 020b0500000000000000}cmsl9;}
{f88fswissfcharset0fprq2{*anose 020b0500000000000000}cmsltt10;}{f89fswissfcharset0fprq2{*anose 020b0500000000000000}cmss10;}{f90fswissfcharset0fprq2{*anose 020b0500000000000000}cmss12;}
{f91fswissfcharset0fprq2{*anose 020b0500000000000000}cmss17;}{f92fswissfcharset0fprq2{*anose 020b0500000000000000}cmss8;}{f93fswissfcharset0fprq2{*anose 020b0500000000000000}cmss9;}
{f94fswissfcharset0fprq2{*anose 020b0500000000000000}cmssbx10;}{f95fswissfcharset0fprq2{*anose 020b0500000000000000}cmssdc10;}{f96fswissfcharset0fprq2{*anose 020b0500000000000000}cmssi10;}
{f97fswissfcharset0fprq2{*anose 020b0500000000000000}cmssi12;}{f98fswissfcharset0fprq2{*anose 020b0500000000000000}cmssi17;}{f99fromanfcharset0fprq2{*anose 02020500000000000000}cmssi8;}
{f100fswissfcharset0fprq2{*anose 020b0500000000000000}cmssi9;}{f101fswissfcharset0fprq2{*anose 020b0500000000000000}cmssq8;}{f102fswissfcharset0fprq2{*anose 020b0500000000000000}cmssqi8;}
{f103fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy10;}{f104fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy5;}{f105fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy6;}
{f106fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy7;}{f107fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy8;}{f108fswissfcharset0fprq2{*anose 020b0500000000000000}cmsy9;}
{f109fswissfcharset0fprq2{*anose 020b0500000000000000}cmtcsc10;}{f110fswissfcharset0fprq2{*anose 020b0500000000000000}cmti10;}{f111fswissfcharset0fprq2{*anose 020b0500000000000000}cmti12;}
{f112fswissfcharset0fprq2{*anose 020b0500000000000000}cmti7;}{f113fswissfcharset0fprq2{*anose 020b0500000000000000}cmti8;}{f114fswissfcharset0fprq2{*anose 020b0500000000000000}cmti9;}
{f115fswissfcharset0fprq2{*anose 020b0500000000000000}cmtt10;}{f116fswissfcharset0fprq2{*anose 020b0500000000000000}cmtt12;}{f117fswissfcharset0fprq2{*anose 020b0500000000000000}cmtt8;}
{f118fswissfcharset0fprq2{*anose 020b0500000000000000}cmtt9;}{f119fswissfcharset0fprq2{*anose 020b0500000000000000}cmu10;}{f120fswissfcharset0fprq2{*anose 020b0500000000000000}lasy10;}
{f121fswissfcharset0fprq2{*anose 020b0500000000000000}lasy5;}{f122fswissfcharset0fprq2{*anose 020b0500000000000000}lasy6;}{f123fswissfcharset0fprq2{*anose 020b0500000000000000}lasy7;}
{f124fswissfcharset0fprq2{*anose 020b0500000000000000}lasy8;}{f125fswissfcharset0fprq2{*anose 020b0500000000000000}lasy9;}{f126fswissfcharset0fprq2{*anose 020b0500000000000000}lasyb10;}
{f127fswissfcharset0fprq2{*anose 020b0500000000000000}lcircle10;}{f128fswissfcharset0fprq2{*anose 020b0500000000000000}lcirclew10;}{f129fswissfcharset0fprq2{*anose 020b0500000000000000}line10;}
{f130fswissfcharset0fprq2{*anose 020b0500000000000000}linew10;}{f131fswissfcharset0fprq2{*anose 020b0500000000000000}logo10;}{f132fswissfcharset0fprq2{*anose 020b0500000000000000}euex10;}
{f133fswissfcharset0fprq2{*anose 020b0500000000000000}eufb10;}{f134fswissfcharset0fprq2{*anose 020b0500000000000000}eufb5;}{f135fswissfcharset0fprq2{*anose 020b0500000000000000}eufb7;}
{f136fswissfcharset0fprq2{*anose 020b0500000000000000}eufm10;}{f137fswissfcharset0fprq2{*anose 020b0500000000000000}eufm5;}{f138fswissfcharset0fprq2{*anose 020b0500000000000000}eufm7;}
{f139fswissfcharset0fprq2{*anose 020b0500000000000000}eurb10;}{f140fswissfcharset0fprq2{*anose 020b0500000000000000}eurb5;}{f141fswissfcharset0fprq2{*anose 020b0500000000000000}eurb7;}
{f142fswissfcharset0fprq2{*anose 020b0500000000000000}eurm10;}{f143fswissfcharset0fprq2{*anose 020b0500000000000000}eurm5;}{f144fswissfcharset0fprq2{*anose 020b0500000000000000}eurm7;}
{f145fswissfcharset0fprq2{*anose 020b0500000000000000}eusb10;}{f146fswissfcharset0fprq2{*anose 020b0500000000000000}eusb5;}{f147fswissfcharset0fprq2{*anose 020b0500000000000000}eusb7;}
{f148fswissfcharset0fprq2{*anose 020b0500000000000000}eusm10;}{f149fswissfcharset0fprq2{*anose 020b0500000000000000}eusm5;}{f150fswissfcharset0fprq2{*anose 020b0500000000000000}eusm7;}
{f151fswissfcharset0fprq2{*anose 020b0500000000000000}msam10;}{f152fswissfcharset0fprq2{*anose 020b0500000000000000}msbm10;}{f153fnilfcharset0fprq2{*anose 00000400000000000000}TECHMath;}
{f154fswissfcharset0fprq2{*anose 020b0500000000000000}dcb10;}{f155fswissfcharset0fprq2{*anose 020b0500000000000000}dcbx10;}{f156fswissfcharset0fprq2{*anose 020b0500000000000000}dcbxsl10;}
{f157fswissfcharset0fprq2{*anose 020b0500000000000000}dcbxti10;}{f158fswissfcharset0fprq2{*anose 020b0500000000000000}dccsc10;}{f159fswissfcharset0fprq2{*anose 020b0500000000000000}dcitt10;}
{f160fswissfcharset0fprq2{*anose 020b0500000000000000}dcr10;}{f161fswissfcharset0fprq2{*anose 020b0500000000000000}dcsl10;}{f162fswissfcharset0fprq2{*anose 020b0500000000000000}dcsltt10;}
{f163fswissfcharset0fprq2{*anose 020b0500000000000000}dcss10;}{f164fswissfcharset0fprq2{*anose 020b0500000000000000}dcssbx10;}{f165fswissfcharset0fprq2{*anose 020b0500000000000000}dcssi10;}
{f166fswissfcharset0fprq2{*anose 020b0500000000000000}dctcsc10;}{f167fswissfcharset0fprq2{*anose 020b0500000000000000}dcti10;}{f168fswissfcharset0fprq2{*anose 020b0500000000000000}dctt10;}
{f169fswissfcharset0fprq2{*anose 020b0500000000000000}dcu10;}{f170fswissfcharset0fprq2{*anose 020b0800000000000000}Eras;}{f171fscriptfcharset0fprq2{*anose 030f0702030302020204}Comic Sans MS;}
{f172fswissfcharset0fprq2{*anose 020b0806030902050204}Impact;}{f173fswissfcharset0fprq2{*anose 020b0604030504040204}Verdana;}{f174fromanfcharset2fprq2{*anose 05050102010205020202}MT Extra;}
{f175fromanfcharset0fprq2{*anose 02090504030505020304}AmerType Md BT;}{f176fswissfcharset0fprq2{*anose 020b0402020204020303}Futura Lt BT;}{f177fswissfcharset0fprq2{*anose 020b0903020204020204}Futura XBlk BT;}
{f178fromanfcharset0fprq2{*anose 02020502050305020303}GoudyOlSt BT;}{f179fromanfcharset0fprq2{*anose 0207060307050a020302}BernhardMod BT;}{f180fromanfcharset0fprq2{*anose 02030904050306020704}Benguiat Bk BT;}
{f181fswissfcharset0fprq2{*anose 020b0802020204020204}Futura Md BT;}{f182fdecorfcharset0fprq2{*anose 040409040d0702020402}Allegro BT;}{f183fscriptfcharset0fprq2{*anose 03020702030807050705}TypoUpright BT;}
{f184fromanfcharset0fprq2{*anose 02040503050506040803}ZapfEllipt BT;}{f185fdecorfcharset0fprq2{*anose 04030205020b02020502}BernhardFashion BT;}{f186fromanfcharset0fprq2{*anose 02080503040505020303}Souvenir Lt BT;}
{f187fromanfcharset0fprq2{*anose 0204050203030b020204}Dauphin;}{f188fswissfcharset0fprq2{*anose 020e0705020203020404}CopprplGoth Bd BT;}{f189fswissfcharset0fprq2{*anose 020b0807040502030204}Zurich BlkEx BT;}
{f190fswissfcharset0fprq2{*anose 020b0505020202020204}Zurich Ex BT;}{f191fdecorfcharset0fprq2{*anose 04060705040702020204}Charlesworth;}{f192fdecorfcharset0fprq2{*anose 04040807060d02020704}Bremen Bd BT;}
{f193fswissfcharset0fprq2{*anose 020b0807020203060204}BankGothic Md BT;}{f194fdecorfcharset0fprq2{*anose 04020604050203030203}GoudyHandtooled BT;}{f195fdecorfcharset0fprq2{*anose 040409050d0b02020403}FuturaBlack BT;}
{f196fswissfcharset2fprq2{*anose 020b0603050302020204}CommonBullets;}{f197fscriptfcharset0fprq2{*anose 03080702020302020206}OzHandicraft BT;}{f198fscriptfcharset0fprq2{*anose 03030702030607090b03}ShelleyAllegro BT;}
{f199fromanfcharset0fprq2{*anose 02060303030505020204}Serifa Th BT;}{f200fscriptfcharset0fprq2{*anose 03090702030407020403}Staccato222 BT;}{f201fswissfcharset0fprq2{*anose 020b0402020202020204}AvantGarde Bk BT;}
{f202fswissfcharset0fprq2{*anose 020b0602020202020204}AvantGarde Md BT;}{f203fromanfcharset0fprq2{*anose 02060503030505020204}Serifa BT;}{f204fdecorfcharset0fprq2{*anose 040b0500000000000000}LithographLight;}
{f205fswissfcharset0fprq2{*anose 020d0902020204020204}Kabel Ult BT;}{f206fswissfcharset0fprq2{*anose 020b0708030702060204}Swiss911 XCm BT;}{f207fswissfcharset0fprq2{*anose 020d0402020204020904}Kabel Bk BT;}
{f208fswissfcharset0fprq2{*anose 020b0602020204020204}Humanst521 BT;}{f209fnilfcharset0fprq2{*anose 00000000000000000000}Lithograph;}{f210fromanfcharset0fprq2{*anose 02070a02080905020204}PosterBodoni BT;}
{f211fdecorfcharset0fprq2{*anose 04040604020b02020304}LcdD;}{f212fromanfcharset177fprq2{*anose 00000000000000000000}Times New Roman (Hebrew);}{f213fromanfcharset178fprq2{*anose 00000000000000000000}Times New Roman (Arabic);}
{f214fswissfcharset177fprq2{*anose 00000000000000000000}Arial (Hebrew);}{f215fswissfcharset178fprq2{*anose 00000000000000000000}Arial (Arabic);}{f216fmodernfcharset177fprq1{*anose 00000000000000000000}Courier New (Hebrew);}
{f217fmodernfcharset178fprq1{*anose 00000000000000000000}Courier New (Arabic);}{f218fswissfcharset177fprq2{*anose 00000000000000000000}Tahoma (Hebrew);}{f219fswissfcharset178fprq2{*anose 00000000000000000000}Tahoma (Arabic);}
{f220fswissfcharset177fprq2{*anose 00000000000000000000}Lucida Sans Unicode (Hebrew);}{f221fnilfcharset255fprq3{*anose 00000000000000000000}Roman;}{f222fromanfcharset238fprq2 Times New Roman CE;}
{f223fromanfcharset204fprq2 Times New Roman Cyr;}{f225fromanfcharset161fprq2 Times New Roman Greek;}{f226fromanfcharset162fprq2 Times New Roman Tur;}{f227fromanfcharset177fprq2 Times New Roman (Hebrew);}
{f228fromanfcharset178fprq2 Times New Roman (Arabic);}{f229fromanfcharset186fprq2 Times New Roman Baltic;}{f230fswissfcharset238fprq2 Arial CE;}{f231fswissfcharset204fprq2 Arial Cyr;}{f233fswissfcharset161fprq2 Arial Greek;}
{f234fswissfcharset162fprq2 Arial Tur;}{f235fswissfcharset177fprq2 Arial (Hebrew);}{f236fswissfcharset178fprq2 Arial (Arabic);}{f237fswissfcharset186fprq2 Arial Baltic;}{f238fmodernfcharset238fprq1 Courier New CE;}
{f239fmodernfcharset204fprq1 Courier New Cyr;}{f241fmodernfcharset161fprq1 Courier New Greek;}{f242fmodernfcharset162fprq1 Courier New Tur;}{f243fmodernfcharset177fprq1 Courier New (Hebrew);}
{f244fmodernfcharset178fprq1 Courier New (Arabic);}{f245fmodernfcharset186fprq1 Courier New Baltic;}{f438fswissfcharset238fprq2 Tahoma CE;}{f439fswissfcharset204fprq2 Tahoma Cyr;}{f441fswissfcharset161fprq2 Tahoma Greek;}
{f442fswissfcharset162fprq2 Tahoma Tur;}{f443fswissfcharset177fprq2 Tahoma (Hebrew);}{f444fswissfcharset178fprq2 Tahoma (Arabic);}{f445fswissfcharset186fprq2 Tahoma Baltic;}{f510fmodernfcharset238fprq1 Lucida Console CE;}
{f511fmodernfcharset204fprq1 Lucida Console Cyr;}{f513fmodernfcharset161fprq1 Lucida Console Greek;}{f514fmodernfcharset162fprq1 Lucida Console Tur;}{f518fswissfcharset238fprq2 Lucida Sans Unicode CE;}
{f519fswissfcharset204fprq2 Lucida Sans Unicode Cyr;}{f521fswissfcharset161fprq2 Lucida Sans Unicode Greek;}{f522fswissfcharset162fprq2 Lucida Sans Unicode Tur;}{f523fswissfcharset177fprq2 Lucida Sans Unicode (Hebrew);}
{f534fswissfcharset238fprq2 Arial Narrow CE;}{f535fswissfcharset204fprq2 Arial Narrow Cyr;}{f537fswissfcharset161fprq2 Arial Narrow Greek;}{f538fswissfcharset162fprq2 Arial Narrow Tur;}{f541fswissfcharset186fprq2 Arial Narrow Baltic;}
{f542fromanfcharset238fprq2 Book Antiqua CE;}{f543fromanfcharset204fprq2 Book Antiqua Cyr;}{f545fromanfcharset161fprq2 Book Antiqua Greek;}{f546fromanfcharset162fprq2 Book Antiqua Tur;}{f549fromanfcharset186fprq2 Book Antiqua Baltic;}
{f550fromanfcharset238fprq2 Bookman Old Style CE;}{f551fromanfcharset204fprq2 Bookman Old Style Cyr;}{f553fromanfcharset161fprq2 Bookman Old Style Greek;}{f554fromanfcharset162fprq2 Bookman Old Style Tur;}
{f557fromanfcharset186fprq2 Bookman Old Style Baltic;}{f558fswissfcharset238fprq2 Century Gothic CE;}{f559fswissfcharset204fprq2 Century Gothic Cyr;}{f561fswissfcharset161fprq2 Century Gothic Greek;}
{f562fswissfcharset162fprq2 Century Gothic Tur;}{f565fswissfcharset186fprq2 Century Gothic Baltic;}{f566fromanfcharset238fprq2 Garamond CE;}{f567fromanfcharset204fprq2 Garamond Cyr;}{f569fromanfcharset161fprq2 Garamond Greek;}
{f570fromanfcharset162fprq2 Garamond Tur;}{f573fromanfcharset186fprq2 Garamond Baltic;}{f574fscriptfcharset238fprq2 Monotype Corsiva CE;}{f575fscriptfcharset204fprq2 Monotype Corsiva Cyr;}
{f577fscriptfcharset161fprq2 Monotype Corsiva Greek;}{f578fscriptfcharset162fprq2 Monotype Corsiva Tur;}{f581fscriptfcharset186fprq2 Monotype Corsiva Baltic;}{f590fswissfcharset238fprq2 Trebuchet MS CE;}
{f594fswissfcharset162fprq2 Trebuchet MS Tur;}{f1590fscriptfcharset238fprq2 Comic Sans MS CE;}{f1591fscriptfcharset204fprq2 Comic Sans MS Cyr;}{f1593fscriptfcharset161fprq2 Comic Sans MS Greek;}
{f1594fscriptfcharset162fprq2 Comic Sans MS Tur;}{f1597fscriptfcharset186fprq2 Comic Sans MS Baltic;}{f1598fswissfcharset238fprq2 Impact CE;}{f1599fswissfcharset204fprq2 Impact Cyr;}{f1601fswissfcharset161fprq2 Impact Greek;}
{f1602fswissfcharset162fprq2 Impact Tur;}{f1605fswissfcharset186fprq2 Impact Baltic;}{f1606fswissfcharset238fprq2 Verdana CE;}{f1607fswissfcharset204fprq2 Verdana Cyr;}{f1609fswissfcharset161fprq2 Verdana Greek;}
{f1610fswissfcharset162fprq2 Verdana Tur;}{f1613fswissfcharset186fprq2 Verdana Baltic;}{f1622fromanfcharset238fprq2 AmerType Md BT CE;}{f1625fromanfcharset161fprq2 AmerType Md BT Greek;}{f1626fromanfcharset162fprq2 AmerType Md BT Tur;}
{f1630fswissfcharset238fprq2 Futura Lt BT CE;}{f1633fswissfcharset161fprq2 Futura Lt BT Greek;}{f1634fswissfcharset162fprq2 Futura Lt BT Tur;}{f1638fswissfcharset238fprq2 Futura XBlk BT CE;}
{f1641fswissfcharset161fprq2 Futura XBlk BT Greek;}{f1642fswissfcharset162fprq2 Futura XBlk BT Tur;}{f1646fromanfcharset238fprq2 GoudyOlSt BT CE;}{f1649fromanfcharset161fprq2 GoudyOlSt BT Greek;}
{f1650fromanfcharset162fprq2 GoudyOlSt BT Tur;}{f1654fromanfcharset238fprq2 BernhardMod BT CE;}{f1657fromanfcharset161fprq2 BernhardMod BT Greek;}{f1658fromanfcharset162fprq2 BernhardMod BT Tur;}
{f1662fromanfcharset238fprq2 Benguiat Bk BT CE;}{f1665fromanfcharset161fprq2 Benguiat Bk BT Greek;}{f1666fromanfcharset162fprq2 Benguiat Bk BT Tur;}{f1670fswissfcharset238fprq2 Futura Md BT CE;}
{f1673fswissfcharset161fprq2 Futura Md BT Greek;}{f1674fswissfcharset162fprq2 Futura Md BT Tur;}{f1678fdecorfcharset238fprq2 Allegro BT CE;}{f1681fdecorfcharset161fprq2 Allegro BT Greek;}{f1682fdecorfcharset162fprq2 Allegro BT Tur;}
{f1686fscriptfcharset238fprq2 TypoUpright BT CE;}{f1689fscriptfcharset161fprq2 TypoUpright BT Greek;}{f1690fscriptfcharset162fprq2 TypoUpright BT Tur;}{f1694fromanfcharset238fprq2 ZapfEllipt BT CE;}
{f1697fromanfcharset161fprq2 ZapfEllipt BT Greek;}{f1698fromanfcharset162fprq2 ZapfEllipt BT Tur;}{f1702fdecorfcharset238fprq2 BernhardFashion BT CE;}{f1705fdecorfcharset161fprq2 BernhardFashion BT Greek;}
{f1706fdecorfcharset162fprq2 BernhardFashion BT Tur;}{f1710fromanfcharset238fprq2 Souvenir Lt BT CE;}{f1713fromanfcharset161fprq2 Souvenir Lt BT Greek;}{f1714fromanfcharset162fprq2 Souvenir Lt BT Tur;}
{f1726fswissfcharset238fprq2 CopprplGoth Bd BT CE;}{f1729fswissfcharset161fprq2 CopprplGoth Bd BT Greek;}{f1730fswissfcharset162fprq2 CopprplGoth Bd BT Tur;}{f1734fswissfcharset238fprq2 Zurich BlkEx BT CE;}
{f1737fswissfcharset161fprq2 Zurich BlkEx BT Greek;}{f1738fswissfcharset162fprq2 Zurich BlkEx BT Tur;}{f1742fswissfcharset238fprq2 Zurich Ex BT CE;}{f1745fswissfcharset161fprq2 Zurich Ex BT Greek;}
{f1746fswissfcharset162fprq2 Zurich Ex BT Tur;}{f1758fdecorfcharset238fprq2 Bremen Bd BT CE;}{f1761fdecorfcharset161fprq2 Bremen Bd BT Greek;}{f1762fdecorfcharset162fprq2 Bremen Bd BT Tur;}
{f1766fswissfcharset238fprq2 BankGothic Md BT CE;}{f1769fswissfcharset161fprq2 BankGothic Md BT Greek;}{f1770fswissfcharset162fprq2 BankGothic Md BT Tur;}{f1774fdecorfcharset238fprq2 GoudyHandtooled BT CE;}
{f1777fdecorfcharset161fprq2 GoudyHandtooled BT Greek;}{f1778fdecorfcharset162fprq2 GoudyHandtooled BT Tur;}{f1782fdecorfcharset238fprq2 FuturaBlack BT CE;}{f1785fdecorfcharset161fprq2 FuturaBlack BT Greek;}
{f1786fdecorfcharset162fprq2 FuturaBlack BT Tur;}{f1798fscriptfcharset238fprq2 OzHandicraft BT CE;}{f1801fscriptfcharset161fprq2 OzHandicraft BT Greek;}{f1802fscriptfcharset162fprq2 OzHandicraft BT Tur;}
{f1806fscriptfcharset238fprq2 ShelleyAllegro BT CE;}{f1809fscriptfcharset161fprq2 ShelleyAllegro BT Greek;}{f1810fscriptfcharset162fprq2 ShelleyAllegro BT Tur;}{f1814fromanfcharset238fprq2 Serifa Th BT CE;}
{f1817fromanfcharset161fprq2 Serifa Th BT Greek;}{f1818fromanfcharset162fprq2 Serifa Th BT Tur;}{f1822fscriptfcharset238fprq2 Staccato222 BT CE;}{f1825fscriptfcharset161fprq2 Staccato222 BT Greek;}
{f1826fscriptfcharset162fprq2 Staccato222 BT Tur;}{f1830fswissfcharset238fprq2 AvantGarde Bk BT CE;}{f1833fswissfcharset161fprq2 AvantGarde Bk BT Greek;}{f1834fswissfcharset162fprq2 AvantGarde Bk BT Tur;}
{f1838fswissfcharset238fprq2 AvantGarde Md BT CE;}{f1841fswissfcharset161fprq2 AvantGarde Md BT Greek;}{f1842fswissfcharset162fprq2 AvantGarde Md BT Tur;}{f1846fromanfcharset238fprq2 Serifa BT CE;}
{f1849fromanfcharset161fprq2 Serifa BT Greek;}{f1850fromanfcharset162fprq2 Serifa BT Tur;}{f1862fswissfcharset238fprq2 Kabel Ult BT CE;}{f1865fswissfcharset161fprq2 Kabel Ult BT Greek;}{f1866fswissfcharset162fprq2 Kabel Ult BT Tur;}
{f1870fswissfcharset238fprq2 Swiss911 XCm BT CE;}{f1873fswissfcharset161fprq2 Swiss911 XCm BT Greek;}{f1874fswissfcharset162fprq2 Swiss911 XCm BT Tur;}{f1878fswissfcharset238fprq2 Kabel Bk BT CE;}
{f1881fswissfcharset161fprq2 Kabel Bk BT Greek;}{f1882fswissfcharset162fprq2 Kabel Bk BT Tur;}{f1886fswissfcharset238fprq2 Humanst521 BT CE;}{f1889fswissfcharset161fprq2 Humanst521 BT Greek;}
{f1890fswissfcharset162fprq2 Humanst521 BT Tur;}{f1902fromanfcharset238fprq2 PosterBodoni BT CE;}{f1905fromanfcharset161fprq2 PosterBodoni BT Greek;}{f1906fromanfcharset162fprq2 PosterBodoni BT Tur;}
{f1910fdecorfcharset238fprq2 LcdD CE;}{f1914fdecorfcharset162fprq2 LcdD Tur;}}{colortbl;red0green0blue0;red0green0blue255;red0green255blue255;red0green255blue0;red255green0blue255;red255green0blue0;red255green255blue0;
red255green255blue255;red0green0blue128;red0green128blue128;red0green128blue0;red128green0blue128;red128green0blue0;red128green128blue0;red128green128blue128;red192green192blue192;red224green224blue224;}{stylesheet{
ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 snext0 Normal;}{s1ql li0ri0sb240sa60keepnwidctlparfaautoadjustrightrin0lin0itap0 
bf1fs36lang1033langfe1033kerning36cgridlangnp1033langfenp1033 sbasedon0 snext0 heading 1;}{s2ql li0ri0sb240sa60keepnwidctlparfaautoadjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 
sbasedon0 snext0 heading 2;}{s3ql li0ri0sb240sa60keepnwidctlparfaautoadjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 heading 3;}{
s4ql li0ri0sb240sa60keepnwidctlparfaautoadjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 heading 4;}{*cs10 additive Default Paragraph Font;}{
s15qc li0ri0sb240sa60widctlparfaautooutlinelevel0adjustrightrin0lin0itap0 bf1fs32lang1033langfe1033kerning28cgridlangnp1033langfenp1033 sbasedon0 snext15 Title;}{
s16qc li0ri0sa60widctlparfaautooutlinelevel1adjustrightrin0lin0itap0 f1fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext16 Subtitle;}{s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
fs22lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext17 BodyText;}{s18ql li0ri0widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext18 DenseText;}{s19ql li0ri0widctlpar
tqctx4320tqrtx8640faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext19 header;}{s20qr li0ri0widctlpartqctx4320tqrtx8640faautoadjustrightrin0lin0itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext20 footer;}{s21ql li360ri0sb120sa60keepnwidctlparfaautoadjustrightrin0lin360itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext21 
GroupHeader;}{s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext23 Code Example 0;}{
s23ql li360ri0widctlparfaautoadjustrightrin0lin360itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext24 Code Example 1;}{s24ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 
shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext25 Code Example 2;}{s25ql li1080ri0widctlparfaautoadjustrightrin0lin1080itap0 shading1000cbpat8 
f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext26 Code Example 3;}{s26ql li1440ri0widctlparfaautoadjustrightrin0lin1440itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 
sbasedon0 snext27 Code Example 4;}{s27ql li1800ri0widctlparfaautoadjustrightrin0lin1800itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext28 Code Example 5;}{
s28ql li2160ri0widctlparfaautoadjustrightrin0lin2160itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext29 Code Example 6;}{s29ql li2520ri0widctlparfaautoadjustrightrin0lin2520itap0 
shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext30 Code Example 7;}{s30ql li2880ri0widctlparfaautoadjustrightrin0lin2880itap0 shading1000cbpat8 
f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext31 Code Example 8;}{s31ql li3240ri0widctlparfaautoadjustrightrin0lin3240itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 
sbasedon0 snext31 Code Example 9;}{s32qj li0ri0sb30sa60widctlparfaautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext33 List Continue 0;}{
s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext34 List Continue 1;}{s34qj li720ri0sb30sa60widctlparfaautoadjustrightrin0lin720itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext35 List Continue 2;}{s35qj li1080ri0sb30sa60widctlparfaautoadjustrightrin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext36 
List Continue 3;}{s36qj li1440ri0sb30sa60widctlparfaautoadjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext37 List Continue 4;}{
s37qj li1800ri0sb30sa60widctlparfaautoadjustrightrin0lin1800itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext38 List Continue 5;}{s38qj li2160ri0sb30sa60widctlparfaautoadjustrightrin0lin2160itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext39 List Continue 6;}{s39qj li2520ri0sb30sa60widctlparfaautoadjustrightrin0lin2520itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext40 
List Continue 7;}{s40qj li2880ri0sb30sa60widctlparfaautoadjustrightrin0lin2880itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext41 List Continue 8;}{
s41qj li3240ri0sb30sa60widctlparfaautoadjustrightrin0lin3240itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext41 List Continue 9;}{s42ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext43 DescContinue 0;}{s43ql li360ri0widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext44 DescContinue 1;}{
s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext45 DescContinue 2;}{s45ql li1080ri0widctlparfaautoadjustrightrin0lin1080itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext46 DescContinue 3;}{s46ql li1440ri0widctlparfaautoadjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext47 DescContinue 4;}{
s47ql li1800ri0widctlparfaautoadjustrightrin0lin1800itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext48 DescContinue 5;}{s48ql li2160ri0widctlparfaautoadjustrightrin0lin2160itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext49 DescContinue 6;}{s49ql li2520ri0widctlparfaautoadjustrightrin0lin2520itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext50 DescContinue 7;}{
s50ql li2880ri0widctlparfaautoadjustrightrin0lin2880itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext51 DescContinue 8;}{s51ql li3240ri0widctlparfaautoadjustrightrin0lin3240itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext51 DescContinue 9;}{s52ql li0ri0sb30sa30widctlpartqrtldottx8640faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 
sbasedon0 snext63 LatexTOC 0;}{s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext64 LatexTOC 1;}{s54ql li720ri0sb24sa24widctlpar
tqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext65 LatexTOC 2;}{s55ql li1080ri0sb21sa21widctlpartqrtldottx8640faautoadjustrightrin0lin1080itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext66 LatexTOC 3;}{s56ql li1440ri0sb18sa18widctlpartqrtldottx8640faautoadjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 
sbasedon0 snext67 LatexTOC 4;}{s57ql li1800ri0sb15sa15widctlpartqrtldottx8640faautoadjustrightrin0lin1800itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext68 LatexTOC 5;}{
s58ql li2160ri0sb12sa12widctlpartqrtldottx8640faautoadjustrightrin0lin2160itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext69 LatexTOC 6;}{s59ql li2520ri0sb9sa9widctlpar
tqrtldottx8640faautoadjustrightrin0lin2520itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext70 LatexTOC 7;}{s60ql li2880ri0sb6sa6widctlpartqrtldottx8640faautoadjustrightrin0lin2880itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext71 LatexTOC 8;}{s61ql li3240ri0sb3sa3widctlpartqrtldottx8640faautoadjustrightrin0lin3240itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 
sbasedon0 snext71 LatexTOC 9;}{s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbodyilvl0ls1nrnot0ndec }faautols1adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext63 sautoupd 
List Bullet 0;}{s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbodyilvl0ls2nrnot0ndec }faautols2adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext64 sautoupd List Bullet 1;}{
s64ql fi-360li1080ri0widctlparjclisttabtx1080{*n nlvlbodyilvl0ls3nrnot0ndec }faautols3adjustrightrin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext65 sautoupd List Bullet 2;}{
s65ql fi-360li1440ri0widctlparjclisttabtx1440{*n nlvlbodyilvl0ls4nrnot0ndec }faautols4adjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext66 sautoupd List Bullet 3;}{
s66ql fi-360li1800ri0widctlparjclisttabtx1800{*n nlvlbodyilvl0ls5nrnot0ndec }faautols5adjustrightrin0lin1800itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext67 sautoupd List Bullet 4;}{
s67ql fi-360li2160ri0widctlparjclisttabtx2160{*n nlvlbodyilvl0ls6nrnot0ndec }faautols6adjustrightrin0lin2160itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext68 sautoupd List Bullet 5;}{
s68ql fi-360li2520ri0widctlparjclisttabtx2520{*n nlvlbodyilvl0ls7nrnot0ndec }faautols7adjustrightrin0lin2520itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext69 sautoupd List Bullet 6;}{
s69ql fi-360li2880ri0widctlparjclisttabtx2880{*n nlvlbodyilvl0ls8nrnot0ndec }faautols8adjustrightrin0lin2880itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext70 sautoupd List Bullet 7;}{
s70ql fi-360li3240ri0widctlparjclisttabtx3240{*n nlvlbodyilvl0ls9nrnot0ndec }faautols9adjustrightrin0lin3240itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext71 sautoupd List Bullet 8;}{
s71ql fi-360li3600ri0widctlparjclisttabtx3600{*n nlvlbodyilvl0ls10nrnot0ndec }faautols10adjustrightrin0lin3600itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext71 sautoupd List Bullet 9;}{
s72ql fi-360li360ri0widctlparfaautorin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext73 sautoupd List Enum 0;}{s73ql fi-360li720ri0widctlparfaautorin0lin720itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext74 sautoupd List Enum 1;}{s74ql fi-360li1080ri0widctlparfaautorin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext75 sautoupd 
List Enum 2;}{s75ql fi-360li1440ri0widctlparfaautorin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext76 sautoupd List Enum 3;}{s76ql fi-360li1800ri0widctlparfaautorin0lin1800itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext77 sautoupd List Enum 4;}{s77ql fi-360li2160ri0widctlparfaautorin0lin2160itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext78 sautoupd 
List Enum 5;}{s78ql fi-360li2520ri0widctlparfaautorin0lin2520itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext78 sautoupd List Enum 51;}{s79ql fi-360li2880ri0widctlparfaautorin0lin2880itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext80 sautoupd List Enum 7;}{s80ql fi-360li3240ri0widctlparfaautorin0lin3240itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext81 sautoupd 
List Enum 8;}{s81ql fi-360li3600ri0widctlparfaautorin0lin3600itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext81 sautoupd List Enum 9;}{s82ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 sautoupd toc 1;}{s83ql li200ri0widctlparfaautoadjustrightrin0lin200itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 sautoupd toc 2;}{
s84ql fi-200li200ri0widctlparfaautoadjustrightrin0lin200itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 sautoupd index 1;}{s85ql fi-200li400ri0widctlparfaautoadjustrightrin0lin400itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 sbasedon0 snext0 sautoupd index 2;}}{*listtable{listlisttemplateid550518796listsimple{listlevellevelnfc23levelnfcn23leveljc0leveljcn0levelfollow0levelstartat1levelspace0levelindent0
{leveltext'01u-3913 ?;}{levelnumbers;}f3chbrdrbrdrnonebrdrcf1 chshdng0chcfpat1chcbpat1fbias0 fi-360li1800jclisttabtx1800 }{listname ;}listid-128}{listlisttemplateid-509199276listsimple{listlevellevelnfc23levelnfcn23leveljc0
leveljcn0levelfollow0levelstartat1levelspace0levelindent0{leveltext'01u-3913 ?;}{levelnumbers;}f3chbrdrbrdrnonebrdrcf1 chshdng0chcfpat1chcbpat1fbias0 fi-360li1440jclisttabtx1440 }{listname ;}listid-127}{listlisttemplateid296898546
listsimple{listlevellevelnfc23levelnfcn23leveljc0leveljcn0levelfollow0levelstartat1levelspace0levelindent0{leveltext'01u-3913 ?;}{levelnumbers;}f3chbrdrbrdrnonebrdrcf1 chshdng0chcfpat1chcbpat1fbias0 fi-360li1080jclisttabtx1080 }
{listname ;}listid-126}{listlisttemplateid461550424listsimple{listlevellevelnfc23levelnfcn23leveljc0leveljcn0levelfollow0levelstartat1levelspace0levelindent0{leveltext'01u-3913 ?;}{levelnumbers;}f3chbrdrbrdrnonebrdrcf1 
chshdng0chcfpat1chcbpat1fbias0 fi-360li720jclisttabtx720 }{listname ;}listid-125}}{*listoverridetable{listoverridelistid-125listoverridecount0ls1}{listoverridelistid-126listoverridecount0ls2}{listoverridelistid-127
listoverridecount0ls3}{listoverridelistid-128listoverridecount0ls4}{listoverridelistid-125listoverridecount0ls5}{listoverridelistid-126listoverridecount0ls6}{listoverridelistid-127listoverridecount0ls7}{listoverridelistid-128
listoverridecount0ls8}}{*revtbl {Unknown;}}{info{title Robotic Platform Reference Manual}{author Generated by Doxygen}{operator S}{creatimyr2001mo3dy30hr18min42}{revtimyr2001mo3dy30hr19min28}{intimyr2001mo3dy30hr19min26}{version5}{edmins47}
{nofpages121}{nofwords36165}{nofchars206145}{*company Clemson University}{nofcharsws253160}{vern8269}}margl720margr720margt720margb1008 
widowctrlftnbjaenddocnoxlattoyenexpshrtnnoultrlspcdntblnsbdbnospaceforulhyphcaps0horzdocdghspace120dgvspace120dghorigin1701dgvorigin1984dghshow0dgvshow3jcompressviewkind1viewscale100nolnhtadjtbl fet0sectd 
gnlcrmlinex0sectdefaultcl {footer ardlain s20qr li0ri0widctlpartqctx4320tqrtx8640faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {chpgn 
ar }}{*nseclvl1nucrmnstart1nindent720nhang{ntxta .}}{*nseclvl2nucltrnstart1nindent720nhang{ntxta .}}{*nseclvl3ndecnstart1nindent720nhang{ntxta .}}{*nseclvl4nlcltrnstart1nindent720nhang{ntxta )}}
{*nseclvl5ndecnstart1nindent720nhang{ntxtb (}{ntxta )}}{*nseclvl6nlcltrnstart1nindent720nhang{ntxtb (}{ntxta )}}{*nseclvl7nlcrmnstart1nindent720nhang{ntxtb (}{ntxta )}}{*nseclvl8
nlcltrnstart1nindent720nhang{ntxtb (}{ntxta )}}{*nseclvl9nlcrmnstart1nindent720nhang{ntxtb (}{ntxta )}}ardlain s15qc li0ri0sb240sa60widctlparfaautooutlinelevel0adjustrightrin0lin0itap0 
bf1fs32lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {field{*fldinst {TITLE \*MERGEFORMAT}}{fldrslt {Robotic Platform Reference Manual}}}{
ar }ardlain s16qc li0ri0sa60widctlparfaautooutlinelevel1adjustrightrin0lin0itap0 f1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {field{*fldinst {AUTHOR \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof Generated by 
Doxygen}}}{
ar }{field{*fldinst {CREATEDATE \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 3/30/01 6:42 PM}}}{
ar }ardlain s82ql li0ri0widctlpartqrtldottx8630faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fieldfldedit{*fldinst {TOC \f \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 
Hierarchical Indextab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614426 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400320036000000}}}{fldrslt {lang1024langfe1024noproof ii}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Compound Indextab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614427 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400320037000000}}}{fldrslt {lang1024langfe1024noproof iii}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Class Documentationtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614428 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400320038000000}}}{fldrslt {lang1024langfe1024noproof 2}}}{fs24lang1024langfe1024noproof 
ar }ardlain s83ql li200ri0widctlpartqrtldottx8630faautoadjustrightrin0lin200itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {lang1024langfe1024noproof Clienttab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF 
_Toc510614429 \h }{lang1024langfe1024noproof {*datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400320039000000}}}{fldrslt {lang1024langfe1024noproof 2}}}{
fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof ColumnVectortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614430 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330030000000}}}{fldrslt {lang1024langfe1024noproof 6}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Differentiatortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614431 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330031000000}}}{fldrslt {lang1024langfe1024noproof 12}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof FunctionalObjecttab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614432 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330032000000}}}{fldrslt {lang1024langfe1024noproof 15}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof HighpassFiltertab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614433 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330033000000}}}{fldrslt {lang1024langfe1024noproof 17}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Integratortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614434 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330034000000}}}{fldrslt {lang1024langfe1024noproof 21}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof LowpassFiltertab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614435 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330035000000}}}{fldrslt {lang1024langfe1024noproof 24}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof ManipulatorModeltab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614436 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330036000000}}}{fldrslt {lang1024langfe1024noproof 29}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof MathExceptiontab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614437 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330037000000}}}{fldrslt {lang1024langfe1024noproof 34}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Matrixtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614438 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330038000000}}}{fldrslt {lang1024langfe1024noproof 38}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof MatrixBasetab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614439 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400330039000000}}}{fldrslt {lang1024langfe1024noproof 47}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof ObjectManagertab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614440 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340030000000}}}{fldrslt {lang1024langfe1024noproof 49}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof PhysicalObjecttab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614441 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340031000000}}}{fldrslt {lang1024langfe1024noproof 54}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof RoboticObjecttab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614442 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340032000000}}}{fldrslt {lang1024langfe1024noproof 64}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof RoboticPlatformtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614443 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340033000000}}}{fldrslt {lang1024langfe1024noproof 72}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof RowVectortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614444 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340034000000}}}{fldrslt {lang1024langfe1024noproof 77}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof SceneViewertab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614445 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340035000000}}}{fldrslt {lang1024langfe1024noproof 81}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Servertab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614446 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340036000000}}}{fldrslt {lang1024langfe1024noproof 83}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Statustab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614447 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340037000000}}}{fldrslt {lang1024langfe1024noproof 87}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof TrajectoryGeneratortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614448 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340038000000}}}{fldrslt {lang1024langfe1024noproof 91}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Transformtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614449 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400340039000000}}}{fldrslt {lang1024langfe1024noproof 94}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof TypeInfotab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614450 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350030000000}}}{fldrslt {lang1024langfe1024noproof 97}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof TypeInfoAbstractTtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614451 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350031000000}}}{fldrslt {lang1024langfe1024noproof 103}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof TypeInfoTtab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614452 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350032000000}}}{fldrslt {lang1024langfe1024noproof 105}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof Vectortab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614453 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350033000000}}}{fldrslt {lang1024langfe1024noproof 107}}}{fs24lang1024langfe1024noproof 
ar }{lang1024langfe1024noproof VectorBasetab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF _Toc510614454 \h }{lang1024langfe1024noproof {*datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350034000000}}}{fldrslt {lang1024langfe1024noproof 109}}}{fs24lang1024langfe1024noproof 
ar }ardlain s82ql li0ri0widctlpartqrtldottx8630faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {lang1024langfe1024noproof Indextab }{field{*fldinst {lang1024langfe1024noproof  PAGEREF 
_Toc510614455 \h }{lang1024langfe1024noproof {*datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003500310030003600310034003400350035000000}}}{fldrslt {lang1024langfe1024noproof 112}}}{
fs24lang1024langfe1024noproof 
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 }}ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar sect }sectd gnlcrmlinex0sectdefaultcl ardlain s1ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel0adjustrightrin0lin0itap0 bf1fs36lang1033langfe1033kerning36cgridlangnp1033langfenp1033 {Robotic Platform Hierarchical Index

ar }ardlain s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bvf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {tc {{*bkmkstart _Toc510614426}Hierarchical Index{*bkmkend _Toc510614426}}}}{
Robotic Platform Class Hierarchy
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {This inheritance list is sorted roughly, but not completely, alphabetically:
ar }ardlain s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Clienttab }{field{*fldinst {PAGEREF class_Client \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 2}}}{
ar Differentiatortab }{field{*fldinst {PAGEREF class_Differentiator \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 12}}}{
ar HighpassFiltertab }{field{*fldinst {PAGEREF class_HighpassFilter \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 17}}}{
ar Integratortab }{field{*fldinst {PAGEREF class_Integrator \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 21}}}{
ar LowpassFiltertab }{field{*fldinst {PAGEREF class_LowpassFilter \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 24}}}{
ar ManipulatorModeltab }{field{*fldinst {PAGEREF class_ManipulatorModel \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 29}}}{
ar MathExceptiontab }{field{*fldinst {PAGEREF class_MathException \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 34}}}{
ar MatrixBasetab }{field{*fldinst {PAGEREF class_MatrixBase \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 47}}}{
ar }ardlain s54ql li720ri0sb24sa24widctlpartqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Matrixtab }{field{*fldinst {PAGEREF class_Matrix \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 38}}}{
ar }ardlain s55ql li1080ri0sb21sa21widctlpartqrtldottx8640faautoadjustrightrin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {ColumnVectortab }{field{*fldinst {PAGEREF class_ColumnVector \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 6}}}{
ar }ardlain s56ql li1440ri0sb18sa18widctlpartqrtldottx8640faautoadjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Vectortab }{field{*fldinst {PAGEREF class_Vector \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 107}}}{
ar }ardlain s55ql li1080ri0sb21sa21widctlpartqrtldottx8640faautoadjustrightrin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {RowVectortab }{field{*fldinst {PAGEREF class_RowVector \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 77}}}{
ar Transformtab }{field{*fldinst {PAGEREF class_Transform \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 94}}}{
ar }ardlain s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {ObjectManagertab }{field{*fldinst {PAGEREF class_ObjectManager \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 49}}}{
ar RoboticObjecttab }{field{*fldinst {PAGEREF class_RoboticObject \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 64}}}{
ar }ardlain s54ql li720ri0sb24sa24widctlpartqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {FunctionalObjecttab }{field{*fldinst {PAGEREF class_FunctionalObject \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 15}}}{
ar }ardlain s55ql li1080ri0sb21sa21widctlpartqrtldottx8640faautoadjustrightrin0lin1080itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {TrajectoryGeneratortab }{field{*fldinst {PAGEREF class_TrajectoryGenerator \
*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 91}}}{
ar }ardlain s54ql li720ri0sb24sa24widctlpartqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {PhysicalObjecttab }{field{*fldinst {PAGEREF class_PhysicalObject \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 54}}}{
ar }ardlain s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {RoboticPlatformtab }{field{*fldinst {PAGEREF class_RoboticPlatform \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 72}}}{
ar SceneViewertab }{field{*fldinst {PAGEREF class_SceneViewer \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 81}}}{
ar Servertab }{field{*fldinst {PAGEREF class_Server \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 83}}}{
ar Statustab }{field{*fldinst {PAGEREF class_Status \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 87}}}{
ar TypeInfotab }{field{*fldinst {PAGEREF class_TypeInfo \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 97}}}{
ar }ardlain s54ql li720ri0sb24sa24widctlpartqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {TypeInfoAbstractTtab }{field{*fldinst {PAGEREF class_TypeInfoAbstractT \*MERGEFORMAT}
}{fldrslt {lang1024langfe1024noproof 103}}}{
ar TypeInfoTtab }{field{*fldinst {PAGEREF class_TypeInfoT \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 105}}}{
ar }ardlain s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {VectorBasetab }{field{*fldinst {PAGEREF class_VectorBase \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 109}}}{
ar }ardlain s54ql li720ri0sb24sa24widctlpartqrtldottx8640faautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {ColumnVectortab }{field{*fldinst {PAGEREF class_ColumnVector \*MERGEFORMAT}}{fldrslt {
lang1024langfe1024noproof 6}}}{
ar RowVectortab }{field{*fldinst {PAGEREF class_RowVector \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 77}}}{
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd gnlcrmlinex0sectdefaultcl ardlain 
s1ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel0adjustrightrin0lin0itap0 bf1fs36lang1033langfe1033kerning36cgridlangnp1033langfenp1033 {Robotic Platform Compound Index
ar }ardlain s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bvf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {tc {{*bkmkstart _Toc510614427}Compound Index{*bkmkend _Toc510614427}}}}{
Robotic Platform Compound List
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {Here are the classes, structs, unions and interfaces with brief descriptions:
ar }ardlain s53ql li360ri0sb27sa27widctlpartqrtldottx8640faautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Client}{  (Message passing client)tab }{field{*fldinst {PAGEREF class_Client \
*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 2}}}{
ar }{b ColumnVector}{  (The class }{f2 ColumnVector}{ represents column vectors)tab }{field{*fldinst {PAGEREF class_ColumnVector \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 6}}}{
ar }{b Differentiator}{  (The class }{f2 Differentiator}{ provides numerical method for differentation)tab }{field{*fldinst {PAGEREF class_Differentiator \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 12}}}{
ar }{b FunctionalObject}{  (The base class of all functional robotic classes)tab }{field{*fldinst {PAGEREF class_FunctionalObject \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 15}}}{
ar }{b HighpassFilter}{  (High-pass second order butterworth filter)tab }{field{*fldinst {PAGEREF class_HighpassFilter \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 17}}}{
ar }{b Integrator}{  (The class }{f2 Integrator}{ provides the trapeziodal rule as a numerical method for integration by default)tab }{field{*fldinst {PAGEREF class_Integrator \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 21}}}{
ar }{b LowpassFilter}{  (The class }{f2 LowpassFilter}{ implements the template Filtering class)tab }{field{*fldinst {PAGEREF class_LowpassFilter \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 24}}}{
ar }{b ManipulatorModel}{  (This class provides basic robotic functions for a general manipulator)tab }{field{*fldinst {PAGEREF class_ManipulatorModel \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 29}}}{
ar }{b MathException}{  (The class }{f2 MathException}{ provides methods for handling run-time errors and exceptions in mathematical operations that use the functions of the matrix library)tab }{field{*fldinst {PAGEREF class_MathException \
*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 34}}}{
ar }{b Matrix}{  (The class }{f2 Matrix}{ provides methods for mathematical operations on matrices)tab }{field{*fldinst {PAGEREF class_Matrix \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 38}}}{
ar }{b MatrixBase}{  (This is a pure virtual base class for }{bf2 Matrix}{)tab }{field{*fldinst {PAGEREF class_MatrixBase \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 47}}}{
ar }{b ObjectManager}{  (Manages all robotic objects created)tab }{field{*fldinst {PAGEREF class_ObjectManager \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 49}}}{
ar }{b PhysicalObject}{  (The base class of all physical robotic classes)tab }{field{*fldinst {PAGEREF class_PhysicalObject \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 54}}}{
ar }{b RoboticObject}{  (The base class of all robotic classes)tab }{field{*fldinst {PAGEREF class_RoboticObject \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 64}}}{
ar }{b RoboticPlatform}{  (Overall management of Robotic Platform programs)tab }{field{*fldinst {PAGEREF class_RoboticPlatform \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 72}}}{
ar }{b RowVector}{  (The class }{f2 RowVector}{ represents row vectors)tab }{field{*fldinst {PAGEREF class_RowVector \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 77}}}{
ar }{b SceneViewer}{  (SceneViewer class makes use of the functionality provided by CSceneViewer)tab }{field{*fldinst {PAGEREF class_SceneViewer \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 81}}}{
ar }{b Server}{  (Message passing server)tab }{field{*fldinst {PAGEREF class_Server \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 83}}}{
ar }{b Status}{  (Allows to stack error codes and status messages)tab }{field{*fldinst {PAGEREF class_Status \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 87}}}{
ar }{b TrajectoryGenerator}{  (Base class for trajectory generator classes)tab }{field{*fldinst {PAGEREF class_TrajectoryGenerator \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 91}}}{
ar }{b Transform}{  (The class }{f2 Transform}{ represents a 4x4 transformation matrix)tab }{field{*fldinst {PAGEREF class_Transform \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 94}}}{
ar }{b TypeInfo}{  (Stores run-time type information (base class))tab }{field{*fldinst {PAGEREF class_TypeInfo \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 97}}}{
ar }{b TypeInfoAbstractT}{  (Stores run-time type information (template class for abstract classes))tab }{field{*fldinst {PAGEREF class_TypeInfoAbstractT \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 103}}}{
ar }{b TypeInfoT}{  (Stores run-time type information (template class))tab }{field{*fldinst {PAGEREF class_TypeInfoT \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 105}}}{
ar }{b Vector}{  (The class }{f2 Vector}{ provides functionally equivalent to a }{b ColumnVector}{ (}{i p.}{field{*fldinst {i PAGEREF class_ColumnVector \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 6}}}{) object)tab }{field{*fldinst 
{PAGEREF class_Vector \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 107}}}{
ar }{b VectorBase}{  (This is a pure virtual base class. The classes }{bf2 ColumnVector}{ and }{bf2 RowVector}{ are derived from this class)tab }{field{*fldinst {PAGEREF class_VectorBase \*MERGEFORMAT}}{fldrslt {lang1024langfe1024noproof 109}}}
{
ar 
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd gnrestartgnlcrmlinex0sectdefaultcl ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd sbknonelinex0sectdefaultcl {footer ardlain s20qr li0ri0widctlpartqctx4320tqrtx8640faautoadjustrightrin0lin0itap0 
fs20lang1033langfe1033cgridlangnp1033langfenp1033 {chpgn 
ar }}ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s1ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel0adjustrightrin0lin0itap0 bf1fs36lang1033langfe1033kerning36cgridlangnp1033langfenp1033 {Robotic Platform Class Documentation}{ardlain 
s1ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel0adjustrightrin0lin0itap0 bvf1fs36lang1033langfe1033kerning36cgridlangnp1033langfenp1033 {tc {{*bkmkstart _Toc510614428}Class Documentation{*bkmkend _Toc510614428}}}}{
ar }ardlain s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {Client  Class Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {Client}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614429}Client{*bkmkend _Toc510614429}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client}}}{{*bkmkstart class_Client}{*bkmkend class_Client}Message passing client. 
ar }{f2 #include <Client.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Client}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b Client}{ (const char *serverName, const char *serverFileName = 0, double startServerTimeout = 3)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {virtual }{b ~Client}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b connectToServer}{ (const char *serverName, const char *serverFilename = 0, double startServerTimeout = 3)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b sendMessage}{ (const void *msg, void *reply, int msgSize, int replySize)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b sendMessage}{ (const void *msg, int msgSize)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b sendMessage}{ (int msg, void *reply, int replySize)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b sendMessage}{ (int msg)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b sendMessage}{ (const void *msg, int msgSize, }{b Status}{ &status)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b sendMessage}{ (int msg, }{b Status}{ &status)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {const char* }{b getServerName}{ ()
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {Message passing client.
ar 
ar The class Client is responsible for the client side of a client/server relationship. In a client server relationship, a program is designated the server. The server registers itself under a uni
que server name and waits for messages. The client finds the server by its name, connects to it, and sends messages to the server. The server receives messages, processes them and sends a reply back to the client.
ar The class Client provides a platform-independent wrapper for client functionality. It provides functionality to find the server by its name, and send messages in various formats to the server.
ar }{b Example Programs:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//========================================================================line // Project:
 QRTS Utility Librariesline // ----------------------------------------------------------------------line // Package: Client/Serverline // Authors: Markus Lofflerline // ----------------------------------------------------------------------line 
// File: Client.t.cppline // Example for the Client class.line //========================================================================line line #include <iostream.h>line #include "Client.hpp"line line line int main()line {line 
  cout << "Client..." << endl;line   line   Client client("qrts/testserver", "Server.t");line   if (client.d_status.isStatusError())line   {line     cout << client.d_status.getMessageText() << endl;line     return -1;line   }line   line 
  client.sendMessage(10);line   char *text = "This is text as a message";line   cout << client.sendMessage(text, strlen(text)) << endl;line   line   Status status;line   client.sendMessage(1, status);line   cout << "MESSAGE 1" << endl;line 
  cout << "Message Text: " << status.getMessageText() << endl;line   cout << "Error Code:   " << status.getStatusErrorCode() << endl << endl;line     line   status.setStatusOk();line   client.sendMessage(2, status);line   cout << "MESSAGE 2" << endl;
line   cout << "Message Text: " << status.getMessageText() << endl;line   cout << "Error Code:   " << status.getStatusErrorCode() << endl << endl;line line   client.sendMessage(0);line   line   return 0;line }line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:Client}}}{Client::Client ()
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a0}{*bkmkend class_Client_a0}
Creates the Client object, but does not connect to the server. You must use the }{b connectToServer}{() (}{i p.}{field{*fldinst {i PAGEREF class_Client_a3 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 3}}}{
) function before using any of the }{b sendMessage}{() (}{i p.}{field{*fldinst {i PAGEREF class_Client_a4 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 3}}}{) functions. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:Client}}}{Client::Client (const char * }{i serverName}{, const char * }{i 
serverFileName}{ = 0, double }{i startServerTimeout}{ = 3)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a1}{*bkmkend class_Client_a1}
Creates the Client object and connects to a server. See }{b connectToServer}{() (}{i p.}{field{*fldinst {i PAGEREF class_Client_a3 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 3}}}{
) for a detailed description of the connection process. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi serverName}{   The name under which the server is registered 
ar }{bi serverFileName}{   The filename of the server program 
ar }{bi startServerTimeout}{   If the server couldn't be located after this timeout (in seconds), the status is set to error and the function returns 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~Client:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:~Client}}}{Client::~Client ()}{f2  [virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a2}{*bkmkend class_Client_a2}Disconnects from the server. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {connectToServer:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:connectToServer}}}{void Client::connectToServer (const char * }{i serverName}{
, const char * }{i serverFilename}{ = 0, double }{i startServerTimeout}{ = 3)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a3}{*bkmkend class_Client_a3}
Tries to connect to the server. If the server can't be found, and a }{i serverFilename}{ is specified,  this function tries to start the specified program and tries to connect again. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi serverName}{   The name under which the server is registered 
ar }{bi serverFileName}{   The filename of the server program 
ar }{bi startServerTimeout}{   If the server couldn't be located after this timeout (in seconds), the status is set to error and the function returns 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{void Client::sendMessage (const void * }{i msg}{, void * }{i reply}{
, int }{i msgSize}{, int }{i replySize}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a4}{*bkmkend class_Client_a4}S
ends a message to the server and receives a reply. This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   Start address of the message 
ar }{bi reply}{   Start address of the reply buffer 
ar }{bi msgSize}{   Size of the message (in bytes) 
ar }{bi replySize}{   Size of the reply buffer (in bytes) 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{int Client::sendMessage (const void * }{i msg}{, int }{i msgSize}{)

ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a5}{*bkmkend class_Client_a5}
Sends a message to the server and receives an integer reply. This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   Start address of the message 
ar }{bi msgSize}{   Size of the message (in bytes) 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { The integer reply received from the server 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{void Client::sendMessage (int }{i msg}{, void * }{i reply}{, int }{
i replySize}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a6}{*bkmkend class_Client_a6}
Sends a message to the server that only consists of an integer value and receives a reply. This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   The integer value to send to the server 
ar }{bi reply}{   Start address of the reply buffer 
ar }{bi replySize}{   Size of the reply buffer (in bytes) 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{int Client::sendMessage (int }{i msg}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a7}{*bkmkend class_Client_a7}
Sends a message to the server that only consists of an integer value and receives an integer reply. This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   The integer value to send to the server 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { The integer reply received from the server 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{void Client::sendMessage (const void * }{i msg}{, int }{i msgSize}{
, Status & }{i status}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a8}{*bkmkend class_Client_a8}
Sends a message to the server and receives a status reply. If the received status is "Error", then the status message is added to }{i status}{. Note that all stacked status messages are combined by the server and send as on
e status message, and the error code of the last status message is used. This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   Start address of the message 
ar }{bi msgSize}{   Size of the message (in bytes) 
ar }{bi status}{   A status object. The received error message will be  added to this status object (only in case of error) 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {sendMessage:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:sendMessage}}}{void Client::sendMessage (int }{i msg}{, Status & }{i status}{)

ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a9}{*bkmkend class_Client_a9}
Sends a integer message to the server and receives a status reply. If the received status is "Error", then the status message is added to }{i status}{
.  Note that all stacked status messages are combined by the server and send as one status message, and the error code This function will block until the server sends the reply.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi msg}{   The integer value to send to the server 
ar }{bi status}{   A status object. The received error message will be  added to this status object (only in case of error) 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getServerName:Client}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Client:getServerName}}}{const char * Client::getServerName ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Client_a10}{*bkmkend class_Client_a10}Returns the name of the server. 
ar }{b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { The server name. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Client.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {ColumnVector  Class Template Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {ColumnVector}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614430}ColumnVector{*bkmkend _Toc510614430}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector}}}{{*bkmkstart class_ColumnVector}{*bkmkend class_ColumnVector}The class }{f2 ColumnVector}{ represents column vectors. 
ar }{f2 #include <ColumnVector.hpp>}{
ar Inheritance diagram for ColumnVector
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard qc li0ri0nowidctlparfaautorin0lin0itap0 {fieldflddirty{*fldinst {INCLUDEPICTURE class_ColumnVector.gif \*MERGEFORMAT}}{fldrslt {{*shppict{ict{*icpropshplid1095{sp{sn shapeType}{sv 75}}{sp{sn fFlipH}{sv 0}}
{sp{sn fFlipV}{sv 0}}{sp{sn pibName}{sv class_ColumnVector.gif}}{sp{sn pibFlags}{sv 2}}{sp{sn pictureGray}{sv 0}}{sp{sn pictureBiLevel}{sv 0}}{sp{sn fFilled}{sv 0}}{sp{sn fHitTestFill}{sv 1}}{sp{sn fillShape}{sv 1}}
{sp{sn fillUseRect}{sv 0}}{sp{sn fNoFillHitTest}{sv 0}}{sp{sn fLine}{sv 0}}{sp{sn fReallyHidden}{sv 0}}{sp{sn fScriptAnchor}{sv 0}}{sp{sn fFakeMaster}{sv 0}}{sp{sn fLayoutInCell}{sv 1}}}
icscalex100icscaley100iccropl0iccropr0iccropt0iccropb0icw6350ich5080icwgoal3600ichgoal2880ngblipbliptag2039567989{*blipuid 79915675d9a5f08360a0633daa1ff279}
89504e470d0a1a0a0000000d49484452000000f0000000c00403000000c801f30c00000018504c5445ffffff000000ffffc09f9f60900000009000000090c0c0
c07bc2ffe40000000174524e530040e6d86600000001624b47440088051d480000000c636d50504a436d7030373132000000074f6db7a5000002f24944415478
daeddb6d729b301006603399f16f5637907a814e3bd3f3e417f73f42b5da057d402801245cf3ae63823fc483a475c6ce5a8fdf7be3e7e358fc723b0330e04db0
d56bdc2132a56489e874d82b34c2214cdc8d919dcb89b02547c6faf004c3fe369f4eec7b05d8f28f71c6fff657fe717a9bef92335398ce879d288ceb1c1b36e5
8ed8633a35b90c9b1461196a132680d41d879ace86cdd8e338d4d2e99a3db62ec26372b59863b990e5d40a30cfb1bf5d3bab2ffbcb051830e033e0cbdedeaec5
b3e2b15f131e3e6f063f87e166f00db31a3060c0800103060c183060c0dbe2d807f38fddcd0ffe2be2636feb1f80ef01cfab4e53987c97927254846d56360a61
b3129544da586153569d16421a25cf58878bffaabba2710aa755277d22d706b82062a6432ec2a178118a54261cc4e941784f1ef80a9e559da406116a225a9448
61295014b01634a4aac187305359251b50adab24705a759a6a1f46cb15798fc3c34b703c4698633971eebb2b1a8fc955549df4acacd141a472a8f90909cca74d
94c161a8494b67940d75387a02a755a7511638499be51e6b5e14b0d48de4d5f0558fcbaa539c63adf1adcfb18e689c63b7718e6755a75956db69c697b23a7457
2a5492d5323d64cc7a566f081b477b09fe7e6c8593096e0b2f0460c02f0b5ff6f6b6e21bfacfdd2d2f838f957f9efb4b2957c107cb3fc3eef3be0cbe61560306
0cf80de0e150ec87eb0e0860c080010306fcbfc1b437fa83f0eef680016f6f4f343f601f6f77b5e04ef79bc361c7bf3afbce1b3d6fbbfec1fb7c67477eeb37fe
812a703079439da7c39e5cc2f9f8cd83eaf478827bfd1d61d113ae2ecc43dbf9acbb069607abc1aca84911ee1ef91c5780c3eb9842027519ac59dd495657805b
35040c18f0d9f0656f6fd7e23d3f49ac059643bd3d7cc3ac060c183060c0800103060c18f0b658fb4ee79f7f7e5ff4401cfb862c60c0df83175619bd39bcb0bc
a9219c2f6f6a0d4f8b7d1ac1f3e54d0d61932d6f6a04cf97373584f3e54dade02d011830e097818f2d875a89bfccfa2fa88ea664150000000049454e44ae426082}}{nonshppict{icticscalex100icscaley100iccropl0iccropr0iccropt0iccropb0
icw6350ich5080icwgoal3600ichgoal2880wmetafile8bliptag2039567989{*blipuid 79915675d9a5f08360a0633daa1ff279}0100090000038c3900000000422d000000000400000003010800050000000b0200000000050000000c02c000f00005000000070104000000260c0000430f8600
ee000000c000f00000000000c000f0000000000028000000f0000000c0000000010001000000000000180000c40e0000c40e0000020000000200000000000000
ffffff000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
000000000000000000000003ffffffffffffffffffffffffffff800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000007c0000000000000000000000000
00000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000380000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
000000000000000000000003ffffffffffffffffffffffffffff8000000000000000000000000000000000020000000000000000000000000000800000000000
00000000000000000000000200000000000000000000000000008000000000000000000000000000000000020000000000000000000000000000800000000000
00000000000000000000000200000000000000000000000000008000000000000000000000000000000000020000000000000000000000000000800000000000
00000000000000000000000200000000000000000000000000008000000000000000000000000000000000020000000000000000000000000000800000000000
000000000000000000000002000000000000000000000000000080000000000000000000000000000000000200003c388d2491040e1c67080000800000000000
0000000000000000000000020000424493249104112248880000800000000000000000000000000000000002000080449124910a102048880000800000000000
000000000000000000000002000080449124910a1f20488800008000000000000000000000000000000000020000804491249111112048880000800000000000
00000000000000000000000200008044913699111122488c000080000000000000000000000000000000000200008038912916110e1ce70a0000800000000000
000000000000000000000002000042008000002080004000000080000000000000000000000000000000000200003c0080000020800040000000800000000000
00000000000000000000000200000000000000000000000000008000000000000000000000000000000000020000000000000000000000000000800000000000
00000000000000000000000200000000000000000000000000008000000000000000000000000000000000020000000000000000000000000000800000000000
0000000000000000000000020000000000000000000000000000800000000000000000000000000000000003ffffffffffffffffffffffffffff800000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
000000000000000000000000000000000000010000000000000000000000000000000000000000000000007ffffffffffffffffffffffffffffffe0000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
0000000000000000000001f000000000000000000000000000000f80000000000000000000000000000001f000000000000000000000000000000f8000000000
0000000000000000000000e000000000000000000000000000000700000000000000000000000000000000e00000000000000000000000000000070000000000
00000000000000000000004000000000000000000000000000000200000000000000000000000000000000400000000000000000000000000000020000000000
00000000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffe007ffffffffffffffffffffffff
ffff0000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
0000000000000000000001f000000000000000000000000000000000000000000000000000000000000001f00000000000000000000000000000000000000000
0000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000
00000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000ffffffffffffffffffffffffffffe00000000000000000000000000000000000ffffffffffffffffffffffffffffe000000000000000000000000000
00000000422d0000430fc60088000000c000f00000000000c000f0000000000028000000f0000000c0000000010004000000000000720000c40e0000c40e0000
100000000800000000000000900000000000900000900000609f9f00c0c0c000c0ffff00ffffff00ffffff00ffffff00ffffff00ffffff00ffffff00ffffff00
ffffff00ffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff44444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666666666666666666666666666666666666666666666666666
6666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff46666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff466666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
4fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666
6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666
666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666666666666666666666666666066666600066660006660066
0006666066666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666666666660666660666066066606606606660666066666666
666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff46666666666666666666666666666666666666666060666606666660666666066066606660666666666666666666666666
66666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff466666666666666666666666666666666666666660606666000006606666660660666066606666666666666666666666666666666666666666
4fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46
66666666666666666666666666666666666666066606660666066066666606606660666066666666666666666666666666666666666666664fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666
6666666666666666666666066606660666066066606606606660666006666666666666666666666666666666666666664fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666
666666066606666000666600066000660006666060666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666666666606666606666
66666666666606666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666666666666666666666666066666066666666666666660666
6666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff46666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff466666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
4fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666
6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4444444444444444444444444444444444
444444444444444444444441444444444444444444444444444444444444444444444444444444444fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff0000ffff000fff0fff0070ff0f70ff0f70ff70ffff70ff
ffff000fff7000ff700f7000ffff0fffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff70ffff0f70ff70ff0f70ff00ff0f70ff0f70ff70ffff70ffff70ff70ff0fff0f
70ff0fff0fff0fffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0fffffffffffffffff0fffffff70ff70ff0f70ff70ff0f70ff0f70ff70ffff0f0fff70ffffff0fffff70ff0fff0fff0fff
ffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff0fffffffffffffffff0fffffff70ff70ff0f70ff70ff0f70ff0f70ff70ffff0f0fff700000ff0fffff70ff0fff0fff0fffffffffffffffffff
0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0f
ffffffffffffffff0fffffff70ff70ff0f70ff70ff0f70ff0f70ff70ff70ff70ff70ff70ff0fffff70ff0fff0fff0fffffffffffffffffff0fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff
0fffffff70ff70ff0f70ff70ff00700f0f700f70ff70ff70ff70ff70ff0fff0f70ff0fff0fff00ffffffffffffffffff0fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff0fffffffff000fff
0f70ff70ff0f0f70ff70700fff70ff70ffff000fff7000ff000f7000ffff0f0fffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff70ffff0fffffffff0fffffffffffffff
ffffffffff0fffff0fffffffffffffff70ffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff0000ffffffffff0fffffffffffffffffffffffff0fffff
0fffffffffffffff70ffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7111111111111111111111111111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111111111111111111fffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff11111fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffff11111fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff111fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff7111ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7111ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1fffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
444fffffffff74444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffff7466
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666644666666666666666
666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffff74666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666446666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffff746666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666664466666666666666666666666666666666666666666666666
6666666666666666666666666666666666666666666666666666666666666666664fffffffff7466666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666644666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666666666666666666666664fffffffff74666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666446666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666664fffffffff746666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666664466666666666666666666666666666666666666666666666666666666666666666666666666606666666666066666666
6666666666666666664fffffffff7466666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666644666666666666666666666666666666666666666666666666666666666666666666666666666606666666666066666666666666666666666
664fffffffff74666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664
4666666066606660666000606006606660606666066666666666666006660660000666000666606666066666066660666666666666666666664fffffffff7466
66666666660666666000666600066600660006666066600000666600060660066660006666666666666666606666666666666666666666644666666066606660
660666066066606660606666066660066666660660660660666660666066666666066666666660666666666006666666664fffffffff74666666666666066666
06660660666066066066606660666066660660666066066066066606666600666666666066666666600666666666666446666660660606606606660660666066
60660660666006666666666660660666066660666666666666066666666660666666666660066666664fffffffff746666666666606066660666666066666606
60666066606660666606606660666660660666666600666666666660666666666660066666666664466666606606066066600006606660666066600660066666
6666666006660666066660000066666666066666666660666666666666600666664fffffffff7466666666666060666600000660666666066066606660666066
66066600006660066600000600666666666666606666666666666006666666644666666060666060666666066066606660666006666006666666660666660666
606660666066666666066666666660666666666660066666664fffffffff74666666666606660666066606606666660660666066606660000066666660660666
66066606660066666666666066666666666006666666666446666660606660606606660660666006606606606666600666666606606606666606606660666666
66066666666660666666666006666666664fffffffff746666666666066606660666066066606606606660666006606666066066606606606606660666660066
66666660666666666006666666666664466666600666660066600066000660606060666606666666666666600666066000066600066666666606666666666066
6666666666666666664fffffffff7466666666660666066660006666000660006600066660606066660666000666600666600066666666666666666066666666
66666666666666644666666006666600666666666066666666666666666666666666666666666666666666666666666600066666666660666666666666666666
664fffffffff74666666666066666066666666666666660666666666666660666606666666666666666666666666666666666660666666666666666666666664
4666666066666660666666666066666660666666666666666666666666660666666666666666666666066666660000000666666666666666664fffffffff7466
66666660666660666666666666666606666666666666600000666666666666666666666666666666666600000006666666666666666666644666666666666666
666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffff74666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666446666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffff746666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666664466666666666666666666666666666666666666666666666
6666666666666666666666666666666666666666666666666666666666666666664fffffffff7466666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666644666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666666666666666666666664fffffffff74666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666446666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666664fffffffff746666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444fffffffff7444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff111fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
444fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
4666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666
666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666666666666666666666666666666666
6666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff466666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff4666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
4666666666606660666066600060600660666060666606000006666000606600666600066666666666666666066666666666666666666666664fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666606660
666066066606606660666060666606066660660666066066066066606666600666666666066666666600666666666666664fffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46666666666066060660660666066066
60666066066066066660660666066666066066666660066666666666066666666666006666666666664fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666660660606606660000660666066606660066606
6660666000066600666000006006666666666666066666666666660066666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666606066606066666606606660666066600666000006666666066066
666066606660066666666666066666666666006666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff46666666666060666060660666066066600660660660660666606606660660660660666066666006
66666666066666666600666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff466666666660066666006660006600066060606066660606666066600066660066660006666666666666666606666666
6666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff4666666666600666660066666666606666666666666666066660666666666666666666666666666666666666066666666666666666666666
664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
4666666666606666666066666666606666666066666666000006666666666666666666666666666666666000000066666666666666666666664fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666
666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff466666666666666666666666666666666666666666666666
6666666666666666666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff46666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666664fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05000000070101000000030000000000}}}}}{
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b ColumnVector}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ColumnVector}{ (const }{b Matrix}{<size,1,T> &matrix)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ColumnVector}{ (const }{b Vector}{<size,T> &vector)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ~ColumnVector}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b length}{ () const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b getElement}{ (int elementPosition) const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setElement}{ (int elementPosition, T elementValue)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b getSize}{ () const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T& }{b operator()}{ (int elementPosition)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b operator()}{ (int elementPosition) const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {template<intanotherSize, classX> ColumnVector<size, T>& }{b operator=}{<anotherSize, X> (const ColumnVector<anotherSize, X> &columnVector)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {ColumnVector<size, T>& }{b operator=}{ (const }{b VectorBase}{<T> &vectorBase)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {MatrixInitializer<T> }{b operator=}{ (const T &elementValue)
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {template<int size, class T = double>  template class ColumnVector
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The class }{f2 ColumnVector}{ represents column vectors.
ar 
ar The class }{f2 ColumnVector}{ is derived from the base classes }{bf2 Matrix}{ and }{bf2 VectorBase}{.
ar The class }{f2 ColumnVector}{ defines the data type }{f2 ColumnVector}{ and provides methods for operations such as cross product, dot product  and element-by-element multiplication.
ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//========================================================================line // Project: Ro
botic Platformline // ----------------------------------------------------------------------line // Package      : The Math Libraryline // Authors      : Vilas Kumar Chitrakaranline // Start Date   : Wed Dec 20 11:08:28 GMT 2000line 
// Compiler     : GNU c++line // Operating System : QNX RTPline // ----------------------------------------------------------------------line // File: Vector.t.cppline // Example program for the vector classes.line 
//========================================================================line line //========================================================================line // Vector.t.cppline 
//------------------------------------------------------------------------line // \briefline // The file Vector.t.cpp is an example program that tests the vectorline // related functions provided in the Math Library for the Robotic Platform.line //
line //========================================================================line line line // ----- Standard Libaries -----line line #include <iostream.h>line line // ----- QRTS Libraries -----line line // ----- Project Includes -----line 
line #include "RowVector.hpp"line #include "ColumnVector.hpp"line #include "Vector.hpp"line line line int main()line {line   RowVector<3> R1;line   RowVector<3> R2;line   RowVector<3> R3;line line     // Two row-vector objects with elements
line     // of type double (default).line line   ColumnVector<3> C1;line   ColumnVector<3> C2;line   ColumnVector<3> C3;line line     // Two column-vector objects with elementsline     // of type double (default).line line 
  VectorBase<> &refV1 = C1;line   VectorBase<> &refV2 = R1;line     // Two references to objects of type VectorBase, line     // the base class of ColumnVector and Rowvector.line line   char a; line     //some dummy dumbo.line line 
//========================================================line // Input to vectors.line //--------------------------------------------------------line // Input all elements of the vector separated by whitespaceline // using over
loaded istream operator >>.line //  orline // Assign elements individually using overloaded () operator.line //  orline // You can also initialize a vector line // directly, for example, line // RowVector<3> R = 1,4,5;line 
//-------------------------------------------------------- line line   R1 = 23,67.9998, 86.2528;line   C2 = 543, 656, 9.999;line   // Initializing vectors directy.line line   cout << "Input row-vector R2: " << endl;line   cin >> R2;line line   
line   cout << "Input column-vector C1: " << endl;line   cin >> C1;line line line //========================================================line // Output of the elements of the vector.line //--------------------------------------------------------
line // The elements are output row-wise, separated by line // white-space.line //======================================================== line line   cout << " The Column vector C1: \n" << C1 << endl;line   cout << " The Row vector R1: \
n" << R1 << endl;line line //========================================================line // Simple arithmetic operations on vectors.line //--------------------------------------------------------line // Ari
thmetic operations between vectors are performed line // as in MATLAB. There is no need to do operations at theline // individual element level.line //========================================================line line C3 = C1 + C2; //Additionline 
cout << "C1 + C2: \n" << C3 << endl;line line C3 = C1 - C2; //Subtraction...if you didn't guess.line cout << "C1 - C2: \n" << C3 << endl;line line C3 = 2.345*C1; //Premultiplication by a scalarline cout <<  "2.345*C1: \n "<< C3 << endl;line 
C3 = C1*2.345; //Postmultiplication by a scalarline cout <<  "C1*2.345: \n "<< C3 << endl;line line C3 = C1/2.345; //Division by a scalarline cout <<  "C1/2.345: \n "<< C3 << endl;line cin >> a;line line //And the transpose of a column is a row.
line R3 = transpose(C1);line cout <<  "transpose(C1): \n "<< R3 << endl;line cin >> a;line line //============================================line // To find the component of C1 along C2line //============================================line 
line double component;line component = dotProduct(C1, C2);line cout << "dotProduct(C1, C2): " << component << endl;line cin >> a;line line //=============================================line // find a vector in a direction normal to C1 and C2line 
//=============================================line line ColumnVector<3> normal;line normal = crossProduct(C1, C2);line cout << "crossProduct(C1, C2): " << normal << endl;line cin >> a;line line // ColumnVector is defined only for 
3 dimensional vectors.line // You will cause a compiler error if you try to findline // cross-product of vectors of size not equal to 3.line line //================================================line // do this if you want to do element-by-element 
line // multiplication.line //================================================line line ColumnVector<3> anotherVector;line anotherVector = elementProduct(C1, C2);line cout << "elementProduct(C1, C2): " << anotherVector << endl;line cin >> a;line 
line //===================================================line // operations with base-classesline //===================================================line line // An object of the base class VectorBase<> can be line 
// instantiated and referenced to a ColumnVector or RowVector object.line line VectorBase<> &RefV1 = C1;line line // And you can assign between a v
ector object and a VectorBase object if both are same type (column or row vector) and have the same dimensions.line line C2 = RefV1; line //C2 now has values of C1.line line cout << "C2: " << C2 << endl;line line 
// The same operations are also possible with Row-vectors.line line VectorBase<> &RefV2 = R1;line R2 = RefV2; line cout << "R2: " << R2 << endl;line line //===========================================line // The Vector object.line 
//===========================================line line // A Vector object is by default a ColumnVector line // and hence all operations possible on a ColumnVectorline // is possible on a Vector object.line line Vector<3> vector;line 
vector = 3.456, 4.927, 0.999;line vector = C1 + vector;line vector = vector/2.00;line vector = vector*5.98;line R1 = transpose(vector);line component = dotProduct(C1, vector);line normal = crossProduct(C1, vector);line double scalar;line 
scalar = R1 * vector;line line // And after all those manipulations what do we have?line cout << "vector: " << vector<< endl;line return 0;line }line line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{
template<intsize, classT> ColumnVector< size,T >::ColumnVector<size, T> ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a0}{*bkmkend class_ColumnVector_a0}The default constructor for the }{f2 
ColumnVector}{ object. The elements are not initialized. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{template<intsiz
e, classT> ColumnVector< size,T >::ColumnVector<size, T> (const Matrix< size,1,T >& }{i matrix}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a1}{*bkmkend class_ColumnVector_a1}
The conversion constructor for conversion of a matrix of single column into type }{i ColumnVector}{. 
ar 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi matrix}{  Conversion constructor to convert a matrix of  single column to type }{i ColumnVector}{.
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:ColumnVector}}}{
template<intsize, classT = double> ColumnVector<size, T>::ColumnVector<size, T> (const Vector< size,T >& }{i vector}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a2}{*bkmkend class_ColumnVector_a2}The conversion construc
tor for conversion of a }{b Vector}{ (}{i p.}{field{*fldinst {i PAGEREF class_Vector \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 107}}}{) type into type }{i ColumnVector}{. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~ColumnVector:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:~ColumnVector}}}{
template<intsize, classT = double> ColumnVector<size, T>::~ColumnVector<size, T> ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a3}{*bkmkend class_ColumnVector_a3}The default destructor for the }{f2 
ColumnVector}{ object. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {length:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:length}}}{template<intsize, classT> T ColumnVector< size,T >::length () const}{
f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a4}{*bkmkend class_ColumnVector_a4}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The 2-norm of the vector. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getElement:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:getElement}}}{
template<intsize, classT> T ColumnVector< size,T >::getElement (int }{i elementPosition}{) const}{f2  [inline, virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a5}{*bkmkend class_ColumnVector_a5}
Returns the element at the specified position. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementPosition}{   Position of the desired element. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar Reimplemented from }{b VectorBase}{ (}{i p.}{field{*fldinst {i PAGEREF class_VectorBase_a2 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 110}}}{).
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setElement:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:setElement}}}{
template<intsize, classT> void ColumnVector< size,T >::setElement (int }{i elementPosition}{, T }{i elementValue}{)}{f2  [inline, virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a6}{*bkmkend class_ColumnVector_a6}
Sets an element to a value at the specified position. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementPosition}{   Position of the desired element. 
ar }{bi elementValue}{   The desired element is set to this value. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementValue}{  Sets an element to a value at the specified position.
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Reimplemented from }{b VectorBase}{ (}{i p.}{field{*fldinst {i PAGEREF class_VectorBase_a3 \
*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 110}}}{).
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getSize:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:getSize}}}{template<intsize, classT = double> int ColumnVector<size, 
T>::getSize () const}{f2  [inline, virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a7}{*bkmkend class_ColumnVector_a7}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The size of the vector. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar Reimplemented from }{b VectorBase}{ (}{i p.}{field{*fldinst {i PAGEREF class_VectorBase_a6 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 110}}}{).
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {operator():ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:operator()}}}{template<intsize, classT
> T & ColumnVector< size,T >::operator() (int }{i elementPosition}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a8}{*bkmkend class_ColumnVector_a8}This function overloads the }{f2 ()}{
 operator to  access the element at the }{i elementPosition}{  position of the vector. The operator can be  intuitively used to assign a value to an element in the vector such as 
ar }ardlain s23ql li360ri0widctlparfaautoadjustrightrin0lin360itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 {myVector(2)=12.65; 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementPosition}{   The index of the element in the vector. 
ar }{bi Return}{   The value of the element at the  specified position. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementPosition}{  This function overloads the }{f2 ()}{ operator to access the element at the }{i 
elementPosition}{ of the vector.
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {operator():ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:operator()}}}{
template<intsize, classT> T ColumnVector< size,T >::operator() (int }{i elementPosition}{) const}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a9}{*bkmkend class_ColumnVector_a9}This function overloads the }{f2 ()}{
 operator to read the element at the }{i elementPosition}{ of the vector such as 
ar }ardlain s23ql li360ri0widctlparfaautoadjustrightrin0lin360itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 {cout << myVector(2); 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementPosition}{   The index of the element in the vector. 
ar }{bi Return}{   The value of the element at the  specified position. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {operator=:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:operator=}}}{
template<intsize, classT>  template<intanotherSize, classX> ColumnVector< size,T >& ColumnVector< size,T >::operator= (const ColumnVector< size,T >& }{i columnVector}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a10}{*bkmkend class_ColumnVector_a10}
This function overloads the assignment operator to assign between two vectors of same size. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi columnVector}{   The right-hand side vector. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi columnVector}{  Overloading the = operator to assign between two vectors of same size.
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {operator=:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:operator=}}}{temp
late<intsize, classT> ColumnVector< size,T >& ColumnVector< size,T >::operator= (const VectorBase< T >& }{i vectorBase}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a11}{*bkmkend class_ColumnVector_a11}
This function overloads the assignment operator  to assign a }{bi VectorBase}{ type to a }{i ColumnVector}{ type. Both objects must have the same dimensions. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi vectorBase}{   The object of the base class }{bi VectorBase}{. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi vectorBase}{  Overloading the = operator to assign between a columnvector and a }{b VectorBase}{ (}{i p.}
{field{*fldinst {i PAGEREF class_VectorBase \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 109}}}{) object of same size.
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Reimplemented from }{b VectorBase}{ (}{i p.}{field{*fldinst {i PAGEREF class_VectorBase_a9 \
*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 110}}}{).
ar 
ar Reimplemented in }{b Vector}{ (}{i p.}{field{*fldinst {i PAGEREF class_Vector_a4 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 108}}}{).
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {operator=:ColumnVector}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ColumnVector:operator=}}}{template<intsize, classT> MatrixInitial
izer< T > ColumnVector< size,T >::operator= (const T & }{i elementValue}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ColumnVector_a12}{*bkmkend class_ColumnVector_a12}
This function provides an overloaded assignment operator to initialize a vector object. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementValue}{   The value to which all elements in the vector are initialized. The ini
tialization of the vector object can also be done as a comma seperated list. For example: 
ar }ardlain s24ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 shading1000cbpat8 f2fs16lang1033langfe1033cgridlangnp1033langfenp1033 {ColumnVector<3> myVector;line         myVector = 67.88, 45.89, 90; 
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi elementValue}{  This function provides an overloaded assignment operator to initialize a vector object.
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Reimplemented from }{b Matrix}{ (}{i p.}{field{*fldinst {i PAGEREF class_Matrix_a14 \*MERGEFORMAT}
}{fldrslt {ilang1024langfe1024noproof 44}}}{).
ar 
ar Reimplemented in }{b Vector}{ (}{i p.}{field{*fldinst {i PAGEREF class_Vector_a5 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 108}}}{).
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b ColumnVector.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {Differentiator  Class Template Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {Differentiator}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614431}Differentiator{*bkmkend _Toc510614431}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator}}}{{*bkmkstart class_Differentiator}{*bkmkend class_Differentiator}The class }{f2 Differentiator}{ provides numerical method for differentation. 
ar }{f2 #include <Differentiator.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Differentiator}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b Differentiator}{ (double samplingPeriod)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ~Differentiator}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setSamplingPeriod}{ (double samplingPeriod)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyHz}{ (double cutOffFrequencyHz)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyRad}{ (double cutOffFrequencyRad)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setDampingRatio}{ (double dampingFactor)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {virtual T }{b differentiate}{ (T &currentInput)
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {template<class T = double>  template class Differentiator
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The class }{f2 Differentiator}{ provides numerical method for differentation.
ar 
ar The Differentiator computes differentiation of the signal using backward difference followed by smoothening of the differentiated signal by a low pass filter. A derived class from Differentiator can override the differenting algorithm provided.
ar The class }{f2 Differentiator}{ can be used with any data type (double, int, }{b RowVector}{ (}{i p.}{field{*fldinst {i PAGEREF class_RowVector \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 77}}}{), }{b ColumnVector}{ (}{i p.}
{field{*fldinst {i PAGEREF class_ColumnVector \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 6}}}{), }{b Matrix}{ (}{i p.}{field{*fldinst {i PAGEREF class_Matrix \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 38}}}{), etc).

ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//========================================================================line 
// Project: Robotic Platformline // ----------------------------------------------------------------------line // Package      : The Math Libraryline // Authors      : Vilas Kumar Chitrakaranline // Start Date   : Wed Dec 20 11:08:28 GMT 2000line 
// Compiler     : GNU c++line // Operating System : QNX RTPline // ----------------------------------------------------------------------line // File: Differentiator.t.cppline // Example program for the Differentiator.line 
//========================================================================line line //========================================================================line //Differentiator.t.cppline 
//------------------------------------------------------------------------line // \briefline // The file Differentiator.t.cpp is an example program that tests the line // Differentiator related functions provided in the Math Library for line 
// the Robotic Platform.line //line // This program demostrates the use of Differentiator on the data typeline // ColumnVector. line //========================================================================line line #include "Differentiator.hpp"
line #include "ColumnVector.hpp"line line #include <iostream.h>line #include <stdio.h>line #include <math.h>line #include <stdlib.h>line line #define PI 3.141592654line line line int main()line {line   FILE *infile, *outfile;line 
  // These files hold the input and output waveforms.line   infile = fopen("position.dat", "w+");line     outfile = fopen("velocity.dat", "w+");line   line   ColumnVector<3> positionSensor;line 
  // Lets assume this vector holds all the position data from position sensors.line   line   ColumnVector<3> velocity;line   // Lets assume this vector holds all the velocity information, from time derivative of position signals.line   line   line 
  // Define a differentiator with a sampling period of 1 milli-second.line   Differentiator< ColumnVector<3> > myDifferentiator(0.001);line line   // Set cut-off frequency for the filter in theline 
  // differentiator. This usually will need hit-and-trial.line   myDifferentiator.setCutOffFrequencyHz(30);line   line   // Set damping for the filter in theline   // differentiator.line   myDifferentiator.setDampingRatio(1);line line 
  // Position signals are defined as shown below.line   // Practically these will be obtained realtime from sensors.line   // They are differentiated and both the input and outputline   // waveforms are written to a file.line 
  for (int i=0; i<1000; i++)line   { line     positionSensor(1) = cos(2*PI*i/1000.0);line     positionSensor(2) = tanh(2*PI*i/1000.0);line     positionSensor(3) = 2*i/1000.0;line   line   line 
    velocity = myDifferentiator.differentiate(positionSensor);line     // Differentiate position to get velocity.line   line     // simply write the outputs to a file and check it using matlab... line 
    // Note that each file holds elements of the columnVector sequentially for a line     // particular time..ie..[element1 element2 element3 element1...] and so on.line     fprintf(infile, "%f \n", positionSensor(1));line     fprintf(infile, "%f \
n", positionSensor(2));line     fprintf(infile, "%f \n", positionSensor(3));line line     fprintf(outfile, "%f \n", velocity(1));line     fprintf(outfile, "%f \n", velocity(2));line     fprintf(outfile, "%f \n", velocity(3));line   }line 
  fclose(infile);line   fclose(outfile);line line line   return(0);line }line line line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:Differentiator}}}{
template<classT = double> Differentiator<T>::Differentiator<T> ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a0}{*bkmkend class_Differentiator_a0}
Default constructor for differentiator. Sampling period set to default of 0.001 seconds. By default the cut-off frequency is set to half the sampling frequency. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:Differentiator}}}{
template<classT = double> Differentiator<T>::Differentiator<T> (double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a1}{*bkmkend class_Differentiator_a1}
The Constructor that initializes the sampling period. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{   The sampling period of the  differentiator in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~Differentiator:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:~Differentiator}}}{template<classT = double> 
Differentiator<T>::~Differentiator<T> ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a2}{*bkmkend class_Differentiator_a2}The default destructor. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setSamplingPeriod:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:setSamplingPeriod}}}{
template<classT = double> void Differentiator<T>::setSamplingPeriod (double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a3}{*bkmkend class_Differentiator_a3}
Sets the sampling period of the differentiator  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{
   The sampling period of the  differentiator in seconds. By default the sampling period  is set to 0.001 seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyHz:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:setCutOffFrequencyHz}}}{
template<classT = double> void Differentiator<T>::setCutOffFrequencyHz (double }{i cutOffFrequencyHz}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a4}{*bkmkend class_Differentiator_a4}
Differentiation is followed by a low pass filtering process. This function sets the cut-off frequency of the filter in hertz.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyHz}{
   The cut-off frequency of the  low pass butterworth filter in hertz. By default the cut-off frequency  is set to half the sampling frequency of the differentiator. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyRad:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:setCutOffFrequencyRad}}}{
template<classT = double> void Differentiator<T>::setCutOffFrequencyRad (double }{i cutOffFrequencyRad}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a5}{*bkmkend class_Differentiator_a5}
Differentiation is followed by a low pass filtering process. This function sets the cut-off frequency of the filter in Rad/sec.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyRad}{
   The cut-off frequency of the  low pass butterworth filter in Rad/sec. By default the cut-off frequency  is set to half the sampling frequency of the differentiator. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setDampingRatio:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:setDampingRatio}}}{
template<classT = double> void Differentiator<T>::setDampingRatio (double }{i dampingFactor}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a6}{*bkmkend class_Differentiator_a6}
Sets the damping factor of the butterworth filter. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi dampingFactor}{   Desired damping ratio. The default value is 1. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {differentiate:Differentiator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Differentiator:differentiate}}}{
template<classT = double> T Differentiator<T>::differentiate (T & }{i currentInput}{)}{f2  [inline, virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Differentiator_a7}{*bkmkend class_Differentiator_a7}
This function provides the numerical  method for differentiation. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi currentInput}{
   The present value of the  variable being differentiated. Being a virtual method, the user can derive a method of differentiation that suits the desired needs. i.e..override Differentiator<-My Differentiator ( with a different }{i Differentiate()}{
 method).  This method also calls a low-pass Butterworth filter to smoothen out the differentiator output. The differentiator output in the first cycle is smoothened to zero. The cut-off frequency of the filter is set by the method }{f2 
setCutOffFrequency}{. By default the cut-off frequency is half the sampling frequency of the Differentiator. 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Differentiator.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {FunctionalObject  Class Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {FunctionalObject}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614432}FunctionalObject{*bkmkend _Toc510614432}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {FunctionalObject}}}{{*bkmkstart class_FunctionalObject}{*bkmkend class_FunctionalObject}The base class of all functional robotic classes. 
ar }{f2 #include <FunctionalObject.hpp>}{
ar Inheritance diagram for FunctionalObject
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard qc li0ri0nowidctlparfaautorin0lin0itap0 {fieldflddirty{*fldinst {INCLUDEPICTURE class_FunctionalObject.gif \*MERGEFORMAT}}{fldrslt {{*shppict{ict{*icpropshplid1096{sp{sn shapeType}{sv 75}}{sp{sn fFlipH}{sv 0}}
{sp{sn fFlipV}{sv 0}}{sp{sn pibName}{sv class_FunctionalObject.gif}}{sp{sn pibFlags}{sv 2}}{sp{sn pictureGray}{sv 0}}{sp{sn pictureBiLevel}{sv 0}}{sp{sn fFilled}{sv 0}}{sp{sn fHitTestFill}{sv 1}}{sp{sn fillShape}{sv 1}}
{sp{sn fillUseRect}{sv 0}}{sp{sn fNoFillHitTest}{sv 0}}{sp{sn fLine}{sv 0}}{sp{sn fReallyHidden}{sv 0}}{sp{sn fScriptAnchor}{sv 0}}{sp{sn fFakeMaster}{sv 0}}{sp{sn fLayoutInCell}{sv 1}}}
icscalex100icscaley100iccropl0iccropr0iccropt0iccropb0icw3360ich3598icwgoal1905ichgoal2040ngblipbliptag-561535165{*blipuid de87a7438280e112d2762b42d0293c60}
89504e470d0a1a0a0000000d494844520000007f0000008804030000003c04298100000018504c5445ffffff000000ffffc09f9f60900000009000000090c0c0
c07bc2ffe40000000174524e530040e6d86600000001624b47440088051d480000000c636d50504a436d7030373132000000074f6db7a50000020d4944415468
deed99516ec3200c86e1a5cfe01b98134c9bb4f3eca9f73fc2b00d01924052a1359d6a36cdc1c087b159dbed375f73edc37c86a9a6803500bd670bd2054c5e08
58bc010780342b03b2c166d11120ee0731100fe8e3422f9b23820c458787218076f362e20f90730002265f3e583707cbac0448118405303e020e01917f04a8e2
dc8b209c043439902a9ccc4153852055907b505501fb551837d8733e138061121014d0054cbfac1fb4dbd1843f07dc7f2e06dceef78b012f5005052840010a50
c09b01fc5c73c6cd45a8801a10335af96d0376c6c6745b7ecae31b401b896d7a34cb36be0e20f6aca5ed8c77ce508d63546478731a622f8f7701ceb2a16f6bbc
9804c8de44dce4c0c9081fbf4c350550bca3236c00de3700ea3e04b0eb08cc0860cbb206205518e780ac753c2166d9a62a70da5dba075515ecb60a672f5ef726
3e0760cd24c028601730fdb27ed0ae7f6bd3bf1b5fa10a0a50800214a08037031cfce3f95bf5c62701e2a735906e32ad3ad8a87beb718900fb13446e3c014064
896b911449e202c8c218e95bc823d1598dd7805a114c229b5f9435488a6371ca630d60532445c85facb7c182e6344179ac01a4262e9262594ebd9865144329f1
fb8056524c3a610240484266c8dc3e00eb092802627b04e81e81b29e2545ceb24493c55f511f691c97f1f54ddc5c99ed1d1a5fe5f57c3c5abf954c1f0ce0557e1bff3b60566ffc052c21b97cf771633d0000000049454e44ae426082}}{nonshppict
{icticscalex100icscaley100iccropl0iccropr0iccropt0iccropb0icw3360ich3598icwgoal1905ichgoal2040wmetafile8bliptag-561535165{*blipuid de87a7438280e112d2762b42d0293c60}
010009000003cc15000000004211000000000400000003010800050000000b0200000000050000000c0288007f000500000007010400000066040000430f8600
ee00000088007f000000000088007f0000000000280000007f00000088000000010001000000000080080000c40e0000c40e0000020000000200000000000000
ffffff00fffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffe000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
0000000000000000000000010000000000000000000000000000000100000000000000000000000000000007c0000000000000000000000000000007c0000000
00000000000000000000000380000000000000000000000000000003800000000000000000000000000000010000000000000000000000000000000100000000
00000000fffffffffffffffffffffffffffffffe8000000000000000000000000000000280000000000000000000000000000002800000000000000000000000
00000002800000000000000000000000000000028000000000000000000000000000000280000000000000000000001000000002800000000000000000000008
00000002800000000000000000000008000000028000806911c68e223a878588e1c6000280008099122491224488464912240002800080891204912244902449
0204000280008089120491223c902449f20400028000f889120491220490244912040002800080899224913244902649122400028000808961ce8e2c38902588
e1ce0002800080000004000000884400000400028000fc0000048000008784080004000280000000000000000000000000000002800000000000000000000000
00000002800000000000000000000000000000028000000000000000000000000000000280000000000000000000000000000002ffffffffffffffffffffffff
fffffffe000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
00000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000
0000000000000000000000010000000000000000000000000000000100000000000000000000000000000007c0000000000000000000000000000007c0000000
00000000000000000000000380000000000000000000000000000003800000000000000000000000000000010000000000000000000000000000000100000000
00000000fffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffeffffffffffffffffffffffff
fffffffe42110000430fc6008800000088007f000000000088007f0000000000280000007f000000880000000100040000000000802a0000c40e0000c40e0000
100000000800000000000000900000000000900000900000609f9f00c0c0c000c0ffff00ffffff00ffffff00ffffff00ffffff00ffffff00ffffff00ffffff00
ffffff00ffffff004444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666066666666666666666666666666666666066666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666606666666666666666666666666666666606666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666606666666666666666666666666666666660666666666666666666666666666666666666666666666666666
66666666666666404666666660666660666600060606660006666000666006600066660666660666666000606660006660666066600066660666600060600660
00666606666666404666666660666660666066606606606660660666066066066606660666606066660666006606660660666066066606660666066606606606
66066606666666404666666660666660666066606606606666660666666066066606660666606066606666606606666660666066066666660666066606606606
66066606666666404666666660666660666600006606600000660666666066066606660666066066606666606600000660666066000006660666600006606606
66066606666666404666666660666660666666606606606660660666666066066606660666066606606660006606660660666066066606660666666606606606
66066606666666404666666660666660066066606606606660660666066066066606660066066606606666666606660660066066066606660066066606606606
66066600666666404666666660666660606600066606660006666000660006600066660606066606606666666660006660600666600066660606600066000660
00666606066666404666666660666666666666666666666666666666666066666666666666666666660666606666666666666666666666666666666666606666
66666666666666404666660000000666666666666606666666666666666066666666666666666666666000066666666666666666666666666666666666606666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404444444444444444444444444444444444444444444444444444444444444441444444444444444444444444444444444444444444444444
4444444444444440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70ffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffff
ffffffffffffff000fffffffffffffff0fffffff700f0f70ff70ff7000ff700f0fff000fff0fff0fff000f0f0fff70000fff70700fff0fff000fff7000ff700f
ffffffffffffff000fffffffffffffff0fffffff0f700f70ff70ff0fff0f70ff0f70ff70ff0fff0f70ff70ff0fff0fff70ff700f70ff0f70ff70ff0fff0f70ff
ffffffffffffff000fffffffffffffff0fffffff0fff0f70ff70ff0fffff70ff0f70ff70ff0fff0f70ff70ff0f70ffffff0f70ff70ff0f70ffffff0fffff70ff
ffffffffffffff000fffffffffffffff0fffffff0fff0f70ff70ff0fffff70ff0f70ff70ff0fff0fff0000ff0f70ffffff0f70ff70ff0f700000ff0fffff70ff
ffffffffffffff000fffffffffffffff00000fff0fff0f70ff70ff0fffff70ff0f70ff70ff0fff0fffff70ff0f70ffffff0f70ff70ff0f70ff70ff0fffff70ff
ffffffffffffff000fffffffffffffff0fffffff0fff0f700f70ff0fff0f70ff0f70ff70ff00ff0f70ff70ff0f70ffffff0f700f70ff0f70ff70ff0fff0f70ff
ffffffffffffff000fffffffffffffff0fffffff0fff0f70700fff7000ff000f0fff000fff0f00ffff000fff0f70ffffff0f70700fff0fff000fff7000ff000f
ffffffffffffff000fffffffffffffff0fffffffffffffffffffffffffff70ffffffffffffffffffffffffff0fff0fff70ff70ffffffffffffffffffffff70ff
ffffffffffffff000fffffffffffffff000000ffffffffffffffffffffff70ff0fffffffffffffffffffffff0fff70000fff70ffffff0fffffffffffffff70ff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff711111ffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff111fffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff70ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff71ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffff704444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666606666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666660666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666660666666666666666666666666666
66666666666666404666666666666666666666666066660666000666060066660006660060666000666660000666606006660666000666600066600666666666
66666666666666404666666666666666666666666066660660666066006606606660660660660666066606666066600660660660666066066606606666666666
66666666666666404666666666666666666666666066660660666066066606606660660660660666666066666606606660660660666666066666606666666666
66666666666666404666666666666666666666666066606660666066066606606660660660660666666066666606606660660660000066066666606666666666
66666666666666404666666666666666666666666000006660666066066606606660660660660666666066666606606660660660666066066666606666666666
66666666666666404666666666666666666666666066660660666066006606606660660660660666066066666606600660660660666066066606606666666666
66666666666666404666666666666666666666666066660666000666060066660006600060666000666066666606606006660666000666600066000666666666
66666666666666404666666666666666666666666066660666666666066666666666660666666666666606666066606666666666666666666666606666666666
66666666666666404666666666666666666666666000006666666666066666666666660660666666666660000666606666660666666666666666606666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666404444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444005000000070101000000030000000000}}}}}{
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {virtual }{b ~FunctionalObject}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {virtual const }{b TypeInfo}{* }{b getTypeInfo}{ () const
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Protected Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b FunctionalObject}{ (const }{b TypeInfo}{ *parent)
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The base class of all functional robotic classes.
ar 
ar The class FunctionalObject is the base class of all f
unctional robotic classes (e.g. Trajectory Generator, Servo Control). It defines a generic interface that is common to all of the functional robotic classes. This allows to perform an operation on all functional objects.
ar Currently the class is unused. It is only added as the symmetric counterpart to }{b PhysicalObject}{ (}{i p.}{field{*fldinst {i PAGEREF class_PhysicalObject \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 54}}}{). 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {FunctionalObject:FunctionalObject}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {FunctionalObject:FunctionalObject}}}{FunctionalObject::FunctionalObject (const TypeInfo * }{
i parent}{)}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_FunctionalObject_b0}{*bkmkend class_FunctionalObject_b0}
The constructor initializes class variables. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~FunctionalObject:FunctionalObject}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {FunctionalObject:~FunctionalObject}}}{FunctionalObject::~FunctionalObject ()}{f2  [virtual]}
{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_FunctionalObject_a0}{*bkmkend class_FunctionalObject_a0}The destructor performs no 
action. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getTypeInfo:FunctionalObject}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {FunctionalObject:getTypeInfo}}}{const TypeInfo * FunctionalObject::getTypeInfo () const}{f2 
 [virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_FunctionalObject_a1}{*bkmkend class_FunctionalObject_a1}
Returns the type info of the class. 
ar }{b See also: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { }{b RoboticObject::getTypeInfo}{() (}{i p.}{field{*fldinst {i PAGEREF class_RoboticObject_a3 \*MERGEFORMAT}
}{fldrslt {ilang1024langfe1024noproof 65}}}{) 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar Reimplemented from }{b RoboticObject}{ (}{i p.}{field{*fldinst {i PAGEREF class_RoboticObject_a3 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 65}}}{).
ar 
ar Reimplemented in }{b TrajectoryGenerator}{ (}{i p.}{field{*fldinst {i PAGEREF class_TrajectoryGenerator_a1 \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 92}}}{).
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b FunctionalObject.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {HighpassFilter  Class Template Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {HighpassFilter}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614433}HighpassFilter{*bkmkend _Toc510614433}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter}}}{{*bkmkstart class_HighpassFilter}{*bkmkend class_HighpassFilter}The HighpassFilter class provides a high-pass second order butterworth filter. 
ar }{f2 #include <HighpassFilter.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b HighpassFilter}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b HighpassFilter}{ (double cutOffFrequencyHz, double samplingPeriod )
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ~HighpassFilter}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyHz}{ (double cutOffFrequencyHz)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyRad}{ (double cutOffFrequencyRad)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getCutOffFrequencyHz}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getCutOffFrequencyRad}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setSamplingPeriod}{ (double samplingPeriod)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getSamplingPeriod}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setAutoInit}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b initializeFilter}{ (T initInput, T initOutput)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b filter}{ (T input)
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Protected Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {void }{b calculateInternalParameters}{ ()
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Protected Attributes
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {double }{b d_samplingPeriod}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_cutOffFrequencyHz}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_cutOffFrequencyRad}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_numeratorParameter}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_denumParameter}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b d_initFlag}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_previousInputX}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_previousOutputY}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_filteredOut}{
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {template<class T>  template class HighpassFilter
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The HighpassFilter class provides a high-pass second order butterworth filter.
ar 
ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//======================================================================== line 
// Project: Robotic Platform.line // ---------------------------------------------------------------------- line // Package      : The Math Libraryline // Authors      : line // Start Date   : Wed Dec 20 11:08:28 GMT 2000line 
// Compiler     : GNU c++line // Operating System : QNX RTPline // ----------------------------------------------------------------------  line // File: HighpassFilter.t.cppline // Example program for the high-pass filter class.line 
//========================================================================  line line #include "HighpassFilter.hpp"line line line #include <iostream.h>line #include <math.h>line #include <stdio.h>line #include <stdlib.h>line line #define PI 3.14
line line line double wn = 600;  // cut-off freq. in Hzline double dirtySignal[7000];line double filteredSignal[7000];line line double p ;line line HighpassFilter<double> myFilter(wn, .000143);line 
// Define filter, with a sampling period as the second argument.line line line int main()line {line   FILE *outfile1, *outfile2;line   myFilter.initializeFilter(0.0, 0.0);line   outfile1 = fopen("dirty.dat", "w+");line 
  outfile2 = fopen("clean.dat", "w+");line line   cout << "The cutoff Frequency in hertz: " << myFilter.getCutOffFrequencyHz() << endl;line   cout << "The cutoff Frequency in rad/sec: " << myFilter.getCutOffFrequencyRad() << endl;line   line line 
 for (int i=0; i<7000; i++)line  {line    p = ((double)i)/7000.0; line    dirtySignal[i] = 2 +  sin(2*PI*p/10) + sin(60*2*PI*p) + sin(700*2*PI*p);line    filteredSignal[i] = myFilter.filter(dirtySignal[i]);line line 
   //simply write the outputs to a file and check it using matlab... line      fprintf(outfile1, "%f \n", dirtySignal[i]);line      fprintf(outfile2, "%f \n", filteredSignal[i]);line  }line line line  fclose(outfile1);line  fclose(outfile2);
line line return(0);line }line line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:HighpassFilter}}}{template<classT> HighpassFilter<T>::HighpassFilter<T> ()}{
f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a0}{*bkmkend class_HighpassFilter_a0}The default Constructor. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:HighpassFilter}}}{
template<classT> HighpassFilter<T>::HighpassFilter<T> (double }{i cutOffFrequencyHz}{, double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a1}{*bkmkend class_HighpassFilter_a1}This constructor for the filter 
initializes the parameters of the filter. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyHz}{   The cut-off frequency of the  high pass butterworth filter in }{i hertz}{. 
ar }{bi samplingPeriod}{   The sampling period of the  filter in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~HighpassFilter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:~HighpassFilter}}}{template<classT> HighpassFilter<T>::~HighpassFilter<T> ()}{
f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a2}{*bkmkend class_HighpassFilter_a2}The default destructor. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyHz:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:setCutOffFrequencyHz}}}{template<classT> v
oid HighpassFilter<T>::setCutOffFrequencyHz (double }{i cutOffFrequencyHz}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a3}{*bkmkend class_HighpassFilter_a3}
This function sets the cut-off frequency of the filter.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyHz}{   The cut-off frequency of the  high pass butterworth filter in }{i hertz}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyRad:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:setCutOffFrequencyRad}}}{
template<classT> void HighpassFilter<T>::setCutOffFrequencyRad (double }{i cutOffFrequencyRad}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a4}{*bkmkend class_HighpassFilter_a4}
This function sets the cut-off frequency of the filter.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyRad}{   The cut-off frequency of the  high pass butterworth filter in }{i rad/sec}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getCutOffFrequencyHz:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:getCutOffFrequencyHz}}}{
template<classT> double HighpassFilter<T>::getCutOffFrequencyHz ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a5}{*bkmkend class_HighpassFilter_a5}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The cut-off frequency of the filter in }{i hertz}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getCutOffFrequencyRad:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:getCutOffFrequencyRad}}}{
template<classT> double HighpassFilter<T>::getCutOffFrequencyRad ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a6}{*bkmkend class_HighpassFilter_a6}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The cut-off frequency of the filter in rad/sec. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setSamplingPeriod:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:setSamplingPeriod}}}{
template<classT> void HighpassFilter<T>::setSamplingPeriod (double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a7}{*bkmkend class_HighpassFilter_a7}
Sets the sampling period of the filter.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{
   The sampling period of the  high-pass filter in seconds. By default the sampling period  is set to 0.001 seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getSamplingPeriod:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:getSamplingPeriod}}}{template<classT> double HighpassFilter<T
>::getSamplingPeriod ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a8}{*bkmkend class_HighpassFilter_a8}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The sampling period of the filter in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setAutoInit:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:setAutoInit}}}{template<classT> void HighpassFilter<T>::setAutoInit ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a9}{*bkmkend class_HighpassFilter_a9}Automatic initializat
ion of the filter. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {initializeFilter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:initializeFilter}}}{
template<classT> void HighpassFilter<T>::initializeFilter (T }{i initInput}{, T }{i initOutput}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a10}{*bkmkend class_HighpassFilter_a10}
Initializes the initial value of input and output. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi initInput}{   Initial value of the input to the filter. 
ar }{bi initOutput}{   Initial output of the filter. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {filter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:filter}}}{template<classT> T HighpassFilter<T>::filter (T }{i input}{)}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_a11}{*bkmkend class_HighpassFilter_a11}The filter. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {calculateInternalParameters:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:calculateInternalParameters}}}{
template<classT> void HighpassFilter<T>::calculateInternalParameters ()}{f2  [inline, protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_b0}{*bkmkend class_HighpassFilter_b0}
Calculates the internel parameters based on cut-off frequency and  sampling period. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Data Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_samplingPeriod:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_samplingPeriod}}}{
template<classT> double HighpassFilter<T>::d_samplingPeriod}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n0}{*bkmkend class_HighpassFilter_n0}Sampling period. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_cutOffFrequencyHz:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_cutOffFrequencyHz}}}{
template<classT> double HighpassFilter<T>::d_cutOffFrequencyHz}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n1}{*bkmkend class_HighpassFilter_n1}
Cut-off frequency of the High-Pass-Filter in }{i hertz}{. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_cutOffFrequencyRad:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_cutOffFrequencyRad}}}{template<classT> double High
passFilter<T>::d_cutOffFrequencyRad}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n2}{*bkmkend class_HighpassFilter_n2}Filter time parameters 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_numeratorParameter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_numeratorParameter}}}{
template<classT> double HighpassFilter<T>::d_numeratorParameter[3]}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n3}{*bkmkend class_HighpassFilter_n3}filter numerator parameters. 

ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_denumParameter:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_denumParameter}}}{
template<classT> double HighpassFilter<T>::d_denumParameter[3]}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n4}{*bkmkend class_HighpassFilter_n4}denumerator parameters. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_initFlag:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_initFlag}}}{template<classT> int HighpassFilter<T>::d_initFlag}{f2 
 [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n5}{*bkmkend class_HighpassFilter_n5}initialization flag. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_previousInputX:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_previousInputX}}}{template<classT> T HighpassFilter<T>::d_previousInputX[3]}
{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n6}{*bkmkend class_HighpassFilter_n6}Input related current and old va
lues are stored in these variables. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_previousOutputY:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_previousOutputY}}}{
template<classT> T HighpassFilter<T>::d_previousOutputY[3]}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n7}{*bkmkend class_HighpassFilter_n7}Output related variables. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_filteredOut:HighpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {HighpassFilter:d_filteredOut}}}{template<classT> T HighpassFilter<T>::d_filteredOut}{f2 
 [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_HighpassFilter_n8}{*bkmkend class_HighpassFilter_n8}output returned to the user. 

ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b HighpassFilter.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {Integrator  Class Template Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {Integrator}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614434}Integrator{*bkmkend _Toc510614434}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator}}}{{*bkmkstart class_Integrator}{*bkmkend class_Integrator}The class }{f2 Integrator}{ provides the trapeziodal rule as a numerical method for integration by default. 
ar }{f2 #include <Integrator.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Integrator}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b Integrator}{ (double samplingPeriod, const T &initialValue)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ~Integrator}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setSamplingPeriod}{ (double samplingPeriod)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setInitialValue}{ (const T &initialValue)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {virtual T }{b integrate}{ (T &currentInput)
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {template<class T = double>  template class Integrator
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The class }{f2 Integrator}{ provides the trapeziodal rule as a numerical method for integration by default.
ar 
ar The user can derive and define a more suitable method for integration  if desired. The class }{f2 Integrator}{ can be used with any data type (double, int, }{b RowVector}{ (}{i p.}{field{*fldinst {i PAGEREF class_RowVector \*MERGEFORMAT}
}{fldrslt {ilang1024langfe1024noproof 77}}}{), }{b ColumnVector}{ (}{i p.}{field{*fldinst {i PAGEREF class_ColumnVector \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 6}}}{), }{b Matrix}{ (}{i p.}{field{*fldinst {i 
PAGEREF class_Matrix \*MERGEFORMAT}}{fldrslt {ilang1024langfe1024noproof 38}}}{), etc).
ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//========================================================================line // Project: Robot
ic Platformline // ----------------------------------------------------------------------line // Package      : The Math Libraryline // Authors      : Vilas Kumar Chitrakaranline // Start Date   : Wed Dec 20 11:08:28 GMT 2000line 
// Compiler     : GNU c++line // Operating System : QNX RTPline // ----------------------------------------------------------------------line // File: Integrator.t.cppline // Example program for the Integrator.line 
//========================================================================line line //========================================================================line // Integrator.t.cppline 
//------------------------------------------------------------------------line // \briefline // The file Integrator.t.cpp is an example program that tests the integratorline // related functions provided in the Math Library for the Robotic Platform.
line //line // The example shows how to integrate data types such as column-vectorsline // and row-vectors.line //========================================================================line line #include "Integrator.hpp"line #include "Col
umnVector.hpp"line line #include <iostream.h>line #include <stdio.h>line #include <math.h>line #include <stdlib.h>line line #define PI 3.141592654line line line int main()line {line   FILE *infile, *outfile;line 
  // These files hold the input and output waveforms.line   line   infile = fopen("velocityInput.dat", "w+");line     outfile = fopen("positionOutput.dat", "w+");line   line   ColumnVector<3> velocity;line   // Lets assume this column-vector holds 
line   // velocity information at three joints of a robot.line   line   ColumnVector<3> position;line   // Lets assume this column-vector holds line   // position information at three joints of a robot,line 
  // obtained by integrating the 'velocity' vector.line line   // Define an integrator with a sampling period of 1 milli-secondline   // and an initial value of 0 (defined by the initialPositionValue vector).line   Co
lumnVector<3> initialPositionValue;line   initialPositionValue = 0,0,0;line   Integrator< ColumnVector<3> > myIntegrator(0.001,initialPositionValue);line line   line   for (int i=0; i<1000; i++)line   { line     velocity(1) = sin(2*PI*i/1000);
line     velocity(2) = 1.5; // constant velocity of 1.5.line     velocity(3) = 2*i/1000.0; //constant acceleration.line line     position = myIntegrator.integrate(velocity);line     // Integrate the input signalline line 
    // simply write the outputs to a file and check it using matlab... line     // Note that each file holds elements of the columnVector sequentially for a line     // particular time..ie..[element1 element2 element3 element1...] and so on.line   
line     fprintf(infile, "%f \n", velocity(1));line     fprintf(infile, "%f \n", velocity(2));line     fprintf(infile, "%f \n", velocity(3));line line     fprintf(outfile, "%f \n", position(1));line     fprintf(outfile, "%f \n", position(2));
line     fprintf(outfile, "%f \n", position(3));line   }line line   fclose(infile);line   fclose(outfile);line line   return(0);line }line line line line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:Integrator}}}{template<classT = double> Integrator<T>::Integrator<T> ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a0}{*bkmkend class_Integrator_a0}
The default constructor. The sampling period is set to  default of 0.001 seconds. The initial value is set to 0. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:Integrator}}}{template<classT = double> Integrator<T>::Integrator<T> (double }{i 
samplingPeriod}{, const T & }{i initialValue}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a1}{*bkmkend class_Integrator_a1}
The constructor to initialize the sampling period  and initial Value. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{   The sampling period of the  integrator in seconds. 
ar }{bi initialValue}{   The initial value at the start of integration. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~Integrator:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:~Integrator}}}{template<classT = double> Integrator<T>::~Integrator<T> ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a2}{*bkmkend class_Integrator_a2}The default destructor. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setSamplingPeriod:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:setSamplingPeriod}}}{
template<classT = double> void Integrator<T>::setSamplingPeriod (double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a3}{*bkmkend class_Integrator_a3}
Sets the sampling period of the integrator  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{   The sampling period of the  integrator in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setInitialValue:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:setInitialValue}}}{
template<classT = double> void Integrator<T>::setInitialValue (const T & }{i initialValue}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a4}{*bkmkend class_Integrator_a4}Sets the initial value of the integrator 

ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi initialValue}{   The initial value at the start of integration. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {integrate:Integrator}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {Integrator:integrate}}}{template<classT = double> T Integrator<T>::integrate (T & }{i 
currentInput}{)}{f2  [inline, virtual]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_Integrator_a5}{*bkmkend class_Integrator_a5}This function provides 
the numerical  method for integration. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi currentInput}{
   The current value of the  time-varying signal to be integrated. The user can override the default trapezoidal rule for a more suitable integration method if desired. 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Integrator.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {LowpassFilter  Class Template Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {LowpassFilter}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614435}LowpassFilter{*bkmkend _Toc510614435}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter}}}{{*bkmkstart class_LowpassFilter}{*bkmkend class_LowpassFilter}The class }{f2 LowpassFilter}{ implements the template Filtering class. 
ar }{f2 #include <LowpassFilter.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b LowpassFilter}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b LowpassFilter}{ (double cutOffFrequencyHz, double dampingFactor, double samplingPeriod )
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b ~LowpassFilter}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyHz}{ (double cutOffFrequencyHz)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setCutOffFrequencyRad}{ (double cutOffFrequencyRad)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getCutOffFrequencyHz}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getCutOffFrequencyRad}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setDampingRatio}{ (double dampingRatio)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getDampingRatio}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setSamplingPeriod}{ (double samplingPeriod)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b getSamplingPeriod}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setAutoInit}{ ()
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b initializeFilter}{ (T initInput, T initOutput)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b filter}{ (T input)
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Protected Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {void }{b calculateInternalParameters}{ ()
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Protected Attributes
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {double }{b d_samplingPeriod}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_cutOffFrequencyHz}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_cutOffFrequencyRad}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_dampingRatio}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_numeratorParameter}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {double }{b d_denumParameter}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b d_initFlag}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_previousInputX}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_previousOutputY}{ [3]
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_numerator}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {T }{b d_filteredOut}{
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {template<class T>  template class LowpassFilter
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The class }{f2 LowpassFilter}{ implements the template Filtering class.
ar 
ar A second order Low-Pass ButterWorth Filter is implemented to filter out  low frequency noise inherited form time derivative calculations, measurement errors or noisy sensors.
ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//======================================================================== line 
// Project: Robotic Platform.line // ---------------------------------------------------------------------- line // Package      : The Math Libraryline // Authors      : line // Start Date   : Wed Dec 20 11:08:28 GMT 2000line 
// Compiler     : GNU C++line // Operating System : QNX RTPline // ----------------------------------------------------------------------  line // File: LowpassFilter.t.cppline // Example program for the high-pass filter class.line 
//========================================================================  line line line //========================================================================line // LowpassFilter.t.cppline 
//------------------------------------------------------------------------line // \briefline // The file LowpassFilter.t.cpp is an example program that tests the line // LowpassFilter class provided with the robotic Platformline 
// This program generates a sin wave with random noise line // inserted on it , then using the LowpassFilter class line // the noise will be suppressed. Outputs are saved as ascii line // files  enabling the user to check 
the input and filtered signals.line //========================================================================line line #include "LowpassFilter.hpp"line line #include <iostream.h>line #include <stdio.h>line #include <math.h>line 
#include <stdlib.h>line line #define PI 3.14line line  double wn = 3; //cutoff frequency in hertz.line  double damp =1.0;line  double dirtySignal[1000];line  double filteredSignal[1000];line  double p ;line line  //define Filterline 
 LowpassFilter<double>  velocityFilter (wn, damp, 0.001);line  line main ()line {line   FILE *outfile1, *outfile2;line   velocityFilter.initializeFilter(0.0, 0.0);line   outfile1 = fopen("dirtybutter.dat", "w+");line 
  outfile2 = fopen("cleanbutter.dat", "w+");line line  for (int i=0; i<1000; i++)line  {line    p = ((double)i)/1000.0; line    dirtySignal[i] = 2 + sin(2*PI*p) + ((double)rand()/100000);line    filteredSignal[i] = ve
locityFilter.filter(dirtySignal[i]);line     line    // noise[i] = filteredSignal[i] - dirtySignal[i];line line    // simply write the outputs to a file and check it using matlab... line      fprintf(outfile1, "%f \n", dirtySignal[i]);line 
     fprintf(outfile2, "%f \n", filteredSignal[i]);line  }line line  fclose(outfile1);line  fclose(outfile2);line line return(0);line }line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Constructor & Destructor Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:LowpassFilter}}}{template<classT> LowpassFilter< T >::LowpassFilter<T> ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a0}{*bkmkend class_LowpassFilter_a0}The default Constructor. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:LowpassFilter}}}{template<classT> LowpassFilter< T >::LowpassFilter<T> (double 
}{i cutOffFrequencyHz}{, double }{i dampingFactor}{, double }{i samplingPeriod}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a1}{*bkmkend class_LowpassFilter_a1}
This constructor for the filter initializes the parameters of the filter. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyHz}{   The cut-off frequency of the  low pass butterworth filter in }{i hertz}{. 
ar }{bi dampingFactor}{   Desired damping ratio. 
ar }{bi samplingPeriod}{   The sampling period of the  filter in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {~LowpassFilter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:~LowpassFilter}}}{template<classT> LowpassFilter<T>::~LowpassFilter<T> ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a2}{*bkmkend class_LowpassFilter_a2}The default destructor. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyHz:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:setCutOffFrequencyHz}}}{t
emplate<classT> void LowpassFilter< T >::setCutOffFrequencyHz (double }{i cutOffFrequencyHz}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a3}{*bkmkend class_LowpassFilter_a3}
This function sets the cut-off frequency of the filter in Hertz..  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyHz}{   The cut-off frequency of the  low pass butterworth filter in }{i hertz}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setCutOffFrequencyRad:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:setCutOffFrequencyRad}}}{
template<classT> void LowpassFilter< T >::setCutOffFrequencyRad (double }{i cutOffFrequencyRad}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a4}{*bkmkend class_LowpassFilter_a4}
This function sets the cut-off frequency of the filter in Rad/sec.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi cutOffFrequencyRad}{   The cut-off frequency of the  low pass butterworth filter in }{i rad/sec}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getCutOffFrequencyHz:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:getCutOffFrequencyHz}}}{
template<classT> double LowpassFilter< T >::getCutOffFrequencyHz ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a5}{*bkmkend class_LowpassFilter_a5}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The cut-off frequency of the filter in }{i hertz}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getCutOffFrequencyRad:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:getCutOffFrequencyRad}}}{
template<classT> double LowpassFilter< T >::getCutOffFrequencyRad ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a6}{*bkmkend class_LowpassFilter_a6}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The cut-off frequency of the filter in }{i rad/sec}{. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setDampingRatio:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:setDampingRatio}}}{
template<classT> void LowpassFilter< T >::setDampingRatio (double }{i dampingRatio}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a7}{*bkmkend class_LowpassFilter_a7}Sets the damping factor o
f the butterworth filter. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi dampingFactor}{   Desired damping ratio. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getDampingRatio:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:getDampingRatio}}}{
template<classT> double LowpassFilter< T >::getDampingRatio ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a8}{*bkmkend class_LowpassFilter_a8}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The damping factor of the filter. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setSamplingPeriod:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:setSamplingPeriod}}}{
template<classT> void LowpassFilter< T >::setSamplingPeriod (double }{i samplingPeriod}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a9}{*bkmkend class_LowpassFilter_a9}
Sets the sampling period of the low-pass filter.  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi samplingPeriod}{
   The sampling period of the  low-pass filter in seconds. By default the sampling period  is set to 0.001 seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getSamplingPeriod:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:getSamplingPeriod}}}{template<classT> double LowpassFilter< T >:
:getSamplingPeriod ()}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a10}{*bkmkend class_LowpassFilter_a10}
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi Return}{   The sampling period of the filter in seconds. 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setAutoInit:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:setAutoInit}}}{template<classT> void LowpassFilter< T >::setAutoInit ()}{f2 
 [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a11}{*bkmkend class_LowpassFilter_a11}Automatic initialization
 of the filter. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {initializeFilter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:initializeFilter}}}{
template<classT> void LowpassFilter< T >::initializeFilter (T }{i initInput}{, T }{i initOutput}{)}{f2  [inline]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a12}{*bkmkend class_LowpassFilter_a12}
Initializes the initial value of input and output. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi initInput}{   Initial value of the input to the filter. 
ar }{bi initOutput}{   Initial output of the filter. 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi initOutput}{  input :
ar {ntextardlains65 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s65ql fi-360li1440ri0widctlparjclisttabtx1440{*n nlvlbltilvl0ls8nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols8adjustrightrin0lin1440itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {initInput, the initial values of the input signal 
ar {ntextardlains66 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s66ql fi-360li1800ri0widctlparjclisttabtx1800{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin1800itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {initOutput, the initial values for the output of the filter  in most practical cases input and output values are initialized to the same values
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {filter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:filter}}}{template<classT> T LowpassFilter< T >::filter (T }{i input}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_a13}{*bkmkend class_LowpassFilter_a13}The filter. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {calculateInternalParameters:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:calculateInternalParameters}}}{
template<classT> void LowpassFilter< T >::calculateInternalParameters ()}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_b0}{*bkmkend class_LowpassFilter_b0}
Calculates the internel parameters based  on user inputs of cut-off frequency, etc. 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bf1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Data Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_samplingPeriod:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_samplingPeriod}}}{template<classT> double LowpassFilter<T>::d_samplingPeriod}
{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n0}{*bkmkend class_LowpassFilter_n0}Sampling period. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_cutOffFrequencyHz:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_cutOffFrequencyHz}}}{template<classT> double LowpassFilter<
T>::d_cutOffFrequencyHz}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n1}{*bkmkend class_LowpassFilter_n1}
Cut-off frequency of the Low-Pass-Filter (hertz). 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_cutOffFrequencyRad:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_cutOffFrequencyRad}}}{
template<classT> double LowpassFilter<T>::d_cutOffFrequencyRad}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n2}{*bkmkend class_LowpassFilter_n2}Cut-off freq
uency of the Low-Pass-Filter (rad/sec). 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_dampingRatio:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_dampingRatio}}}{template<classT> double LowpassFilter<T>::d_dampingRatio}{
f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n3}{*bkmkend class_LowpassFilter_n3}Filter time parameters 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_numeratorParameter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_numeratorParameter}}}{
template<classT> double LowpassFilter<T>::d_numeratorParameter[3]}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n4}{*bkmkend class_LowpassFilter_n4}filter numerator parameters 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_denumParameter:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_denumParameter}}}{template<classT> double LowpassFilter<T>::d_d
enumParameter[3]}{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n5}{*bkmkend class_LowpassFilter_n5}denumerator parameters. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_initFlag:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_initFlag}}}{template<classT> int LowpassFilter<T>::d_initFlag}{f2 
 [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n6}{*bkmkend class_LowpassFilter_n6}initialization flag. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_previousInputX:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_previousInputX}}}{template<classT> T LowpassFilter<T>::d_previousInputX[3]}{
f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n7}{*bkmkend class_LowpassFilter_n7}
Input related current and old values are stored in these variables 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_previousOutputY:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_previousOutputY}}}{template<classT> T LowpassFilter<T>::d_previousOutputY[3]}
{f2  [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n8}{*bkmkend class_LowpassFilter_n8}Output related variables. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_numerator:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_numerator}}}{template<classT> T LowpassFilter<T>::d_numerator}{f2 
 [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n9}{*bkmkend class_LowpassFilter_n9}
Auxiliary variables for output calculations. 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {d_filteredOut:LowpassFilter}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {LowpassFilter:d_filteredOut}}}{template<classT> T LowpassFilter<T>::d_filteredOut}{f2 
 [protected]}{
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_LowpassFilter_n11}{*bkmkend class_LowpassFilter_n11}output returned to the user 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {fs22 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {The documentation for this class was generated from the following file:
ar {ntextardlains63 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s63ql fi-360li720ri0widctlparjclisttabtx720{*n nlvlbltilvl0ls6nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols6adjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b LowpassFilter.hpp}{
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain ql li0ri0nowidctlparfaautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {sect }sectd linex0sectdefaultcl ardlain 
s2ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel1adjustrightrin0lin0itap0 bf1fs28lang1033langfe1033kerning28cgridlangnp1033langfenp1033 {ManipulatorModel  Class Reference
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {ManipulatorModel}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {tc {tcl2{*bkmkstart _Toc510614436}ManipulatorModel{*bkmkend _Toc510614436}}}}{ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 
vfs22lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel}}}{{*bkmkstart class_ManipulatorModel}{*bkmkend class_ManipulatorModel}This class provides basic robotic functions for a general manipulator. 
ar }{f2 #include <ManipulatorModel.hpp>}{
ar 
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Methods
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {const char* }{b getConfigurationName}{ (int num) const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {const char* }{b getConfigurationStateName}{ (int num, int state) const
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b setConfigurationStateName}{ (int num, int state)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b displayConfiguration}{ (int &configuration)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b forwardKinematics}{ (}{b VectorBase}{ &joinAngles, }{b Transform}{ &endEffectorTransform, int &configuration)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {int }{b inverseKinematics}{ (}{b Transform}{ &endEffectorTranform, double epsilon, }{b VectorBase}{ &jointAngles )
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b manipulatorJacobian}{ (}{b VectorBase}{ &jointAngles, }{b MatrixBase}{ &jacobian)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b inverseJacobian}{ (}{b VectorBase}{ &jointAngles, }{b MatrixBase}{ &inverseJacobian)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b jacobianTranpose}{ (}{b VectorBase}{ &jointAngles, }{b MatrixBase}{ &jacobianTranspose)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b inverseJacobianTranspose}{ (}{b VectorBase}{ &jointAngles, }{b MatrixBase}{ &inverseJacobianTranspose)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b endEffectorForceToJointTorque}{ (}{b VectorBase}{ &jointAngles, }{b VectorBase}{ &endEffectorForces, }{b VectorBase}{ &jointTorques)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b jointTorqueToEndEffectorForce}{ (}{b VectorBase}{ &jointAngles, }{b VectorBase}{ &jointTorques, }{b VectorBase}{ &endEffectorForces)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b cartesianVelocityToJointVelocity}{ (}{b VectorBase}{ &jointAngles, }{b VectorBase}{ &cartesianVelocity, }{b VectorBase}{ &jointVelocity)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b jointVelocityToCartesianVelocity}{ (}{b VectorBase}{ &jointAngles, }{b VectorBase}{ &jointVelocity, }{b VectorBase}{ &cartesianVelocity)
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {void }{b manipulatorDynamics}{ (}{b VectorBase}{ &controlInput, }{b VectorBase}{ &positionInput, }{b VectorBase}{ &veloictyInput, }{b VectorBase}{ &accelerationOut, }{b VectorBase}{ &velocityOut, }{b 
VectorBase}{ &positionOut, const double samplingFrequency )
ar }ardlain ql li0ri0nowidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautorin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlpar{*n nlvlcontilvl0ls0nrnot0ndec }faautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Public Attributes
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ardlain s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {int }{b d_numberofJoints}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b VectorBase}{ }{b d_jointLimits}{
ar {ntextardlains62 f3fs20 lochaf3dbchaf0hichf3 'b7tab}}ard s62ql fi-360li360ri0widctlparjclisttabtx360{*n nlvlbltilvl0ls5nrnot0nf3nstart1nindent360nsp120nhang{ntxtb 'b7}}
faautols5adjustrightrin0lin360itap0 {b VectorBase}{ }{b d_jointType}{
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ard ql li0ri0nowidctlparfaautorin0lin0itap0 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Detailed Description
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 {This class provides basic robotic functions for a general manipulator.
ar 
ar ManipulatorModel Class provides basic robotic functionalities required  to calculate the kinematics and the dynamics of a general purpose  robot manipulator (dynamics is included for simulation purposes) additional useful functi
ons determining the configuration of  the manipulator are also included..
ar }{b Example Program:}{
ar 
ar }ardlain s22ql li0ri0widctlparfaautoadjustrightrin0lin0itap0 shading1000cbpat8 f2fs14lang1033langfe1033cgridlangnp1033langfenp1033 {//======================================================================== line // Project: line 
// ---------------------------------------------------------------------- line // Package:  line // Authors:   line // Start Date: Wed Nov 29 11:52:29 GMT 2000line // ----------------------------------------------------------------------  line 
// File: ManipulatorModel.t.cppline // Example program for the class ManipulatorModel.line //========================================================================  line  line line // ----- Standard Libaries -----line #include <iostream.h>line 
line // ----- QRTS Libraries -----line line // ----- Project Includes -----line #include "ManipulatorModel.hpp"line line  line  line //======================================================================== line // mainline 
//========================================================================  line  line int main()line {line   return 0;line }line line 
ar }ardlain s17qj li0ri0sb30sa60widctlparfaautorin0lin0itap0 fs22lang1033langfe1033cgridlangnp1033langfenp1033 { 
ar 
ar }ardlain ql li0ri0widctlparbrdrbbrdrsbrdrw5brsp20 faautoadjustrightrin0lin0itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {
ar }ardlain s3ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel2adjustrightrin0lin0itap0 bf1fs20lang1033langfe1033cgridlangnp1033langfenp1033 {Member Function Documentation
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getConfigurationName:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:getConfigurationName}}}{
const char * ManipulatorModel::getConfigurationName (int }{i num}{) const
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a2}{*bkmkend class_ManipulatorModel_a2}
Returns the corresponding configuration item specified by num there is no set.. function for this (configuration names cannot be changed online) 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi num}{   The item 
for corresponding to the name of the robots configuration for example for a Puma type robot (having 1 elbow and 1 wrist) we have the following convension 0 -> Arm,  1 -> Elbow, 2 -> Wrist, 3 -> endoflist or null
ar 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { The corresponding string for the item defined by num 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {getConfigurationStateName:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:getConfigurationStateName}}}{
const char * ManipulatorModel::getConfigurationStateName (int }{i num}{, int }{i state}{) const
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a3}{*bkmkend class_ManipulatorModel_a3}
Return the state of the configuration item  
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi num}{   The item for corresponding to the name of the robots configuration  
ar }{bi state}{   The sate of the configuration defined by num for example for a Puma like robot we have sates like Arm , 0 -> right handed 1 -> left handed,  Elbow, 0 -> down 1 -> up Wrist, 0 ->non flipped 1 -> flipped
ar 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { The corresponding string for the sate defined by num 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {setConfigurationStateName:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:setConfigurationStateName}}}{
void ManipulatorModel::setConfigurationStateName (int }{i num}{, int }{i state}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a4}{*bkmkend class_ManipulatorModel_a4}
sets the configuration state defined by num to the state variable 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {displayConfiguration:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:displayConfiguration}}}{void ManipulatorModel::displayConfiguration (int & }
{i configuration}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a5}{*bkmkend class_ManipulatorModel_a5}Displays the current
 configuration of the manipulator for debugging purposes 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {forwardKinematics:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:forwardKinematics}}}{void ManipulatorModel::forwardKinematics (VectorBase & 
}{i joinAngles}{, Transform & }{i endEffectorTransform}{, int & }{i configuration}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a6}{*bkmkend class_ManipulatorModel_a6}
Given the vector of joint angles this function provides  the end effector position and orientaion  with the current configuration of the manipulator. 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   A vector containing the position  of each joint in radians  
ar }{bi endEffectorTransformation}{   The corresponding 4x4 homogenous  transformation calculated using  the forward kinematics 
ar }{bi configuration}{   The state of the robot for the  given joint angle vector 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {inverseKinematics:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:inverseKinematics}}}{int ManipulatorModel::inverseKinematics (Transform & }{
i endEffectorTranform}{, double }{i epsilon}{, VectorBase & }{i jointAngles}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a7}{*bkmkend class_ManipulatorModel_a7}
Given the end effector position and orientation this function calculates the corresponding joint angle vector.
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi endEffectorTransformation}{   The end effector position and  orientation 
ar }{bi epsilon}{   A measure of how close the user  want to get close to a singularity  
ar }{bi jointAngles}{   The calculated joint angle vector 
ar 
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {b Returns: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 { -1 if the robot is in near to  a singularpoint (as
 much as epsilon)  0 for safe.  if -1 is returned the status variable is also set to -1 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {manipulatorJacobian:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:manipulatorJacobian}}}{
void ManipulatorModel::manipulatorJacobian (VectorBase & }{i jointAngles}{, MatrixBase & }{i jacobian}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a8}{*bkmkend class_ManipulatorModel_a8}
Calcuates the manipulator Jacobian from given the joint angles 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   the current position of the manipulator 
ar }{bi jacobian}{   the corresponding manipulator Jacobian 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {inverseJacobian:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:inverseJacobian}}}{void ManipulatorModel::inverseJacobian (VectorBase & }{
i jointAngles}{, MatrixBase & }{i inverseJacobian}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a9}{*bkmkend class_ManipulatorModel_a9}
Calculates the inverse or the corresponding pseudoinverse of the manipulator jacobian 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   the current position of the manipulator 
ar }{bi inverseJacobian}{   the corresponding manipulator Jacobian inverse 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {jacobianTranpose:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:jacobianTranpose}}}{void ManipulatorModel::jacobianTranpose (VectorBase & }{
i jointAngles}{, MatrixBase & }{i jacobianTranspose}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a10}{*bkmkend class_ManipulatorModel_a10}
Calcuates the transpose of the manipulator Jacobian from given the joint angles 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   the current position of the manipulator 
ar }{bi jacobianTranpose}{   the corresponding manipulator Jacobian transpose 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {inverseJacobianTranspose:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:inverseJacobianTranspose}}}{
void ManipulatorModel::inverseJacobianTranspose (VectorBase & }{i jointAngles}{, MatrixBase & }{i inverseJacobianTranspose}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a11}{*bkmkend class_ManipulatorModel_a11}
Calculates the inverse or the corresponding pseudoinverse of the transpose of the manipulator jacobian 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   the current position of the manipulator 
ar }{bi inverseJacobianTranspose}{   the corresponding manipulator Jacobian transpose inverse 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {endEffectorForceToJointTorque:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:endEffectorForceToJointTorque}}}{
void ManipulatorModel::endEffectorForceToJointTorque (VectorBase & }{i jointAngles}{, VectorBase & }{i endEffectorForces}{, VectorBase & }{i jointTorques}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a12}{*bkmkend class_ManipulatorModel_a12}
Calculates the corresponding joint torques from the given end effector forces using jointTorqueVector = JacobianTranspose * forcevector 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   current joint angles 
ar }{bi endEffectorForces}{   the vector containing the forces applied to the end effector 
ar }{bi jointTorques}{   the correspondign joint torque vector 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {jointTorqueToEndEffectorForce:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:jointTorqueToEndEffectorForce}}}{
void ManipulatorModel::jointTorqueToEndEffectorForce (VectorBase & }{i jointAngles}{, VectorBase & }{i jointTorques}{, VectorBase & }{i endEffectorForces}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a13}{*bkmkend class_ManipulatorModel_a13}
Calculates the corresponding end effector forces from the given joint torque vector using endEffectorForces = inverseofJacobianTranspose * jointTorques 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   current joint angles 
ar }{bi jointTorques}{   the joint torque vector  
ar }{bi endEffectorForces}{   the corresponding forces applied to the end effector 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {cartesianVelocityToJointVelocity:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {ManipulatorModel:cartesianVelocityToJointVelocity}}}{
void ManipulatorModel::cartesianVelocityToJointVelocity (VectorBase & }{i jointAngles}{, VectorBase & }{i cartesianVelocity}{, VectorBase & }{i jointVelocity}{)
ar }ardlain s33qj li360ri0sb20sa40widctlparfaautoadjustrightrin0lin360itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {{*bkmkstart class_ManipulatorModel_a14}{*bkmkend class_ManipulatorModel_a14}
Calculates the corresponding joint velocities of the robot given the end effector velocities in task space using  qdot = JacobianInverse * xdot 
ar }{b Parameters: }{
ar }ardlain s44ql li720ri0widctlparfaautoadjustrightrin0lin720itap0 fs20lang1033langfe1033cgridlangnp1033langfenp1033 {bi jointAngles}{   current joint angles  (required for Jacobian calculation
s can also be the endEffector transform..)  
ar }{bi cartesianVelocity}{   cartesian velocities/moments vector 
ar }{bi jointVelocities}{   corresponding joint velocity vector 
ar 
ar }ardlain s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 cbpat17 bf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautooutlinelevel3adjustrightrin0lin0itap0 bvf1fs18lang1033langfe1033cgridlangnp1033langfenp1033 {xe {jointVelocityToCartesianVelocity:ManipulatorModel}}}{ardlain 
s4ql li0ri0sb240sa60keepnwidctlparfaautoo