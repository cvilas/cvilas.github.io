<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Vector&lt; size, T &gt; Class Template Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>Vector&lt; size, T &gt; Class Template Reference</h1>The class <code>Vector</code> provides is equivalent to a <code><a class="el" href="classColumnVector.htm">ColumnVector</a></code> object.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Vector_8hpp-source.htm">Vector.hpp</a>&gt;</code>
<p>
<p>Inheritance diagram for Vector&lt; size, T &gt;:
<p><center><img src="classVector.png" usemap="#Vector< size, T >_map" border="0" alt=""></center>
<map name="Vector< size, T >_map">
<area href="classColumnVector.htm" alt="ColumnVector< size, T >" shape="rect" coords="82,112,236,136">
<area href="classMatrix.htm" alt="Matrix< size, 1, T >" shape="rect" coords="0,56,154,80">
<area href="classVectorBase.htm" alt="VectorBase< T >" shape="rect" coords="164,56,318,80">
<area href="classMatrixBase.htm" alt="MatrixBase< T >" shape="rect" coords="0,0,154,24">
</map>
<a href="classVector-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a0">Vector</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a1">Vector</a> (const <a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt; &amp;vector)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a2">~Vector</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a3">Vector</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; size, 1, T &gt; &amp;matrix)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt; &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a4">operator=</a> (const <a class="el" href="classVectorBase.htm">VectorBase</a>&lt; T &gt; &amp;vectorBase)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrixInitializer.htm">MatrixInitializer</a>&lt; T &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector.htm#a5">operator=</a> (const T &amp;value)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;int size, class T = double&gt;<br>
 class Vector&lt; size, T &gt;</h3>

The class <code>Vector</code> provides is equivalent to a <code><a class="el" href="classColumnVector.htm">ColumnVector</a></code> object. 
<p>
<b>Example Program:</b> See the Example program for class <a class="el" href="classColumnVector.htm">ColumnVector</a>. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="a0" doxytag="Vector::Vector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::<a class="el" href="classVector.htm">Vector</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. No element initializations.     </td>
  </tr>
</table>
<a class="anchor" name="a1" doxytag="Vector::Vector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::<a class="el" href="classVector.htm">Vector</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vector</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Copy Constructor.     </td>
  </tr>
</table>
<a class="anchor" name="a2" doxytag="Vector::~Vector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::~<a class="el" href="classVector.htm">Vector</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default Destructor.    </td>
  </tr>
</table>
<a class="anchor" name="a3" doxytag="Vector::Vector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::<a class="el" href="classVector.htm">Vector</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; size, 1, T &gt; &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>matrix</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The conversion constructor for conversion of a <code><a class="el" href="classMatrix.htm">Matrix</a></code> type of single column into type <code>Vector</code>.    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a5" doxytag="Vector::operator="></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrixInitializer.htm">MatrixInitializer</a>&lt;T&gt; <a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::operator=           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const T &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>value</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initialize a vector object. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>The value to which all elements in the vector are initialized. The initialization of the vector object can also be done as a comma seperated list. For example: <div class="fragment"><pre class="fragment">    <a class="code" href="classColumnVector.htm">ColumnVector&lt;3&gt;</a> myVector;
    myVector = 67.88, 45.89, 90; 
</pre></div></td></tr>
  </table>
</dl>

<p>
Reimplemented from <a class="el" href="classColumnVector.htm#a13">ColumnVector&lt; size, T &gt;</a>.    </td>
  </tr>
</table>
<a class="anchor" name="a4" doxytag="Vector::operator="></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;int size, class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classVector.htm">Vector</a>&lt;size, T&gt;&amp; <a class="el" href="classVector.htm">Vector</a>&lt; size, T &gt;::operator=           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classVectorBase.htm">VectorBase</a>&lt; T &gt; &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vectorBase</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Assign a <code><a class="el" href="classVectorBase.htm">VectorBase</a></code> type to a <code>Vector</code> type. Both objects must have the same dimensions.
<p>
Reimplemented from <a class="el" href="classColumnVector.htm#a12">ColumnVector&lt; size, T &gt;</a>.    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Vector_8hpp-source.htm">Vector.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon May 2 11:22:00 EDT 2005
<br>
Vilas Kumar Chitrakaran (cvilas at ces dot clemson dot edu)
</body>
</html>
