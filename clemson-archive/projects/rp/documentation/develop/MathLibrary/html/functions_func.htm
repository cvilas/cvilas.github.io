<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Class Members - Functions</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindexHL" href="functions.htm">Class&nbsp;Members</a></div>
<div class="qindex"><a class="qindex" href="functions.htm">All</a> | <a class="qindexHL" href="functions_func.htm">Functions</a> | <a class="qindex" href="functions_rela.htm">Related&nbsp;Functions</a></div>
<div class="qindex"><a class="qindex" href="#index_a">a</a> | <a class="qindex" href="#index_c">c</a> | <a class="qindex" href="#index_d">d</a> | <a class="qindex" href="#index_e">e</a> | <a class="qindex" href="#index_f">f</a> | <a class="qindex" href="#index_g">g</a> | <a class="qindex" href="#index_h">h</a> | <a class="qindex" href="#index_i">i</a> | <a class="qindex" href="#index_l">l</a> | <a class="qindex" href="#index_m">m</a> | <a class="qindex" href="#index_n">n</a> | <a class="qindex" href="#index_o">o</a> | <a class="qindex" href="#index_r">r</a> | <a class="qindex" href="#index_s">s</a> | <a class="qindex" href="#index_t">t</a> | <a class="qindex" href="#index_v">v</a> | <a class="qindex" href="#index_~">~</a></div>

<p>

<p>
<h3><a class="anchor" name="index_a">- a -</a></h3><ul>
<li>Adams3Integrator()
: <a class="el" href="classAdams3Integrator.htm#a1">Adams3Integrator&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_c">- c -</a></h3><ul>
<li>calculateInternalParameters()
: <a class="el" href="classLowpassFilter.htm#b0">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#b0">HighpassFilter&lt; T &gt;</a><li>ColumnVector()
: <a class="el" href="classColumnVector.htm#a3">ColumnVector&lt; size, T &gt;</a></ul>
<h3><a class="anchor" name="index_d">- d -</a></h3><ul>
<li>differentiate()
: <a class="el" href="classDifferentiator4O.htm#a3">Differentiator4O&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a9">Differentiator&lt; T &gt;</a><li>Differentiator()
: <a class="el" href="classDifferentiator.htm#a0">Differentiator&lt; T &gt;</a><li>Differentiator4O()
: <a class="el" href="classDifferentiator4O.htm#a0">Differentiator4O&lt; T &gt;</a><li>disableFilter()
: <a class="el" href="classDifferentiator.htm#a6">Differentiator&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_e">- e -</a></h3><ul>
<li>enableFilter()
: <a class="el" href="classDifferentiator.htm#a7">Differentiator&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_f">- f -</a></h3><ul>
<li>filter()
: <a class="el" href="classLowpassFilter.htm#a12">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a11">HighpassFilter&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_g">- g -</a></h3><ul>
<li>getColumn()
: <a class="el" href="classMatrix.htm#a6">Matrix&lt; numRows, numColumns, T &gt;</a><li>getCutOffFrequencyHz()
: <a class="el" href="classLowpassFilter.htm#a4">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a5">HighpassFilter&lt; T &gt;</a><li>getCutOffFrequencyRad()
: <a class="el" href="classLowpassFilter.htm#a5">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a6">HighpassFilter&lt; T &gt;</a><li>getDampingRatio()
: <a class="el" href="classLowpassFilter.htm#a7">LowpassFilter&lt; T &gt;</a><li>getElement()
: <a class="el" href="classVectorBase.htm#a3">VectorBase&lt; T &gt;</a>, <a class="el" href="classRowVector.htm#a5">RowVector&lt; size, T &gt;</a>, <a class="el" href="classMatrixBase.htm#a5">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a8">Matrix&lt; numRows, numColumns, T &gt;</a>, <a class="el" href="classColumnVector.htm#a6">ColumnVector&lt; size, T &gt;</a><li>getElementsPointer()
: <a class="el" href="classVectorBase.htm#a2">VectorBase&lt; T &gt;</a>, <a class="el" href="classRowVector.htm#a4">RowVector&lt; size, T &gt;</a>, <a class="el" href="classMatrixBase.htm#a2">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a3">Matrix&lt; numRows, numColumns, T &gt;</a>, <a class="el" href="classColumnVector.htm#a5">ColumnVector&lt; size, T &gt;</a><li>getErrorMessage()
: <a class="el" href="classMathException.htm#a2">MathException</a><li>getEulerAngles()
: <a class="el" href="classTransform.htm#a6">Transform</a><li>getNumColumns()
: <a class="el" href="classMatrixBase.htm#a4">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a5">Matrix&lt; numRows, numColumns, T &gt;</a><li>getNumElements()
: <a class="el" href="classVectorBase.htm#a5">VectorBase&lt; T &gt;</a>, <a class="el" href="classRowVector.htm#a8">RowVector&lt; size, T &gt;</a>, <a class="el" href="classColumnVector.htm#a9">ColumnVector&lt; size, T &gt;</a><li>getNumRows()
: <a class="el" href="classMatrixBase.htm#a3">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a4">Matrix&lt; numRows, numColumns, T &gt;</a><li>getRollPitchYaw()
: <a class="el" href="classTransform.htm#a5">Transform</a><li>getRow()
: <a class="el" href="classMatrix.htm#a7">Matrix&lt; numRows, numColumns, T &gt;</a><li>getSamplingPeriod()
: <a class="el" href="classLowpassFilter.htm#a9">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a8">HighpassFilter&lt; T &gt;</a><li>getSubMatrix()
: <a class="el" href="classMatrix.htm#a10">Matrix&lt; numRows, numColumns, T &gt;</a><li>getTranslation()
: <a class="el" href="classTransform.htm#a4">Transform</a></ul>
<h3><a class="anchor" name="index_h">- h -</a></h3><ul>
<li>HighpassFilter()
: <a class="el" href="classHighpassFilter.htm#a1">HighpassFilter&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_i">- i -</a></h3><ul>
<li>initializeFilter()
: <a class="el" href="classLowpassFilter.htm#a11">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a10">HighpassFilter&lt; T &gt;</a><li>integrate()
: <a class="el" href="classIntegrator.htm#a5">Integrator&lt; T &gt;</a>, <a class="el" href="classAdams3Integrator.htm#a4">Adams3Integrator&lt; T &gt;</a><li>Integrator()
: <a class="el" href="classIntegrator.htm#a1">Integrator&lt; T &gt;</a><li>isColumnVector()
: <a class="el" href="classVectorBase.htm#a8">VectorBase&lt; T &gt;</a><li>isErrorTypeDimensionTooLarge()
: <a class="el" href="classMathException.htm#a8">MathException</a><li>isErrorTypeDivideByZero()
: <a class="el" href="classMathException.htm#a5">MathException</a><li>isErrorTypeIncompatibleSize()
: <a class="el" href="classMathException.htm#a6">MathException</a><li>isErrorTypeIndexOutOfRange()
: <a class="el" href="classMathException.htm#a3">MathException</a><li>isErrorTypeSingularMatrix()
: <a class="el" href="classMathException.htm#a4">MathException</a><li>isErrorTypeTypeMismatch()
: <a class="el" href="classMathException.htm#a7">MathException</a><li>isRowVector()
: <a class="el" href="classVectorBase.htm#a7">VectorBase&lt; T &gt;</a>, <a class="el" href="classRowVector.htm#a7">RowVector&lt; size, T &gt;</a>, <a class="el" href="classColumnVector.htm#a8">ColumnVector&lt; size, T &gt;</a></ul>
<h3><a class="anchor" name="index_l">- l -</a></h3><ul>
<li>LowpassFilter()
: <a class="el" href="classLowpassFilter.htm#a0">LowpassFilter&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_m">- m -</a></h3><ul>
<li>MathException()
: <a class="el" href="classMathException.htm#a0">MathException</a><li>Matrix()
: <a class="el" href="classMatrix.htm#a1">Matrix&lt; numRows, numColumns, T &gt;</a><li>MatrixBase()
: <a class="el" href="classMatrixBase.htm#a0">MatrixBase&lt; T &gt;</a><li>MatrixInitializer()
: <a class="el" href="classMatrixInitializer.htm#a0">MatrixInitializer&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_n">- n -</a></h3><ul>
<li>norm()
: <a class="el" href="classVectorBase.htm#a6">VectorBase&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_o">- o -</a></h3><ul>
<li>ODESolverRK4()
: <a class="el" href="classODESolverRK4.htm#a1">ODESolverRK4&lt; T &gt;</a><li>operator *()
: <a class="el" href="classMatrix.htm#a18">Matrix&lt; numRows, numColumns, T &gt;</a><li>operator()()
: <a class="el" href="classRowVector.htm#a10">RowVector&lt; size, T &gt;</a>, <a class="el" href="classMatrix.htm#a13">Matrix&lt; numRows, numColumns, T &gt;</a>, <a class="el" href="classColumnVector.htm#a11">ColumnVector&lt; size, T &gt;</a><li>operator+()
: <a class="el" href="classMatrix.htm#a16">Matrix&lt; numRows, numColumns, T &gt;</a><li>operator,()
: <a class="el" href="classMatrixInitializer.htm#a2">MatrixInitializer&lt; T &gt;</a><li>operator-()
: <a class="el" href="classMatrix.htm#a17">Matrix&lt; numRows, numColumns, T &gt;</a><li>operator/()
: <a class="el" href="classMatrix.htm#a19">Matrix&lt; numRows, numColumns, T &gt;</a><li>operator=()
: <a class="el" href="classVectorBase.htm#a10">VectorBase&lt; T &gt;</a>, <a class="el" href="classVector.htm#a5">Vector&lt; size, T &gt;</a>, <a class="el" href="classTransform.htm#a3">Transform</a>, <a class="el" href="classRowVector.htm#a12">RowVector&lt; size, T &gt;</a>, <a class="el" href="classMatrixBase.htm#a8">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a15">Matrix&lt; numRows, numColumns, T &gt;</a>, <a class="el" href="classColumnVector.htm#a13">ColumnVector&lt; size, T &gt;</a><li>output()
: <a class="el" href="classVectorBase.htm#a11">VectorBase&lt; T &gt;</a>, <a class="el" href="classMatrixBase.htm#a9">MatrixBase&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_r">- r -</a></h3><ul>
<li>reset()
: <a class="el" href="classODESolverRK4.htm#a5">ODESolverRK4&lt; T &gt;</a>, <a class="el" href="classIntegrator.htm#a4">Integrator&lt; T &gt;</a>, <a class="el" href="classDifferentiator4O.htm#a2">Differentiator4O&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a8">Differentiator&lt; T &gt;</a>, <a class="el" href="classAdams3Integrator.htm#a3">Adams3Integrator&lt; T &gt;</a><li>RowVector()
: <a class="el" href="classRowVector.htm#a2">RowVector&lt; size, T &gt;</a></ul>
<h3><a class="anchor" name="index_s">- s -</a></h3><ul>
<li>setAutoInit()
: <a class="el" href="classLowpassFilter.htm#a10">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a9">HighpassFilter&lt; T &gt;</a><li>setCutOffFrequencyHz()
: <a class="el" href="classLowpassFilter.htm#a2">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a3">HighpassFilter&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a3">Differentiator&lt; T &gt;</a><li>setCutOffFrequencyRad()
: <a class="el" href="classLowpassFilter.htm#a3">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a4">HighpassFilter&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a4">Differentiator&lt; T &gt;</a><li>setDampingRatio()
: <a class="el" href="classLowpassFilter.htm#a6">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a5">Differentiator&lt; T &gt;</a><li>setElement()
: <a class="el" href="classVectorBase.htm#a4">VectorBase&lt; T &gt;</a>, <a class="el" href="classRowVector.htm#a6">RowVector&lt; size, T &gt;</a>, <a class="el" href="classMatrixBase.htm#a6">MatrixBase&lt; T &gt;</a>, <a class="el" href="classMatrix.htm#a9">Matrix&lt; numRows, numColumns, T &gt;</a>, <a class="el" href="classColumnVector.htm#a7">ColumnVector&lt; size, T &gt;</a><li>setODE()
: <a class="el" href="classODESolverRK4.htm#a4">ODESolverRK4&lt; T &gt;</a><li>setSamplingPeriod()
: <a class="el" href="classODESolverRK4.htm#a3">ODESolverRK4&lt; T &gt;</a>, <a class="el" href="classLowpassFilter.htm#a8">LowpassFilter&lt; T &gt;</a>, <a class="el" href="classIntegrator.htm#a3">Integrator&lt; T &gt;</a>, <a class="el" href="classHighpassFilter.htm#a7">HighpassFilter&lt; T &gt;</a>, <a class="el" href="classDifferentiator.htm#a2">Differentiator&lt; T &gt;</a><li>setSubMatrix()
: <a class="el" href="classMatrix.htm#a11">Matrix&lt; numRows, numColumns, T &gt;</a><li>stepSolve()
: <a class="el" href="classODESolverRK4.htm#a6">ODESolverRK4&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_t">- t -</a></h3><ul>
<li>Transform()
: <a class="el" href="classTransform.htm#a1">Transform</a></ul>
<h3><a class="anchor" name="index_v">- v -</a></h3><ul>
<li>Vector()
: <a class="el" href="classVector.htm#a3">Vector&lt; size, T &gt;</a><li>VectorBase()
: <a class="el" href="classVectorBase.htm#a0">VectorBase&lt; T &gt;</a></ul>
<h3><a class="anchor" name="index_~">- ~ -</a></h3><ul>
<li>~ColumnVector()
: <a class="el" href="classColumnVector.htm#a4">ColumnVector&lt; size, T &gt;</a><li>~Differentiator()
: <a class="el" href="classDifferentiator.htm#a1">Differentiator&lt; T &gt;</a><li>~Differentiator4O()
: <a class="el" href="classDifferentiator4O.htm#a1">Differentiator4O&lt; T &gt;</a><li>~HighpassFilter()
: <a class="el" href="classHighpassFilter.htm#a2">HighpassFilter&lt; T &gt;</a><li>~Integrator()
: <a class="el" href="classIntegrator.htm#a2">Integrator&lt; T &gt;</a><li>~LowpassFilter()
: <a class="el" href="classLowpassFilter.htm#a1">LowpassFilter&lt; T &gt;</a><li>~MathException()
: <a class="el" href="classMathException.htm#a1">MathException</a><li>~Matrix()
: <a class="el" href="classMatrix.htm#a2">Matrix&lt; numRows, numColumns, T &gt;</a><li>~MatrixInitializer()
: <a class="el" href="classMatrixInitializer.htm#a1">MatrixInitializer&lt; T &gt;</a><li>~RowVector()
: <a class="el" href="classRowVector.htm#a3">RowVector&lt; size, T &gt;</a><li>~Transform()
: <a class="el" href="classTransform.htm#a2">Transform</a><li>~Vector()
: <a class="el" href="classVector.htm#a2">Vector&lt; size, T &gt;</a><li>~VectorBase()
: <a class="el" href="classVectorBase.htm#a1">VectorBase&lt; T &gt;</a></ul>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon May 2 11:22:00 EDT 2005
<br>
Vilas Kumar Chitrakaran (cvilas at ces dot clemson dot edu)
</body>
</html>
