<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Motion Mind DC Motor Controller 1.0: MotionMind.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>MotionMind.hpp</h1><a href="MotionMind_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001   
<a name="l00002"></a>00002 <span class="preprocessor">#ifndef INCLUDED_MotionMind_hpp</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="preprocessor">#define INCLUDED_MotionMind_hpp</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>  
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;inttypes.h&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 
<a name="l00009"></a><a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e">00009</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e">MMReg</a>
<a name="l00010"></a>00010 {
<a name="l00011"></a>00011   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29eb1dedea465ec450da8072a99dd7ccc7e">MMReg_position</a>= 0,            <span class="comment">// current position count from encoder x 4 </span>
<a name="l00012"></a>00012                                                                                                                                                                                                                                                                                                                                 
<a name="l00013"></a>00013   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e754e60d9cea0a4e1e658b6700e131ed5">MMReg_velocityLimit</a>,  <span class="comment">// Limit on motor speed changes per step or</span>
<a name="l00014"></a>00014                                                                                                                                                                                 
<a name="l00015"></a>00015   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e4a131e9c4652295d6788adb0bbf3b8bd">MMReg_velocityFf</a>,             <span class="comment">// In mode 4 (serial closed-loop mode), if </span>
<a name="l00016"></a>00016                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00017"></a>00017   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e225dda3c150c4b48a2167a580480015a">MMReg_function</a>,                       <span class="comment">// Contain a number of bits that enable/disable</span>
<a name="l00018"></a>00018                                                                                                                                                                                                                                 
<a name="l00019"></a>00019   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ef8fc2b30d0f6d1f6f9d24d58b779d1ff">MMReg_pTerm</a>,                  <span class="comment">// proportional gain (0 to +65,535), (6000).</span>
<a name="l00020"></a>00020   
<a name="l00021"></a>00021   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e3fa6cf5bfaa1d524f6dd40001a086cd0">MMReg_iTerm</a>   ,                       <span class="comment">// integral gain (0 to +65,535), (35).</span>
<a name="l00022"></a>00022   
<a name="l00023"></a>00023   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e8d8a95145ac5e660fe5748b07836e7dc">MMReg_dTerm</a>,                  <span class="comment">// derivative gain (0 to +65,535), (0).</span>
<a name="l00024"></a>00024   
<a name="l00025"></a>00025   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e68c21d4cfe0bdbe7c6a9d098d4921c0a">MMReg_address</a>,                        <span class="comment">// device address (0 to +255), (1).</span>
<a name="l00026"></a>00026   
<a name="l00027"></a>00027   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e9a868885577086d46b3fa7a09498b911">MMReg_pidScalar</a>,              <span class="comment">// number of "divide-by-twos" the output goes  </span>
<a name="l00028"></a>00028                                                                                                                                                                                                                                                                                 
<a name="l00029"></a>00029   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ed8b5dbd462d49743594345abf704f61e">MMReg_timer</a>,                  <span class="comment">// debounce and motor speed update timer, in </span>
<a name="l00030"></a
<a name="l00031"></a>00031   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ef5d0296fa2017f3df274f9823bf6f8dc">MMReg_rcMax</a>,                  <span class="comment">// R/C pulse width associated with maximum   </span>
<a name="l00032"></a>00032                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00033"></a>00033   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ed6cef2bd14b383b6b1d0e12a64f74ef2">MMReg_rcMin</a>,                  <span class="comment">// R/C pulse width associated with maximum </span>
<a name="l00034"></a>00034                                                                                                                                                                                                                                                                                                 
<a name="l00035"></a>00035   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e3c77099d1b30a2eb7ffd49c10b1d4082">MMReg_rcBand</a>,                 <span class="comment">// Pulse widths of 1.5ms +/- RCBAND (in 814ns </span>
<a name="l00036"></a>00036                                                                                                                                                                                                                                                                                                                                 
<a name="l00037"></a>00037   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e508eee0a64b820f532ffa919dfc461b4">MMReg_rcCount</a>,                        <span class="comment">// raw R/C pulse width measured while in mode 0, </span>
<a name="l00038"></a>00038                                                                                                                                                                                                                                 
<a name="l00039"></a>00039   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ebb83ab2a880994f2221087a58370174c">MMReg_velocity</a>,                       <span class="comment">// in mode 4 (serial closed-loop mode) this  </span>
<a name="l00040"></a>00040                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00041"></a>00041   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e6abfdd7ec59e5707df9805fb85aa893b">MMReg_time</a>,                           <span class="comment">// Elapsed time since power up in 5ms increments. </span>
<a name="l00042"></a>00042                                                   
<a name="l00043"></a>00043   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ef76de6fe7562a0657359841f91bb73bf">MMReg_status</a>,                 <span class="comment">// contains bits related to input pins or </span>
<a name="l00044"></a>00044                                                                                                                                                                                 
<a name="l00045"></a>00045   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e1cd2ab95410052cf29e60a1fd582d100">MMReg_revision</a>,                       <span class="comment">// firmware revision. This may be compared </span>
<a name="l00046"></a>00046                                                                                                                                                                                                                                 
<a name="l00047"></a>00047   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ef4758cb2d3f5f49551d01d12f03ccd7b">MMReg_mode</a>,                           <span class="comment">// current operating mode, (0 to +7).</span>
<a name="l00048"></a>00048   
<a name="l00049"></a>00049   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e5dd2f05846f0a550dd3598f6b4066dad">MMReg_analogCon</a>,              <span class="comment">// Raw analog measurement at J4 P4. The value will </span>
<a name="l00050"></a>00050                                                                                                                                                                                                                                 
<a name="l00051"></a>00051   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29ea1e5477fe49d1e20e5cb63dbf493059e">MMReg_analogFbck</a>,             <span class="comment">// Raw analog measurement at J4 P3. The value </span>
<a name="l00052"></a>00052                                                                                                                                                                                                                                 
<a name="l00053"></a>00053   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e578f09de9a90f0a76da1d0954fc79ba0">MMReg_pwmOut</a>,                 <span class="comment">// actual PWM drive signal where the sign </span>
<a name="l00054"></a>00054                                                                                                                                                                                                                                 
<a name="l00055"></a>00055   <a class="code" href="MotionMind_8hpp.htm#65a43d0f26eb331b308d526ea131e29e12710f38f178a7c09a2e67ef50514f28">MMReg_indexPos</a>                        <span class="comment">// 2's compliment number, relates to the last </span>
<a name="l00056"></a
<a name="l00057"></a>00057 <span class="preprocessor">#ifdef FIRMWARE_REVISION_5UP</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span>  ,MMReg_vnLimit,                       <span class="comment">// (Rev5+ firmware only) 32-bit 2's compliment </span>
<a name="l00059"></a
<a name="l00060"></a>00060   MMReg_vpLimit,                        <span class="comment">// (Rev5+ firmware only) 32-bit 2's compliment </span>
<a name="l00061"></a>00061                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00062"></a>00062   MMReg_pwmLimit,                       <span class="comment">// (Rev5+ firmware only) 16 bit register (limited </span>
<a name="l00063"></a>00063                                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00064"></a>00064   MMReg_deadband,                       <span class="comment">// (Rev5+ firmware only) 16-bit register (limited 0  </span>
<a name="l00065"></a>00065                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00066"></a>00066   MMReg_desiredPosition <span class="comment">// (Rev5+ firmware only) 32-bit 2's compliment </span>
<a name="l00067"></a>00067 <span class="preprocessor">                                                                                                                                                                                                                                                                                                                                                #endif</span>
<a name="l00068"></a>00068 <span class="preprocessor"></span>}<a class="code" href="MotionMind_8hpp.htm#f5f4a36cdb1a71965e0c9966b63c2667">MMReg_t</a>;
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 
<a name="l00071"></a><a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf">00071</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf">MMFunc</a>
<a name="l00072"></a>00072 {
<a name="l00073"></a>00073   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcfe526c077ccf58254fd44ba9ec6818784">MMFunc_posPwUp</a> = 0x0001,     <span class="comment">// When set: The position register will be loaded </span>
<a name="l00074"></a
<a name="l00075"></a>00075   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcfb61ed9c3f6b12c4e44e0d711354aafd0">MMFunc_satProt</a> = 0x0010,     <span class="comment">// When set: The integral summation is limited to </span>
<a name="l00076"></a>00076                                                                                                                                                                                                                                                                                                                                                                                                 
<a name="l00077"></a>00077   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcfe885355d5bf0c5e8028866bfa2f234e5">MMFunc_savePos</a> = 0x0020,     <span class="comment">// When set: If operating in mode 4 (serial closed-loop), </span>
<a name="l00078"></a>00078                                                                                                                                                                                                                                                                                                 
<a name="l00079"></a>00079   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf6690b0c5d444f1eb07ee93391e4fa390">MMFunc_velLimit</a> = 0x0040,    <span class="comment">// When set: If operating in mode 4 (serial closed-loop), </span>
<a name="l00080"></a>00080                                                                                                                                                                                                                                                                                                                                                 
<a name="l00081"></a>00081   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf8cf6a35a89058127468c8e75716bb664">MMFunc_activeStop</a> = 0x0080,     <span class="comment">// When set: When motor control reaches a stop condition </span>
<a name="l00082"></a>00082                                                                                                                                                                                                 
<a name="l00083"></a>00083   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcfd1cc34bba376e997d4d2a67b979f65eb">MMFunc_lastRc</a> = 0x0100,      <span class="comment">// When set: In mode 0 (R/C open loop) if a bad R/C pulse </span>
<a name="l00084"></a>00084                                                                                                                                                                                                                                                                                                                                                                                                       
<a name="l00085"></a>00085   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf48944ee8d1e386007120339c32abe33a">MMFunc_adStep</a> = 0x0200,             <span class="comment">// When set: Modes 0,1, and 2 use an analog input to </span>
<a name="l00086"></a>00086                                                                                                                                                                                                                                                                                                                                                       
<a name="l00087"></a>00087   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf09ba672c16c35cfe7b6485ea1d51268e">MMFunc_adSerial</a> = 0x0400,   <span class="comment">// When set: In Mode 5 the source of the desired position </span>
<a name="l00088"></a>00088                                                                                                                                                                                                                                                                                                      
<a name="l00089"></a>00089   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcff3ce8111eea530e873daa54668bfb0c1">MMFunc_enableDb</a> = 0x0800,   <span class="comment">// When set: In modes 4 and 5 the contents of the </span>
<a name="l00090"></a>00090                                                                                                                                                                                                                                                                                                                                                                                                                                                      
<a name="l00091"></a>00091   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcfb4371243f7a5ba4a5e3aac5e520c10e8">MMFunc_selectFbck</a> = 0x1000,    <span class="comment">// Firmware revision 4.0, Mode 0: </span>
<a name="l00092"></a
<a name="l00093"></a>00093   <a class="code" href="MotionMind_8hpp.htm#008f6d1c9ab5e8d4648814352b8afbcf0a13b62cb69685659e99e9166a64e36c">MMFunc_virtLimit</a> = 0x2000      <span class="comment">// Virtual limit settings are used to restrict movement </span>
<a name="l00094"></a>00094                                                                                                                                                      }<a class="code" href="MotionMind_8hpp.htm#9384de359c703eca9de169928959d595">MMFunc_t</a>;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 
<a name="l00097"></a><a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f3">00097</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f3">MMStatus</a>
<a name="l00098"></a>00098 {
<a name="l00099"></a>00099   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f309189d75f0cb3de8acbf1808f23bacaf">MMStatus_negLimit</a> = 0x1,      <span class="comment">// Set when the input NEG_LIM (J4 P16) is at 0V.</span>
<a name="l00100"></a>00100   
<a name="l00101"></a>00101   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f396531eb66c69a80cfaa2c2fc93cd2e01">MMStatus_posLimit</a> = 0x02,     <span class="comment">// Set when the input POS_LIM (J4 P17) is at 0V.</span>
<a name="l00102"></a>00102   
<a name="l00103"></a>00103   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f34cdd2a1c0863e8da3292eb277437b5cd">MMStatus_brake</a> = 0x04,                <span class="comment">// Set when the input _BRAKE (J4 P12) is at 0V.</span>
<a name="l00104"></a>00104   
<a name="l00105"></a>00105   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f35f4fc89e3e3f7778d97d8428f7626c1e">MMStatus_index</a> = 0x08,                <span class="comment">// Set when the input IND/RC (J6 P2) is at 0V.</span>
<a name="l00106"></a>00106   
<a name="l00107"></a>00107   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f3f8d6aec3ac66722aa9abb8246270a7f9">MMStatus_badRc</a> = 0x10,                <span class="comment">// Set when the R/C pulse is not received within </span>
<a name="l00108"></a>00108                                                                                                                                                                                                                                 
<a name="l00109"></a>00109   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f3567b8f47e082f6a569a9fb305240035b">MMStatus_vnLimit</a> = 0x20,      <span class="comment">// Set when the negative virtual limit position </span>
<a name="l00110"></a>00110                                                                                                                                                                         
<a name="l00111"></a>00111   <a class="code" href="MotionMind_8hpp.htm#6799e70861a284b9a2315ba49d01c4f3c7ec8548bb7a9e5bff5dc02483d2ead2">MMStatus_vpLimit</a> = 0x40               <span class="comment">// Set when the positive virtual limit position </span>
<a name="l00112"></a>00112                                                         }<a class="code" href="MotionMind_8hpp.htm#5e4d75e87b7bf3e0b8ae5ccd0c07698e">MMStatus_t</a>;
<a name="l00113"></a>00113 
<a name="l00114"></a>00114 
<a name="l00115"></a><a class="code" href="structMMData.htm">00115</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structMMData.htm">MMData</a>
<a name="l00116"></a>00116 {
<a name="l00117"></a><a class="code" href="structMMData.htm#102e7020e975ad20c494fd801d1cd8a6">00117</a>   int32_t <a class="code" href="structMMData.htm#102e7020e975ad20c494fd801d1cd8a6">position</a>;
<a name="l00118"></a><a class="code" href="structMMData.htm#1a0d10e9f464a82d8d5127e921dffb1f">00118</a>   int16_t <a class="code" href="structMMData.htm#1a0d10e9f464a82d8d5127e921dffb1f">velocityLimit</a>;
<a name="l00119"></a><a class="code" href="structMMData.htm#367ff5a0140b7a67b0e6a9ad211b4b39">00119</a>   int8_t  <a class="code" href="structMMData.htm#367ff5a0140b7a67b0e6a9ad211b4b39">velocityFf</a>;
<a name="l00120"></a><a class="code" href="structMMData.htm#5a4d8930426e5735723c6c81e02c9af9">00120</a>   int16_t <a class="code" href="structMMData.htm#5a4d8930426e5735723c6c81e02c9af9">function</a>;
<a name="l00121"></a><a class="code" href="structMMData.htm#c7b7772b3bd73da824305f5af8acbc47">00121</a>   int16_t <a class="code" href="structMMData.htm#c7b7772b3bd73da824305f5af8acbc47">pTerm</a>;
<a name="l00122"></a><a class="code" href="structMMData.htm#5315ca4109969404daa6c0ffc433cef1">00122</a>   int16_t <a class="code" href="structMMData.htm#5315ca4109969404daa6c0ffc433cef1">iTerm</a>;
<a name="l00123"></a><a class="code" href="structMMData.htm#4c4e674cc2f19722740d5c44e347b57c">00123</a>   int16_t <a class="code" href="structMMData.htm#4c4e674cc2f19722740d5c44e347b57c">dTerm</a>;
<a name="l00124"></a><a class="code" href="structMMData.htm#b017c9ff37826d4b36b793a8a722553a">00124</a>   int8_t  <a class="code" href="structMMData.htm#b017c9ff37826d4b36b793a8a722553a">address</a>;
<a name="l00125"></a><a class="code" href="structMMData.htm#a84f3168fa3b8d82089e0b4a866fdd90">00125</a>   int8_t  <a class="code" href="structMMData.htm#a84f3168fa3b8d82089e0b4a866fdd90">pidScalar</a>;
<a name="l00126"></a><a class="code" href="structMMData.htm#d21b489ed140218bb4da3fb775614349">00126</a>   int8_t  <a class="code" href="structMMData.htm#d21b489ed140218bb4da3fb775614349">timer</a>;
<a name="l00127"></a><a class="code" href="structMMData.htm#cf23d40ea91450274e91b944a4a06b8d">00127</a>   int16_t <a class="code" href="structMMData.htm#cf23d40ea91450274e91b944a4a06b8d">rcMax</a>;
<a name="l00128"></a><a class="code" href="structMMData.htm#df6622690c0f4c07fd303b652ae33aa3">00128</a>   int16_t <a class="code" href="structMMData.htm#df6622690c0f4c07fd303b652ae33aa3">rcMin</a>;
<a name="l00129"></a><a class="code" href="structMMData.htm#a5490ad016a7e2029ee888498def2782">00129</a>   int16_t <a class="code" href="structMMData.htm#a5490ad016a7e2029ee888498def2782">rcBand</a>;
<a name="l00130"></a><a class="code" href="structMMData.htm#4de363f7bbe8fcbcb139d06262810b27">00130</a>   int16_t <a class="code" href="structMMData.htm#4de363f7bbe8fcbcb139d06262810b27">rcCount</a>;
<a name="l00131"></a><a class="code" href="structMMData.htm#4100f820c001b4051fa018f3da54ba15">00131</a>   int16_t <a class="code" href="structMMData.htm#4100f820c001b4051fa018f3da54ba15">velocity</a>;
<a name="l00132"></a><a class="code" href="structMMData.htm#231af5baa200c3d2d53627d00abba36e">00132</a>   int32_t <a class="code" href="structMMData.htm#231af5baa200c3d2d53627d00abba36e">time</a>;
<a name="l00133"></a><a class="code" href="structMMData.htm#56af8b0cd764a94f34b59053aaf741f7">00133</a>   int16_t <a class="code" href="structMMData.htm#56af8b0cd764a94f34b59053aaf741f7">status</a>;
<a name="l00134"></a><a class="code" href="structMMData.htm#85cd7f130928655e696c41707c650920">00134</a>   int8_t  <a class="code" href="structMMData.htm#85cd7f130928655e696c41707c650920">revision</a>;
<a name="l00135"></a><a class="code" href="structMMData.htm#8d36fcf2da914b1ce366f5008bce4751">00135</a>   int8_t  <a class="code" href="structMMData.htm#8d36fcf2da914b1ce366f5008bce4751">mode</a>;
<a name="l00136"></a><a class="code" href="structMMData.htm#abacff63a736bba1d9c75605b8061d39">00136</a>   int16_t <a class="code" href="structMMData.htm#abacff63a736bba1d9c75605b8061d39">analogCon</a>;
<a name="l00137"></a><a class="code" href="structMMData.htm#9a6bf9482cce47b2b7160270f72ff382">00137</a>   int16_t <a class="code" href="structMMData.htm#9a6bf9482cce47b2b7160270f72ff382">analogFbck</a>;
<a name="l00138"></a><a class="code" href="structMMData.htm#d95d2f6bc5b26dfd5893fa975b961f46">00138</a>   int16_t <a class="code" href="structMMData.htm#d95d2f6bc5b26dfd5893fa975b961f46">pwmOut</a>;
<a name="l00139"></a><a class="code" href="structMMData.htm#881e17abc613c85778206053935a2c3e">00139</a>   int32_t <a class="code" href="structMMData.htm#881e17abc613c85778206053935a2c3e">indexPos</a>;
<a name="l00140"></a>00140 <span class="preprocessor">#ifdef FIRMWARE_REVISION_5UP</span>
<a name="l00141"></a>00141 <span class="preprocessor"></span>  int32_t vnLimit;
<a name="l00142"></a>00142   int32_t vpLimit;
<a name="l00143"></a>00143   int16_t pwmLimit;
<a name="l00144"></a>00144   int16_t deadband;
<a name="l00145"></a>00145   int32_t desiredPosition;
<a name="l00146"></a>00146 <span class="preprocessor">#endif</span>
<a name="l00147"></a>00147 <span class="preprocessor"></span>}<a class="code" href="structMMData.htm">MMData_t</a>;
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 
<a name="l00170"></a><a class="code" href="classMotionMind.htm">00170</a> <span class="keyword">class </span><a class="code" href="classMotionMind.htm">MotionMind</a>
<a name="l00171"></a>00171 {
<a name="l00172"></a>00172   <span class="keyword">public</span>:
<a name="l00173"></a>00173     <a class="code" href="classMotionMind.htm#00c6a516965ace2fbe845c14d820914c">MotionMind</a>();
<a name="l00178"></a>00178     <a class="code" href="classMotionMind.htm#a38ca2d31cfd601e7506f37dae3f1464">~MotionMind</a>();
<a name="l00182"></a>00182     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#ae44954727a4a89fc444e23842b3730f">init</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *port, <span class="keywordtype">int</span> baud, <span class="keywordtype">int</span> address, <span class="keywordtype">bool</span> verbose=<span class="keyword">true</span>);
<a name="l00208"></a>00208     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#5b47bb10466b36835a3f5fb8cc244a6b">changeSpeed</a>(int16_t speed);
<a name="l00222"></a>00222     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#696fb36d3409aee8b090b9fb060facd6">moveToAbsolute</a>(int32_t position);
<a name="l00237"></a>00237     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#b87448588ff1a802b0f8c21c4c003862">moveToRelative</a>(int32_t position);
<a name="l00252"></a>00252     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#642d5d10cc8caf4a7d013bd490945289">moveAtVelocity</a>(int16_t velocity);
<a name="l00266"></a>00266     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#8da5f0734dba880356e9979eaad4ea49">writeRegister</a>(<a class="code" href="MotionMind_8hpp.htm#f5f4a36cdb1a71965e0c9966b63c2667">MMReg_t</a> reg, int32_t val);
<a name="l00296"></a>00296     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#ededa3a3d2982ec61395b94d350cfb25">writeStoreRegister</a>(<a class="code" href="MotionMind_8hpp.htm#f5f4a36cdb1a71965e0c9966b63c2667">MMReg_t</a> reg, int32_t val);
<a name="l00318"></a>00318     int32_t <a class="code" href="classMotionMind.htm#f1b552d68160c5ca8dd18b20e4821f52">readRegister</a>(<a class="code" href="MotionMind_8hpp.htm#f5f4a36cdb1a71965e0c9966b63c2667">MMReg_t</a> reg);
<a name="l00339"></a>00339     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#9190c70af76b97f5b37e6358edd23cde">restore</a>();
<a name="l00346"></a>00346     <span class="keywordtype">int</span> <a class="code" href="classMotionMind.htm#79717798d5afb1dd2509e649beb7a51d">reset</a>();
<a name="l00352"></a>00352   <span class="keyword">protected</span>:
<a name="l00353"></a>00353 
<a name="l00354"></a>00354 };
<a name="l00355"></a>00355 <span class="preprocessor">#endif</span>
</pre></div><hr>
Created for project <code><font color="red"><b>Motion Mind DC Motor Controller</b></font></code> on Tue Apr 11 14:51:00 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
