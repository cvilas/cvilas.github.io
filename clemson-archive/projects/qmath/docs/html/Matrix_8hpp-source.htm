<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Matrix.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>Matrix.hpp</h1><a href="Matrix_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001   
<a name="l00002"></a>00002 <span class="preprocessor">#ifndef INCLUDED_Matrix_hpp</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="preprocessor">#define INCLUDED_Matrix_hpp</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>
<a name="l00005"></a>00005 <span class="preprocessor">#include "<a class="code" href="MatrixBase_8hpp.htm">MatrixBase.hpp</a>"</span> 
<a name="l00006"></a>00006 <span class="preprocessor">#include "<a class="code" href="VectorBase_8hpp.htm">VectorBase.hpp</a>"</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;iomanip&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00010"></a>00010 
<a name="l00011"></a>00011 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classMatrix.htm">Matrix</a>;
<a name="l00012"></a>00012 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> n, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classColumnVector.htm">ColumnVector</a>; 
<a name="l00013"></a>00013 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> n, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classRowVector.htm">RowVector</a>;
<a name="l00014"></a>00014 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;<span class="keyword">class </span><a class="code" href="classMatrixInitializer.htm">MatrixInitializer</a>;
<a name="l00015"></a>00015 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> <a class="code" href="Matrix_8hpp.htm#733159a06088a9be70c7a60c7297cf63">operator+</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;rhs);
<a name="l00016"></a>00016 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> <a class="code" href="Matrix_8hpp.htm#03e387d9accb924ca5b8a6a28f8bb861">operator-</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;rhs);
<a name="l00017"></a>00017 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> <a class="code" href="Matrix_8hpp.htm#9878bccf52903cf65498ea5ed883a2ff">operator*</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;lhs, <span class="keyword">const</span> T &amp;s);
<a name="l00018"></a>00018 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> <a class="code" href="Matrix_8hpp.htm#9878bccf52903cf65498ea5ed883a2ff">operator*</a>(<span class="keyword">const</span> T &amp;s, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;rhs);
<a name="l00019"></a>00019 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> <a class="code" href="Matrix_8hpp.htm#1bed3adfe9c0c4156f77c374708a466a">operator/</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r, c, T&gt;</a> &amp;lhs, <span class="keyword">const</span> T &amp;s);
<a name="l00020"></a>00020 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; std::ostream &amp;operator&lt;&lt; (std::ostream &amp;out, const Matrix&lt;r,c,T&gt; &amp;m);
<a name="l00021"></a>00021 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; std::istream &amp;<a class="code" href="Matrix_8hpp.htm#f1384984af4b8164a43a5fb3fd4092cb">operator&gt;&gt; </a>(std::istream &amp;in, <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;m);
<a name="l00022"></a>00022 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <a class="code" href="Matrix_8hpp.htm#c6b5829a5db9b74bc44ee956b471638a">operator==</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;rhs);
<a name="l00023"></a>00023 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <a class="code" href="Matrix_8hpp.htm#950a127dea9006f54cccfd1d30beca45">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;rhs);
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 
<a name="l00043"></a>00043 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> nRows, <span class="keywordtype">int</span> nCols, <span class="keyword">class</span> T = <span class="keywordtype">double</span>&gt;
<a name="l00044"></a><a class="code" href="classMatrix.htm">00044</a> <span class="keyword">class </span><a class="code" href="classMatrix.htm">Matrix</a> : <span class="keyword">public</span> <a class="code" href="classMatrixBase.htm">MatrixBase</a>&lt;T&gt;
<a name="l00045"></a>00045 {
<a name="l00046"></a>00046   <span class="keyword">public</span>:
<a name="l00047"></a><a class="code" href="classMatrix.htm#f81c867db5cdbf2d4a8892f6b8439f82">00047</a>     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm#f81c867db5cdbf2d4a8892f6b8439f82">Matrix</a>() {<a class="code" href="classMatrix.htm#d1ca45237c389f51f63cab83b1cf0dd2">d_size</a> = nRows * nCols;};
<a name="l00052"></a>00052     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm#f81c867db5cdbf2d4a8892f6b8439f82">Matrix</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;matrix);
<a name="l00056"></a><a class="code" href="classMatrix.htm#317d03800b7573e5fe4810c3edd99522">00056</a>     <span class="keyword">virtual</span> <a class="code" href="classMatrix.htm#317d03800b7573e5fe4810c3edd99522">~Matrix</a>() {}
<a name="l00060"></a><a class="code" href="classMatrix.htm#15ed828f282a27d51bc11a9499b6749e">00060</a>     <span class="keyword">virtual</span> T *<a class="code" href="classMatrix.htm#15ed828f282a27d51bc11a9499b6749e">getElementsPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (T *) <a class="code" href="classMatrix.htm#50926e7ca3f56aa0028e990e5c394a7b">d_element</a>; }
<a name="l00064"></a><a class="code" href="classMatrix.htm#0b3f0fbcb77b712b7dc29596bd75945a">00064</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classMatrix.htm#0b3f0fbcb77b712b7dc29596bd75945a">getNumRows</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> nRows;}
<a name="l00068"></a><a class="code" href="classMatrix.htm#f5a746aee68aa00f0cdbdcd1400d8c14">00068</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classMatrix.htm#f5a746aee68aa00f0cdbdcd1400d8c14">getNumColumns</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> nCols;}
<a name="l00072"></a>00072     <span class="keyword">inline</span> <a class="code" href="classColumnVector.htm">ColumnVector&lt;nRows, T&gt;</a> <a class="code" href="classMatrix.htm#f0373874bcefa4c11d80e2c2ca7ce650">getColumn</a>(<span class="keywordtype">int</span> c) <span class="keyword">const</span>;
<a name="l00082"></a>00082     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm">RowVector&lt;nCols, T&gt;</a> <a class="code" href="classMatrix.htm#d48c4475e9ec1c71e53b61a60317b4e5">getRow</a>(<span class="keywordtype">int</span> r) <span class="keyword">const</span>;
<a name="l00087"></a>00087     <span class="keyword">inline</span> <span class="keyword">virtual</span> T <a class="code" href="classMatrix.htm#0a7366bb9752491a8a8ae7d5c5626080">getElement</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c) <span class="keyword">const</span>;
<a name="l00093"></a>00093     <span class="keyword">inline</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#ec00b50a25f4e5cb95a0b0b7e192e0bf">setElement</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, T val);
<a name="l00100"></a>00100     <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> sr, <span class="keywordtype">int</span> sc, <span class="keyword">class</span> X&gt;
<a name="l00101"></a>00101     <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#d2a2c2427aa4150c7349237e774ceb81">getSubMatrix</a>(<span class="keywordtype">int</span> pivotRow, <span class="keywordtype">int</span> pivotColumn, <a class="code" href="classMatrix.htm">Matrix&lt;sr, sc, X&gt;</a> &amp;m) <span class="keyword">const</span>; 
<a name="l00117"></a>00117     <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> sr, <span class="keywordtype">int</span> sc, <span class="keyword">class</span> X&gt;
<a name="l00118"></a>00118     <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#60e9b07c96df3bd5eebb79ba0e124943">setSubMatrix</a>(<span class="keywordtype">int</span> pivotRow, <span class="keywordtype">int</span> pivotColumn, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;sr, sc, X&gt;</a> &amp;m);
<a name="l00133"></a>00133     <span class="keyword">inline</span> T <a class="code" href="classMatrix.htm#e6153c41f242aa4d74668f1af12c5ff4">operator()</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c) <span class="keyword">const</span>; 
<a name="l00134"></a>00134     <span class="keyword">inline</span> T &amp;<a class="code" href="classMatrix.htm#e6153c41f242aa4d74668f1af12c5ff4">operator()</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c); 
<a name="l00139"></a>00139     <span class="keyword">inline</span> <a class="code" href="classMatrixInitializer.htm">MatrixInitializer&lt;T&gt;</a> <a class="code" href="classMatrix.htm#05b79ba5d2b4854bc3ef6ae7b00a9c75">operator=</a>(<span class="keyword">const</span> T &amp;val);
<a name="l00149"></a>00149     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#05b79ba5d2b4854bc3ef6ae7b00a9c75">operator=</a>(<span class="keyword">const</span> <a class="code" href="classMatrixBase.htm">MatrixBase&lt;T&gt;</a> &amp;m);
<a name="l00155"></a>00155     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#edf7eb50f3481be450845b8938f2905c">operator+=</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00166"></a>00166     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#cf59e55bb983060a84a9ff6b99f4ef77">operator-=</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00177"></a>00177     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#3e1aedce68233877ac17178e56e7aaf9">operator*=</a>(<span class="keyword">const</span> T &amp;scalar);
<a name="l00189"></a>00189     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#f4675ef62406c10f7947daefc0fae592">operator/=</a>(<span class="keyword">const</span> T &amp;scalar);
<a name="l00201"></a>00201     <span class="keyword">friend</span> <a class="code" href="classMatrix.htm">Matrix</a> operator+&lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00214"></a>00214     <span class="keyword">friend</span> <a class="code" href="classMatrix.htm">Matrix</a> operator-&lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00223"></a>00223     <span class="keyword">friend</span> <a class="code" href="classMatrix.htm">Matrix</a> operator*&lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> T &amp;scalar);
<a name="l00236"></a>00236     <span class="keyword">friend</span> <a class="code" href="classMatrix.htm">Matrix</a> operator*&lt;&gt;(<span class="keyword">const</span> T &amp;s, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00247"></a>00247     <span class="keyword">friend</span> <a class="code" href="classMatrix.htm">Matrix</a> operator/&lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> T &amp;scalar);
<a name="l00261"></a>00261     <span class="keyword">friend</span> std::ostream &amp;operator&lt;&lt; &lt;&gt;(std::ostream &amp;<a class="code" href="classMatrixBase.htm#37f012169567e29e11871a0489de3249">output</a>, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;matrix);
<a name="l00268"></a>00268     <span class="keyword">friend</span> std::istream &amp;operator&gt;&gt; &lt;&gt;(std::istream &amp;input, <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;matrix);
<a name="l00276"></a>00276     <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator== &lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00280"></a>00280     <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator!= &lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;rhs);
<a name="l00284"></a>00284   <span class="keyword">protected</span>:
<a name="l00285"></a><a class="code" href="classMatrix.htm#50926e7ca3f56aa0028e990e5c394a7b">00285</a>     T <a class="code" href="classMatrix.htm#50926e7ca3f56aa0028e990e5c394a7b">d_element</a>[nRows * nCols];
<a name="l00286"></a><a class="code" href="classMatrix.htm#d1ca45237c389f51f63cab83b1cf0dd2">00286</a>     <span class="keywordtype">int</span> <a class="code" href="classMatrix.htm#d1ca45237c389f51f63cab83b1cf0dd2">d_size</a>;
<a name="l00287"></a>00287 };
<a name="l00288"></a>00288 
<a name="l00291"></a>00291 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> nCols, <span class="keywordtype">int</span> nRows, <span class="keyword">class</span> T&gt;
<a name="l00292"></a>00292 <a class="code" href="classMatrix.htm">Matrix&lt;nCols, nRows, T&gt;</a> <a class="code" href="ColumnVector_8hpp.htm#f86a009d7690fc6d50838bb46b79a292">transpose</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;nRows, nCols, T&gt;</a> &amp;matrix);
<a name="l00296"></a>00296 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
<a name="l00297"></a>00297 <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> <a class="code" href="Transform_8hpp.htm#31b9af404ee2dd732645cf796dc1aa62">inverse</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> &amp;m);
<a name="l00305"></a>00305 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt; 
<a name="l00306"></a>00306 T determinant ( <span class="keyword">const</span> Matrix &lt;size, size, T&gt; &amp;matrix);
<a name="l00310"></a>00310 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt; 
<a name="l00311"></a>00311 T trace( <span class="keyword">const</span> Matrix &lt;size, size, T&gt; &amp;matrix);
<a name="l00315"></a>00315 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
<a name="l00316"></a>00316 <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> unitMatrix();
<a name="l00322"></a>00322 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r1, <span class="keywordtype">int</span> c1r2, <span class="keywordtype">int</span> c2, <span class="keyword">class</span> T&gt;
<a name="l00323"></a>00323 <a class="code" href="classMatrix.htm">Matrix&lt;r1, c2, T&gt;</a> <a class="code" href="Matrix_8hpp.htm#9878bccf52903cf65498ea5ed883a2ff">operator* </a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r1, c1r2, T&gt;</a> &amp;m1, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;c1r2, c2, T&gt;</a> &amp;m2);
<a name="l00333"></a>00333 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> c1r2, <span class="keyword">class</span> T&gt;
<a name="l00334"></a>00334 T <a class="code" href="Matrix_8hpp.htm#9878bccf52903cf65498ea5ed883a2ff">operator* </a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;1, c1r2, T&gt;</a> &amp;m1, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;c1r2, 1, T&gt;</a> &amp;m2);
<a name="l00339"></a>00339 };
<a name="l00340"></a>00340 <span class="preprocessor">#endif</span>
</pre></div><hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon Sep 11 14:52:24 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
