<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Adams3Integrator&lt; T &gt; Class Template Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>Adams3Integrator&lt; T &gt; Class Template Reference</h1><!-- doxytag: class="Adams3Integrator" --><!-- doxytag: inherits="Integrator" -->Numerical integration using Adam's 3'rd order method.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Adams3Integrator_8hpp-source.htm">Adams3Integrator.hpp</a>&gt;</code>
<p>
<p>Inheritance diagram for Adams3Integrator&lt; T &gt;:
<p><center><img src="classAdams3Integrator.png" usemap="#Adams3Integrator< T >_map" border="0" alt=""></center>
<map name="Adams3Integrator< T >_map">
<area href="classIntegrator.htm" alt="Integrator< T >" shape="rect" coords="0,0,142,24">
</map>
<a href="classAdams3Integrator-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAdams3Integrator.htm#1775c284a17e93c30712effa999c188f">Adams3Integrator</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAdams3Integrator.htm#b966c7a2fb1339ae6cd6a0188894e5a3">Adams3Integrator</a> (double period, const T &amp;init)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAdams3Integrator.htm#ba526bb1c112ecd83a7d96b3820c778d">~Adams3Integrator</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAdams3Integrator.htm#d0b6b0a1ec45c3eddcdf78923541ad78">reset</a> (const T &amp;init)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual T&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classAdams3Integrator.htm#dc6962f725399c199e66f80cb7a725d6">integrate</a> (const T &amp;input)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;class T = double&gt;<br>
 class Adams3Integrator&lt; T &gt;</h3>

Numerical integration using Adam's 3'rd order method. 
<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//======================================================================== </span>
<span class="comment">// Package              : The Math Library - Ex</span>
<span class="comment">// Authors              : Vilas Kumar Chitrakaran</span>
<span class="comment">// Start Date           : Wed Dec 20 11:08:28 GMT 2000</span>
<span class="comment">// Compiler             : GNU C++ 2.95.3 and above</span>
<span class="comment">// ----------------------------------------------------------------------</span>
<span class="comment">// File: Adams3Integrator.t.cpp</span>
<span class="comment">// Example program for the Integrator.</span>
<span class="comment">//========================================================================</span>

<span class="comment">//========================================================================</span>
<span class="comment">// Adams3Integrator.t.cpp</span>
<span class="comment">//------------------------------------------------------------------------</span>
<span class="comment">// Integrates a trignometric function using Adams method, and compares </span>
<span class="comment">// result with analytical integration.</span>
<span class="comment">//========================================================================</span>

<span class="preprocessor">#include "<a class="code" href="Adams3Integrator_8hpp.htm">Adams3Integrator.hpp</a>"</span>
<span class="preprocessor">#include "<a class="code" href="ColumnVector_8hpp.htm">ColumnVector.hpp</a>"</span>

<span class="preprocessor">#include &lt;stdio.h&gt;</span>
<span class="preprocessor">#include &lt;math.h&gt;</span>
<span class="preprocessor">#ifndef M_PI</span>
<span class="preprocessor"></span><span class="preprocessor"> #define M_PI 3.14159265358979323846</span>
<span class="preprocessor"></span><span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
<span class="keywordtype">int</span> main()
{
 FILE *outfile;                           <span class="comment">// File to store results</span>
 <span class="keywordtype">double</span> velocity;                         <span class="comment">// some data</span>
 <span class="keywordtype">double</span> position_adams;                   <span class="comment">// numerical integral</span>
 <span class="keywordtype">double</span> position_actual;                  <span class="comment">// actual integral</span>
 <span class="keywordtype">double</span> initValue;                        <span class="comment">// initial value of integration</span>
 <span class="keywordtype">double</span> sampling_period;                  <span class="comment">// sampling period</span>
 <a class="code" href="classAdams3Integrator.htm">Adams3Integrator&lt; double &gt;</a> myIntegrator; <span class="comment">// numerical integrator</span>

 outfile = fopen(<span class="stringliteral">"Adams3Integrator.dat"</span>, <span class="stringliteral">"w+"</span>);
 initValue = 0;
 sampling_period = 0.001;
 
 myIntegrator.<a class="code" href="classIntegrator.htm#046071a1b1d6b7ef621c4fe167f86f55">setSamplingPeriod</a>(sampling_period);
 myIntegrator.<a class="code" href="classAdams3Integrator.htm#d0b6b0a1ec45c3eddcdf78923541ad78">reset</a>(initValue);
 
 fprintf(outfile, <span class="stringliteral">"%s\n%s %s %s\n"</span>, <span class="stringliteral">"%Adams 3rd order integrator output file"</span>,
         <span class="stringliteral">"%velocity"</span>, <span class="stringliteral">"position_adams"</span>, <span class="stringliteral">"position_actual"</span> );
 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;1000; i++)
 {
  <span class="comment">// input data</span>
  velocity = sin(2*<a class="code" href="HighpassFilter_8hpp.htm#e71449b1cc6e6250b91f539153a7a0d3">M_PI</a>*i*sampling_period);
  
  <span class="comment">// integrate</span>
  position_adams = myIntegrator.<a class="code" href="classAdams3Integrator.htm#dc6962f725399c199e66f80cb7a725d6">integrate</a>(velocity);
  position_actual = 1.0/(2*<a class="code" href="HighpassFilter_8hpp.htm#e71449b1cc6e6250b91f539153a7a0d3">M_PI</a>) * (1 - cos(2*<a class="code" href="HighpassFilter_8hpp.htm#e71449b1cc6e6250b91f539153a7a0d3">M_PI</a>*i*sampling_period));

  <span class="comment">// simply write the outputs to a file... </span>
  fprintf(outfile, <span class="stringliteral">"%f %f %f\n"</span>, velocity, position_adams, position_actual);
 }
 
 fclose(outfile);
 <span class="keywordflow">return</span>(0);
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="1775c284a17e93c30712effa999c188f"></a><!-- doxytag: member="Adams3Integrator::Adams3Integrator" ref="1775c284a17e93c30712effa999c188f" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>&lt; T &gt;::<a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. The sampling period is set to default of 0.001 seconds. The initial output value is set to 0.     </td>
  </tr>
</table>
<a class="anchor" name="b966c7a2fb1339ae6cd6a0188894e5a3"></a><!-- doxytag: member="Adams3Integrator::Adams3Integrator" ref="b966c7a2fb1339ae6cd6a0188894e5a3" args="(double period, const T &amp;init)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>&lt; T &gt;::<a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>period</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const T &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>init</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The constructor with initialization for the sampling period and initial Value. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>period</em>&nbsp;</td><td>The sampling period in seconds. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>init</em>&nbsp;</td><td>The initial value at the start of integration. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ba526bb1c112ecd83a7d96b3820c778d"></a><!-- doxytag: member="Adams3Integrator::~Adams3Integrator" ref="ba526bb1c112ecd83a7d96b3820c778d" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">virtual <a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>&lt; T &gt;::~<a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="d0b6b0a1ec45c3eddcdf78923541ad78"></a><!-- doxytag: member="Adams3Integrator::reset" ref="d0b6b0a1ec45c3eddcdf78923541ad78" args="(const T &amp;init)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">virtual void <a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>&lt; T &gt;::reset           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const T &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>init</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default destructor This function resets the output of the <a class="el" href="classIntegrator.htm">Integrator</a> to the value <em>value</em> and further integration restarts from this initial value. 
<p>
Reimplemented from <a class="el" href="classIntegrator.htm#d84042dd1b33c9f4f4ee7e9ac6a2b838">Integrator&lt; T &gt;</a>.    </td>
  </tr>
</table>
<a class="anchor" name="dc6962f725399c199e66f80cb7a725d6"></a><!-- doxytag: member="Adams3Integrator::integrate" ref="dc6962f725399c199e66f80cb7a725d6" args="(const T &amp;input)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">virtual T <a class="el" href="classAdams3Integrator.htm">Adams3Integrator</a>&lt; T &gt;::integrate           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const T &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>input</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function provides the numerical method for integration. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>input</em>&nbsp;</td><td>The current value of the time-varying signal to be integrated. </td></tr>
  </table>
</dl>

<p>
Reimplemented from <a class="el" href="classIntegrator.htm#55109a9d065d6824dd9d73532ca81f99">Integrator&lt; T &gt;</a>.    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Adams3Integrator_8hpp-source.htm">Adams3Integrator.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon Sep 11 14:52:24 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
