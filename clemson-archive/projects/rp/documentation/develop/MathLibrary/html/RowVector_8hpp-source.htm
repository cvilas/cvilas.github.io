<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: RowVector.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.htm">docs</a>&nbsp;/&nbsp;<a class="el" href="dir_000001.htm">preprocessed</a></div>
<h1>RowVector.hpp</h1><div class="fragment"><pre class="fragment">00001   
00002 
00003 <span class="preprocessor">#ifndef INCLUDED_RowVector_hpp</span>
00004 <span class="preprocessor"></span><span class="preprocessor">#define INCLUDED_RowVector_hpp</span>
00005 <span class="preprocessor"></span>  
00006 <span class="preprocessor">#include "VectorBase.hpp"</span>
00007 <span class="preprocessor">#include "Matrix.hpp"</span>
00008 
00020 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T = <span class="keywordtype">double</span>&gt;
<a name="l00021"></a><a class="code" href="classRowVector.htm">00021</a> <span class="keyword">class </span><a class="code" href="classRowVector.htm">RowVector</a> : <span class="keyword">public</span> <a class="code" href="classMatrix.htm">Matrix</a> &lt;1, size, T&gt;, <span class="keyword">public</span> <a class="code" href="classVectorBase.htm">VectorBase</a>&lt;T&gt;
00022 {
00023   <span class="keyword">public</span>:
<a name="l00024"></a><a class="code" href="classRowVector.htm#a0">00024</a>     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm#a0">RowVector</a>() {}
00028     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm#a0">RowVector</a>(<span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;rowVector);
00032     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm#a0">RowVector</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;1, size, T&gt;</a> &amp;matrix);
<a name="l00038"></a><a class="code" href="classRowVector.htm#a3">00038</a>     <a class="code" href="classRowVector.htm#a3">~RowVector</a>(){}
<a name="l00042"></a><a class="code" href="classRowVector.htm#a4">00042</a>     <span class="keyword">virtual</span> T *<a class="code" href="classRowVector.htm#a4">getElementsPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (T *) &amp;(this-&gt;d_element[0][0]); }
00046     <span class="keyword">inline</span> <span class="keyword">virtual</span> T <a class="code" href="classRowVector.htm#a5">getElement</a>(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;
00051     <span class="keyword">inline</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classRowVector.htm#a6">setElement</a>(<span class="keywordtype">int</span> index, T value);
<a name="l00057"></a><a class="code" href="classRowVector.htm#a7">00057</a>     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classRowVector.htm#a7">isRowVector</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <span class="keyword">true</span>;}
<a name="l00061"></a><a class="code" href="classRowVector.htm#a8">00061</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classRowVector.htm#a8">getNumElements</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> size;}
00065     <span class="keyword">inline</span> T &amp;<a class="code" href="classRowVector.htm#a9">operator()</a>(<span class="keywordtype">int</span> index);
00073     <span class="keyword">inline</span> T <a class="code" href="classRowVector.htm#a9">operator()</a>(<span class="keywordtype">int</span> index) <span class="keyword">const</span>;
00078     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;<a class="code" href="classRowVector.htm#a11">operator=</a>(<span class="keyword">const</span> <a class="code" href="classVectorBase.htm">VectorBase&lt;T&gt;</a> &amp;vectorBase);
00083     <a class="code" href="classMatrixInitializer.htm">MatrixInitializer&lt;T&gt;</a> <a class="code" href="classRowVector.htm#a11">operator=</a>(<span class="keyword">const</span> T &amp;value);
00093  <span class="keyword">private</span>:
00094 };
00095 
00096 
00097 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;
00098 <a class="code" href="classRowVector.htm">RowVector&lt;3,T&gt;</a> crossProduct(<span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;3, T&gt;</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;3, T&gt;</a> &amp;v2);
00104 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
00105 <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> elementProduct(<span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;v2);
00112 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
00113 T dotProduct(<span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size,T&gt;</a> &amp;v1, <span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;v2);
00119 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
00120 <a class="code" href="classColumnVector.htm">ColumnVector&lt;size, T&gt;</a> transpose(<span class="keyword">const</span> <a class="code" href="classRowVector.htm">RowVector&lt;size, T&gt;</a> &amp;vector);
00124 };
00125 <span class="preprocessor">#endif</span>
</pre></div><hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon May 2 11:22:00 EDT 2005
<br>
Vilas Kumar Chitrakaran (cvilas at ces dot clemson dot edu)
</body>
</html>
