<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: ColumnVector.hpp File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>ColumnVector.hpp File Reference</h1><code>#include &quot;<a class="el" href="Matrix_8hpp-source.htm">Matrix.hpp</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="VectorBase_8hpp-source.htm">VectorBase.hpp</a>&quot;</code><br>

<p>
<a href="ColumnVector_8hpp-source.htm">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classColumnVector.htm">ColumnVector&lt; size, T &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A class for column vectors.  <a href="classColumnVector.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2">template&lt;class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; 3, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ColumnVector_8hpp.htm#5f13aeb05dc21cbc06820c2c4a9a462a">crossProduct</a> (const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; 3, T &gt; &amp;v1, const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; 3, T &gt; &amp;v2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int size, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ColumnVector_8hpp.htm#b3ea052d4e29284751d942161a4f6a3f">elementProduct</a> (const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;v1, const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;v2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int size, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">T&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ColumnVector_8hpp.htm#ef8b3c2063567e9183ba7d8278067a6d">dotProduct</a> (const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;v1, const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;v2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int size, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classRowVector.htm">RowVector</a>&lt; size, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ColumnVector_8hpp.htm#f86a009d7690fc6d50838bb46b79a292">transpose</a> (const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;vector)</td></tr>

</table>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="5f13aeb05dc21cbc06820c2c4a9a462a"></a><!-- doxytag: member="ColumnVector.hpp::crossProduct" ref="5f13aeb05dc21cbc06820c2c4a9a462a" args="(const ColumnVector&lt; 3, T &gt; &amp;v1, const ColumnVector&lt; 3, T &gt; &amp;v2)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classColumnVector.htm">ColumnVector</a>&lt;3,T&gt; crossProduct           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; 3, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; 3, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v2</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Generates the cross product of two 3 dimensional column vectors. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v1,v2</em>&nbsp;</td><td>The 3D column-vector arguments. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>The cross product. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="b3ea052d4e29284751d942161a4f6a3f"></a><!-- doxytag: member="ColumnVector.hpp::elementProduct" ref="b3ea052d4e29284751d942161a4f6a3f" args="(const ColumnVector&lt; size, T &gt; &amp;v1, const ColumnVector&lt; size, T &gt; &amp;v2)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int size, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classColumnVector.htm">ColumnVector</a>&lt;size, T&gt; elementProduct           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v2</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function performs multiplication between two column vectors element-by-element. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v1,v2</em>&nbsp;</td><td>The column-vector arguments </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>The product. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ef8b3c2063567e9183ba7d8278067a6d"></a><!-- doxytag: member="ColumnVector.hpp::dotProduct" ref="ef8b3c2063567e9183ba7d8278067a6d" args="(const ColumnVector&lt; size, T &gt; &amp;v1, const ColumnVector&lt; size, T &gt; &amp;v2)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int size, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">T dotProduct           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v2</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Dot (inner) product between two column-vectors. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>v1,v2</em>&nbsp;</td><td>The column-vector arguments. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>The scalar product. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="f86a009d7690fc6d50838bb46b79a292"></a><!-- doxytag: member="ColumnVector.hpp::transpose" ref="f86a009d7690fc6d50838bb46b79a292" args="(const ColumnVector&lt; size, T &gt; &amp;vector)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int size, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classRowVector.htm">RowVector</a>&lt;size, T&gt; transpose           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classColumnVector.htm">ColumnVector</a>&lt; size, T &gt; &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vector</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The transpose of type <code><a class="el" href="classRowVector.htm">RowVector</a></code>. </dd></dl>
    </td>
  </tr>
</table>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon Sep 11 14:52:24 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
