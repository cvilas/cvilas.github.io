<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>POSIX Utilities Package 2.2: ErrnoException Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>ErrnoException Class Reference</h1><!-- doxytag: class="ErrnoException" -->A mechanism for basic run-time exception handling.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="ErrnoException_8hpp-source.htm">ErrnoException.hpp</a>&gt;</code>
<p>
<a href="classErrnoException-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#1555e4dc8caeb889219b8eb0051b1586">ErrnoException</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#3a6a94604906ba3833a22d5025fdc3ec">ErrnoException</a> (int error, const char *desc=NULL)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#c9a717f70363a07b5116dbc3cc816c7f">ErrnoException</a> (const <a class="el" href="classErrnoException.htm">ErrnoException</a> &amp;e)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classErrnoException.htm">ErrnoException</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#78e4a7a0af4babc192c0bea5aacd8949">operator=</a> (const <a class="el" href="classErrnoException.htm">ErrnoException</a> &amp;e)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#8223ac9f9097fd2ced51babdd933bde3">setError</a> (int error, const char *desc=NULL)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#12e63c141861b6c4edf79cf97b71daf6">getErrorCode</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classErrnoException.htm#6709f8f1fd92aedf6a533f34ba431568">getErrorDesc</a> () const </td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A mechanism for basic run-time exception handling. 
<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//==============================================================================</span>
<span class="comment">// ErrnoException.t.cpp - Example program for ErrnoException class.</span>
<span class="comment">//</span>
<span class="comment">// Author        : Vilas Kumar Chitrakaran</span>
<span class="comment">//==============================================================================</span>

<span class="comment">//==============================================================================</span>
<span class="comment">// NOTE: For older versions of gcc ( &lt;= 2.96 ) make sure that you compile with </span>
<span class="comment">//       exceptions enabled (-fexceptions switch) to avoid SIGABRT on exception.</span>
<span class="comment">//==============================================================================</span>

<span class="preprocessor">#include "ErrnoException.hpp"</span>
<span class="preprocessor">#include &lt;iostream&gt;</span>
<span class="preprocessor">#include &lt;string&gt;</span>

<span class="keyword">using namespace </span>std;

<span class="comment">// Just an example function that shows how </span>
<span class="comment">// to throw an exception</span>
<span class="keywordtype">void</span> enterNumberBelowFive(<span class="keywordtype">int</span> number)
{
 <span class="comment">// throw an exception for invalid argument</span>
 <span class="keywordflow">if</span>(number &gt;= 5)
  <span class="keywordflow">throw</span> <a class="code" href="classErrnoException.htm#1555e4dc8caeb889219b8eb0051b1586">ErrnoException</a>(EINVAL,<span class="stringliteral">"[enterNumberBelowFive]"</span>);
}


<span class="comment">// The main function</span>
<span class="keywordtype">int</span> main()
{
 
 <span class="comment">// Try something that may cause error</span>
 <span class="keywordflow">try</span>
 {
  cout &lt;&lt; <span class="stringliteral">"First call to enterNumberBelowFive() with arg = 2 ... "</span>;
  enterNumberBelowFive(2);    <span class="comment">// this will go through</span>
  cout &lt;&lt; <span class="stringliteral">"worked."</span> &lt;&lt; endl;
  
  cout &lt;&lt; <span class="stringliteral">"Second call to enterNumberBelowFive() with arg = 10 ... "</span>;
  enterNumberBelowFive(10);   <span class="comment">// this will throw exception  </span>
  cout &lt;&lt; <span class="stringliteral">"worked."</span> &lt;&lt; endl;  <span class="comment">// this line should not print</span>
 }

 <span class="comment">// catch the first error that was thrown from within try block....</span>
 <span class="keywordflow">catch</span>(<a class="code" href="classErrnoException.htm">ErrnoException</a> ex)
 {
  cout &lt;&lt; <span class="stringliteral">"caught exception: "</span> &lt;&lt; ex.<a class="code" href="classErrnoException.htm#6709f8f1fd92aedf6a533f34ba431568">getErrorDesc</a>() &lt;&lt; <span class="stringliteral">": "</span> 
       &lt;&lt; strerror(ex.<a class="code" href="classErrnoException.htm#12e63c141861b6c4edf79cf97b71daf6">getErrorCode</a>()) &lt;&lt; endl;
  
  <span class="comment">// put error recovery code here, based on type of exception!</span>
 }
 
 <span class="keywordflow">return</span> 0;
}

</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="1555e4dc8caeb889219b8eb0051b1586"></a><!-- doxytag: member="ErrnoException::ErrnoException" ref="1555e4dc8caeb889219b8eb0051b1586" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">ErrnoException::ErrnoException           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Standard constructor sets error to 0 (no error)     </td>
  </tr>
</table>
<a class="anchor" name="3a6a94604906ba3833a22d5025fdc3ec"></a><!-- doxytag: member="ErrnoException::ErrnoException" ref="3a6a94604906ba3833a22d5025fdc3ec" args="(int error, const char *desc=NULL)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">ErrnoException::ErrnoException           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>error</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>desc</em> = <code>NULL</code></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This constructor allows initialization <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>error</em>&nbsp;</td><td>set integer error code. (0 reserved for no error) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>desc</em>&nbsp;</td><td>set a short description [less than 40 chars], possibly just the object that set the error. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c9a717f70363a07b5116dbc3cc816c7f"></a><!-- doxytag: member="ErrnoException::ErrnoException" ref="c9a717f70363a07b5116dbc3cc816c7f" args="(const ErrnoException &amp;e)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">ErrnoException::ErrnoException           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classErrnoException.htm">ErrnoException</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>e</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Copy constructor     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="12e63c141861b6c4edf79cf97b71daf6"></a><!-- doxytag: member="ErrnoException::getErrorCode" ref="12e63c141861b6c4edf79cf97b71daf6" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int ErrnoException::getErrorCode           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>latest error code. (0 means no error). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="6709f8f1fd92aedf6a533f34ba431568"></a><!-- doxytag: member="ErrnoException::getErrorDesc" ref="6709f8f1fd92aedf6a533f34ba431568" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">const char* ErrnoException::getErrorDesc           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>any descriptive message that was set with the error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="78e4a7a0af4babc192c0bea5aacd8949"></a><!-- doxytag: member="ErrnoException::operator=" ref="78e4a7a0af4babc192c0bea5aacd8949" args="(const ErrnoException &amp;e)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classErrnoException.htm">ErrnoException</a>&amp; ErrnoException::operator=           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classErrnoException.htm">ErrnoException</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>e</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Assignment operation     </td>
  </tr>
</table>
<a class="anchor" name="8223ac9f9097fd2ced51babdd933bde3"></a><!-- doxytag: member="ErrnoException::setError" ref="8223ac9f9097fd2ced51babdd933bde3" args="(int error, const char *desc=NULL)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void ErrnoException::setError           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>error</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>desc</em> = <code>NULL</code></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructor does nothing Set an error <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>error</em>&nbsp;</td><td>set integer error code. (0 reserved for no error) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>desc</em>&nbsp;</td><td>set a short description [less than 40 chars], possibly just the object that set the error. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="ErrnoException_8hpp-source.htm">ErrnoException.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>POSIX Utilities Package</b></font></code> on Sat Aug 26 17:12:56 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
