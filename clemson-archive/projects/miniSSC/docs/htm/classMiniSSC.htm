<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>MiniSSC II Communication Module: MiniSSC Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.2 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="dirs.htm">Directories</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>MiniSSC Class Reference</h1>Functions required to communicate with a Mini SSC II controller from Scott Edwards Electronics, Inc.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="MiniSSC_8hpp-source.htm">MiniSSC.hpp</a>&gt;</code>
<p>
<a href="classMiniSSC-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMiniSSC.htm#a0">MiniSSC</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMiniSSC.htm#a1">~MiniSSC</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMiniSSC.htm#a2">reset</a> (const char *portName, bool ij, bool bj)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMiniSSC.htm#a3">actuate</a> (int channel, int pos)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Functions required to communicate with a Mini SSC II controller from Scott Edwards Electronics, Inc. 
<p>
The MiniSSC II is a simple pulse proportional servo controller for upto eight servos. The jumpers used to configure the controller are as follows : <ul>
<li>
R (range) : OFF - 90 degrees, ON - 180 degrees. </li>
<li>
I (servo id) : OFF - 0 to 7, ON - 8 to 15. </li>
<li>
B (baud) : OFF - 2400, ON - 9600. </li>
</ul>
The above jumper settings are not readable via software and hence must be correctly specified to the software by the user. For more details about the controller, see <a href="http://www.seetron.com/ssc.htm">http://www.seetron.com/ssc.htm</a><p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//==============================================================================</span>
<span class="comment">// MiniSSC.t.cpp - MiniSSC II Communication Module example</span>
<span class="comment">//</span>
<span class="comment">// Author        : Vilas Kumar Chitrakaran</span>
<span class="comment">//==============================================================================</span>

<span class="preprocessor">#include "MiniSSC.hpp"</span>

<span class="keywordtype">int</span> main()
{
 <a class="code" href="classMiniSSC.htm">MiniSSC</a> port;
 <span class="keywordflow">if</span>( port.<a class="code" href="classMiniSSC.htm#a2">reset</a>(<span class="stringliteral">"/dev/ttyS0"</span>, 0, 1) == -1)
 {
  fprintf(stderr, <span class="stringliteral">"reset failed\n"</span>);
  <span class="keywordflow">return</span> -1;
 }
 
 <span class="keywordtype">int</span> servoId = 0;
 <span class="keywordtype">int</span> servoPos = 127;
 
 <span class="keywordflow">if</span>( port.<a class="code" href="classMiniSSC.htm#a3">actuate</a>(servoId, servoPos) == -1)
 {
  fprintf(stderr, <span class="stringliteral">"actuate failed\n"</span>);
  <span class="keywordflow">return</span> -1;
 }
 sleep(1);
 <span class="keywordflow">return</span> 0;
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="a0" doxytag="MiniSSC::MiniSSC"></a><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">MiniSSC::MiniSSC           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The constructor does nothing important.     </td>
  </tr>
</table>
<a class="anchor" name="a1" doxytag="MiniSSC::~MiniSSC"></a><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">MiniSSC::~MiniSSC           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The destructor cleans up.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a3" doxytag="MiniSSC::actuate"></a><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int MiniSSC::actuate           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>channel</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Drive an output channel to the desired position. The range of rotation (90 or 180 deg.) of the motor will depend on the jumper setting 'R'. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>channel</em>&nbsp;</td><td>output channel [0 - 7]. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>desired position [0 - 254]. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, else -1. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a2" doxytag="MiniSSC::reset"></a><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int MiniSSC::reset           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>portName</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>ij</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>bj</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets up the serial port and resets all servos to zero. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>portName</em>&nbsp;</td><td>Serial port name (eg: /dev/ttyS0) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ij</em>&nbsp;</td><td>Set this to true if 'I' jumper is set, else false. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bj</em>&nbsp;</td><td>Set this to true if 'B' jumper is set, else false. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, else -1. <br>
<hr>
 Note: See MiniSSC manual for jumper settings. <br>
<hr>
 </dd></dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="MiniSSC_8hpp-source.htm">MiniSSC.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>MiniSSC II Communication Module</b></font></code> on Sun Jul 3 18:48:52 EDT 2005
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
