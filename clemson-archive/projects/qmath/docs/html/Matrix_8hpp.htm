<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Matrix.hpp File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>Matrix.hpp File Reference</h1><code>#include &quot;<a class="el" href="MatrixBase_8hpp-source.htm">MatrixBase.hpp</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="VectorBase_8hpp-source.htm">VectorBase.hpp</a>&quot;</code><br>
<code>#include &lt;iostream&gt;</code><br>
<code>#include &lt;iomanip&gt;</code><br>
<code>#include &lt;math.h&gt;</code><br>

<p>
<a href="Matrix_8hpp-source.htm">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMatrix.htm">Matrix&lt; nRows, nCols, T &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Methods for mathematical operations on matrices.  <a href="classMatrix.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#733159a06088a9be70c7a60c7297cf63">operator+</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;rhs)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#03e387d9accb924ca5b8a6a28f8bb861">operator-</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;rhs)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#9878bccf52903cf65498ea5ed883a2ff">operator *</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const T &amp;s)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#7ff6aa42e83272082511c33fd74320eb">operator *</a> (const T &amp;s, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;rhs)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#1bed3adfe9c0c4156f77c374708a466a">operator/</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const T &amp;s)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#e42f554b255f8e026db2f1e94517198e">operator&lt;&lt;</a> (std::ostream &amp;out, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;m)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::istream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#f1384984af4b8164a43a5fb3fd4092cb">operator&gt;&gt;</a> (std::istream &amp;in, <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;m)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#c6b5829a5db9b74bc44ee956b471638a">operator==</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;rhs)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2">template&lt;int r, int c, class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Matrix_8hpp.htm#950a127dea9006f54cccfd1d30beca45">operator!=</a> (const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;lhs, const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;rhs)</td></tr>

</table>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="733159a06088a9be70c7a60c7297cf63"></a><!-- doxytag: member="Matrix.hpp::operator+" ref="733159a06088a9be70c7a60c7297cf63" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const Matrix&lt; r, c, T &gt; &amp;rhs)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt;r,c,T&gt; operator+           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rhs</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="03e387d9accb924ca5b8a6a28f8bb861"></a><!-- doxytag: member="Matrix.hpp::operator-" ref="03e387d9accb924ca5b8a6a28f8bb861" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const Matrix&lt; r, c, T &gt; &amp;rhs)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt;r,c,T&gt; operator-           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rhs</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="9878bccf52903cf65498ea5ed883a2ff"></a><!-- doxytag: member="Matrix.hpp::operator *" ref="9878bccf52903cf65498ea5ed883a2ff" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const T &amp;s)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt;r,c,T&gt; operator *           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const T &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>s</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="7ff6aa42e83272082511c33fd74320eb"></a><!-- doxytag: member="Matrix.hpp::operator *" ref="7ff6aa42e83272082511c33fd74320eb" args="(const T &amp;s, const Matrix&lt; r, c, T &gt; &amp;rhs)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt;r, c, T&gt; operator *           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const T &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rhs</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="1bed3adfe9c0c4156f77c374708a466a"></a><!-- doxytag: member="Matrix.hpp::operator/" ref="1bed3adfe9c0c4156f77c374708a466a" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const T &amp;s)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classMatrix.htm">Matrix</a>&lt;r,c,T&gt; operator/           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const T &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>s</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="e42f554b255f8e026db2f1e94517198e"></a><!-- doxytag: member="Matrix.hpp::operator&lt;&lt;" ref="e42f554b255f8e026db2f1e94517198e" args="(std::ostream &amp;out, const Matrix&lt; r, c, T &gt; &amp;m)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">std::ostream&amp; operator&lt;&lt;           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">std::ostream &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>out</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>m</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="f1384984af4b8164a43a5fb3fd4092cb"></a><!-- doxytag: member="Matrix.hpp::operator&gt;&gt;" ref="f1384984af4b8164a43a5fb3fd4092cb" args="(std::istream &amp;in, Matrix&lt; r, c, T &gt; &amp;m)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">std::istream&amp; operator&gt;&gt;           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">std::istream &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>in</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap><a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>m</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="c6b5829a5db9b74bc44ee956b471638a"></a><!-- doxytag: member="Matrix.hpp::operator==" ref="c6b5829a5db9b74bc44ee956b471638a" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const Matrix&lt; r, c, T &gt; &amp;rhs)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">bool operator==           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rhs</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="950a127dea9006f54cccfd1d30beca45"></a><!-- doxytag: member="Matrix.hpp::operator!=" ref="950a127dea9006f54cccfd1d30beca45" args="(const Matrix&lt; r, c, T &gt; &amp;lhs, const Matrix&lt; r, c, T &gt; &amp;rhs)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="mdPrefix" colspan="4">
template&lt;int r, int c, class T&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">bool operator!=           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const <a class="el" href="classMatrix.htm">Matrix</a>&lt; r, c, T &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rhs</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon Sep 11 14:52:24 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
