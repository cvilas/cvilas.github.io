<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Real-time Feature Tracker Library: FeatureTrackerOCV Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>FeatureTrackerOCV Class Reference</h1><!-- doxytag: class="FeatureTrackerOCV" -->Automatic image feature detection and tracking using the OpenCV library implementation of the Lucas-Kanade tracking algorithm.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="FeatureTrackerOCV_8hpp-source.htm">FeatureTrackerOCV.hpp</a>&gt;</code>
<p>
<a href="classFeatureTrackerOCV-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFeatureTrackerOCV.htm#1e4c54e982e04f6fa6390c8572213cdd">FeatureTrackerOCV</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFeatureTrackerOCV.htm#17fe3fb1f2d8200a13337e9c2e6cb0cb">~FeatureTrackerOCV</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFeatureTrackerOCV.htm#b8a440c6576c4961814e18853dbff265">initialize</a> (<a class="el" href="struct__FeatureTrackerContext.htm">FeatureTrackerContext_t</a> &amp;ftc, <a class="el" href="struct__OCVTrackingContext.htm">OCVTrackingContext_t</a> &amp;ocvt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFeatureTrackerOCV.htm#3d0bd7248a701fe64f7e41fbf9e4ae79">processImage</a> (unsigned char *img, int w, int h, <a class="el" href="struct__feature__list.htm">feature_list_t</a> &amp;list)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Automatic image feature detection and tracking using the OpenCV library implementation of the Lucas-Kanade tracking algorithm. 
<p>
OpenCV must be installed in order to use this class. See: <a href="http://www.intel.com/technology/computing/opencv/index.htm">http://www.intel.com/technology/computing/opencv/index.htm</a> .<p>
Image display and event handling routines use the SDL library. See: <a href="http://www.libsdl.org">http://www.libsdl.org</a> .<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//==============================================================================</span>
<span class="comment">// FeatureTrackerKLT.t.cpp - Example program for FeatureTrackerOCV class</span>
<span class="comment">// Vilas Chitrakaran, May 2006</span>
<span class="comment">//==============================================================================</span>

<span class="preprocessor">#include "<a class="code" href="FeatureTrackerOCV_8hpp.htm">FeatureTrackerOCV.hpp</a>"</span>
<span class="preprocessor">#include "<a class="code" href="Pixmap_8hpp.htm">Pixmap.hpp</a>"</span>
<span class="preprocessor">#include &lt;unistd.h&gt;</span>

<span class="keywordtype">int</span> main()
{ 
 <a class="code" href="struct__OCVTrackingContext.htm">OCVTrackingContext_t</a> ocvContext;
 <a class="code" href="struct__FeatureTrackerContext.htm">FeatureTrackerContext_t</a> tracContext;
 <a class="code" href="classPixmapGray.htm">PixmapGray</a> img[2];
 <a class="code" href="struct__feature__list.htm">feature_list_t</a> features;
 
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#28f44c9e9a8e49ef555361dfc29d1054">min_dist</a> = 20;
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#17bdb63e2a98a6b3aaf4289a341a0d42">quality</a> = 0.001;
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#1ae098313d0b48c0c7c99eb087fffe30">block_size</a> = 5;
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#8574d11ab3a1ff40c3f2a7f97a0ec303">max_iter</a> = 100;
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#686fac0d8f3c44b0207b063e5de6db0f">epsilon</a> = 0.01;
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#3c895972fa34758b2712979e9d14fcb2">window_size</a> = 3; 
 ocvContext.<a class="code" href="struct__OCVTrackingContext.htm#4d621401b67cefe1438a53dccb8d628a">max_error</a> = 300;
 
 tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#e9d5ae9b4bec8bfcf608f063ed875e49">num_features</a> = 4;
 tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#92f148878d0e2288b7d3dad4a83579c6">num_frames</a> = 2;
 tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#8fac2067f4061b99ac60593423ae1cff">auto_select_features</a> = <span class="keyword">false</span>;
 tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#5b89d2eed4859762eb340a90bf88d0c9">display_tracked_features</a> = <span class="keyword">true</span>;
 
 <span class="comment">// create feature list</span>
 <span class="keywordflow">if</span>( <a class="code" href="TrackerUtils_8hpp.htm#8793e527b678779c3bcd08047adf29ab">allocateFeatureList</a>(features, tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#e9d5ae9b4bec8bfcf608f063ed875e49">num_features</a>) &lt; 0 )
  <span class="keywordflow">return</span> -1;

 <a class="code" href="classFeatureTrackerOCV.htm">FeatureTrackerOCV</a> tracker;

 img[0].<a class="code" href="classPixmap.htm#1cd16f98faca76a7efeb0b8f43be4694">loadPixmap</a>(<span class="stringliteral">"images/box0.pgm"</span>);
 img[1].<a class="code" href="classPixmap.htm#1cd16f98faca76a7efeb0b8f43be4694">loadPixmap</a>(<span class="stringliteral">"images/box1.pgm"</span>);

 <span class="comment">// initialize system</span>
 <span class="keywordflow">if</span>( tracker.<a class="code" href="classFeatureTrackerOCV.htm#b8a440c6576c4961814e18853dbff265">initialize</a>(tracContext, ocvContext) != 0 ) {
  fprintf(stderr, <span class="stringliteral">"ERROR initializing tracker.\n"</span>);
  <span class="keywordflow">return</span> -1;
 }

 <span class="comment">// track features between frames</span>
 <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; 2; ++i) {
  <span class="keywordflow">if</span>( tracker.<a class="code" href="classFeatureTrackerOCV.htm#3d0bd7248a701fe64f7e41fbf9e4ae79">processImage</a>(img[i].<a class="code" href="classPixmap.htm#c61314716a60f549164ed9cba6d4fe3b">getPointer</a>(0), img[i].<a class="code" href="classPixmap.htm#02e9822f3fe2f920ba1f5a66f83c573b">getWidth</a>(), 
                           img[i].<a class="code" href="classPixmap.htm#ad7a7553b8dd73c34b53f9dec153656f">getHeight</a>(), features) &lt; 0 ) {
   fprintf(stderr, <span class="stringliteral">"ERROR processing image.\n"</span>);
   <span class="keywordflow">return</span> -1;
  }
  
  <span class="comment">// print features</span>
  fprintf(stdout, <span class="stringliteral">"== frame %2d ==\n"</span>, i);
  <span class="keywordflow">for</span>(<span class="keywordtype">int</span> j = 0; j &lt; tracContext.<a class="code" href="struct__FeatureTrackerContext.htm#e9d5ae9b4bec8bfcf608f063ed875e49">num_features</a>; ++j) {
   fprintf(stdout, <span class="stringliteral">"%2d (%3.1f, %3.1f)\n"</span>, features.<a class="code" href="struct__feature__list.htm#8e2e1c2bc6c829a57c6909bc72f1f217">features</a>[j].<a class="code" href="struct__feature.htm#8f8205ad1bd683d879e31651e6d6ba20">val</a>, 
           features.<a class="code" href="struct__feature__list.htm#8e2e1c2bc6c829a57c6909bc72f1f217">features</a>[j].<a class="code" href="struct__feature.htm#c3d93448e2d7e4c42f6cb81f5636575b">x</a>, features.<a class="code" href="struct__feature__list.htm#8e2e1c2bc6c829a57c6909bc72f1f217">features</a>[j].<a class="code" href="struct__feature.htm#6c24c67805f765e506360efabf4b89ce">y</a>);
  }
 }

 <span class="comment">// SDL events won't be caught outside processImage(), unless</span>
 <span class="comment">// you do this...</span>
 SDL_Event event;
 <span class="keywordflow">while</span>( SDL_PollEvent(&amp;event)  ) {
  <span class="keywordflow">if</span>(event.type == SDL_QUIT) {
   fprintf(stdout, <span class="stringliteral">"\nI was asked to quit!\n"</span>);
   <span class="keywordflow">return</span> -2;
  }
 }

 <a class="code" href="TrackerUtils_8hpp.htm#a5c4fd16fc87e9a0e3c260f835c25623">freeFeatureList</a>(features);

 <span class="keywordflow">return</span> 0;
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="1e4c54e982e04f6fa6390c8572213cdd"></a><!-- doxytag: member="FeatureTrackerOCV::FeatureTrackerOCV" ref="1e4c54e982e04f6fa6390c8572213cdd" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">FeatureTrackerOCV::FeatureTrackerOCV           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Default constructor.     </td>
  </tr>
</table>
<a class="anchor" name="17fe3fb1f2d8200a13337e9c2e6cb0cb"></a><!-- doxytag: member="FeatureTrackerOCV::~FeatureTrackerOCV" ref="17fe3fb1f2d8200a13337e9c2e6cb0cb" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">FeatureTrackerOCV::~FeatureTrackerOCV           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructor frees any allocated resources.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="b8a440c6576c4961814e18853dbff265"></a><!-- doxytag: member="FeatureTrackerOCV::initialize" ref="b8a440c6576c4961814e18853dbff265" args="(FeatureTrackerContext_t &amp;ftc, OCVTrackingContext_t &amp;ocvt)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int FeatureTrackerOCV::initialize           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="struct__FeatureTrackerContext.htm">FeatureTrackerContext_t</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ftc</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap><a class="el" href="struct__OCVTrackingContext.htm">OCVTrackingContext_t</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ocvt</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initialize the tracker. Call this method before calling any other methods of this class. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ftc</em>&nbsp;</td><td>settings specific to this class. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ocvt</em>&nbsp;</td><td>tracker algorithm specific settings. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error (error message redirected to stderr). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="3d0bd7248a701fe64f7e41fbf9e4ae79"></a><!-- doxytag: member="FeatureTrackerOCV::processImage" ref="3d0bd7248a701fe64f7e41fbf9e4ae79" args="(unsigned char *img, int w, int h, feature_list_t &amp;list)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int FeatureTrackerOCV::processImage           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>img</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>w</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>h</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap><a class="el" href="struct__feature__list.htm">feature_list_t</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>list</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Track features in the image buffer. Upon calling this method the first time, features are selected either automatically (if 'auto_select_features' was turned on during initialization) or by the user. If 'display_tracked_features' was turned on during initialization, the image display window will be updated with the current image in the buffer and the location of tracked features are marked. <hr>
 NOTE: Calling this function initiates SDL event handling, including for SIGINT (CNTRL+C). Hence, to catch events outside of this method, use SDL functions such as SDL_PollEvent(). <hr>
 <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>img</em>&nbsp;</td><td>Pointer to image buffer. NOTE: image must be 8 bit grayscale. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>w,h</em>&nbsp;</td><td>Image dimensions in pixels. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>List of tracked features. This list contains updated (x,y) locations of features and an integer value indicating whether the feature was tracked successfully (0) or not (-1). </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>current frame number on success (first frame = 1), -1 on error (error message redirected to stderr), -2 on user initiated quit. </dd></dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="FeatureTrackerOCV_8hpp-source.htm">FeatureTrackerOCV.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>Real-time Feature Tracker Library</b></font></code> on Thu Sep 14 20:30:15 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
