<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Logitech Wingman 3D Class Driver for QNX: Wingman3D Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>Wingman3D Class Reference</h1><!-- doxytag: class="Wingman3D" -->The class <code><a class="el" href="classWingman3D.htm">Wingman3D</a></code> provides an interface to the following Logitech (Vendor ID: 0x046D) USB HID compliant joysticks:.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Wingman3D_8hpp-source.htm">Wingman3D.hpp</a>&gt;</code>
<p>
<a href="classWingman3D-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#7760f2d75ff0c4e3067d33f7c52bd580">Wingman3D</a> (int devNum=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#55b8396f759ef28e77e7073cc95303b0">~Wingman3D</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#da494bff603ae6837b204f8ab8a9367a">getX</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#ae761b496ce764ded2e8df645250a004">getMaxX</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#c3f70ada0ba6ada1aee532fd322518ff">getY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#9e7224761027cab263faa159cc861f6f">getMaxY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#61745e21bd1a94991ad7db3a4390210b">getTwist</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#e2d09cc870869098941343e963bb17a5">getMaxTwist</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#6d376722b604b9ca5d701f9773ba8dd9">getNumButtons</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#3c3b40e5b9289c3967eaf4a0d117df2b">isButtonPressed</a> (int button) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#34c70c8d6d74c6905dca6d11045e7bf9">getSliderValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#ef31ec7bb34418c13cdb12a224a6504e">getMaxSliderValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#979fe5258b624dd17b660a1b1dfc5300">getHatSwitchStatus</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#9ae4e9e1cd4bc69a29e76893e4c1e8fa">isStatusOk</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#e858ee5693d2bb3fa6dfb9514621d7de">getStatusMessage</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#cb954a7d90434fb0c34dc46c8bb8d34c">printDeviceInfo</a> (int verbosity=1) const </td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="structwingman__data.htm">wingman_data_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#a21bb9dd000e82fbb96df957d8dc7e9d">getWingmanData</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="structwingman__data.htm">wingman_data_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classWingman3D.htm#056873fd712458e789ddf9e3214239b7">getWingmanMaxData</a> () const </td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The class <code><a class="el" href="classWingman3D.htm">Wingman3D</a></code> provides an interface to the following Logitech (Vendor ID: 0x046D) USB HID compliant joysticks:. 
<p>
<ul>
<li>
Wingman Extreme 3D Digital (Product ID: 0xC212) </li>
<li>
Force3D (Product ID: 0xC283) (no force feedback support) </li>
<li>
Extreme 3D Pro (Product ID: 0xc215) </li>
</ul>
<p>
To use the joystick please ensure that the USB manager (devu-uhci or devu-ohci) and manager for HID devices (io-hid) are running. Your application will also need to be linked with the HID library libhiddi.so and the library created by this class. You will need to be root to use this class. Here are the commands to start the device managers (as root) : <div class="fragment"><pre class="fragment"> /sbin/devu-uhci &amp; (or /sbin/devu-ohci &amp;)
 /sbin/io-hid &amp;
 mount -Tio-hid devh-usb.so &amp;
</pre></div><p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//========================================================================</span>
<span class="comment">// Wingman3D.t.cpp  : Example program for Logitech Wingman HID Joystick     </span>
<span class="comment">//</span>
<span class="comment">// Author           : Vilas Kumar Chitrakaran &lt;cvilas@ces.clemson.edu&gt;     </span>
<span class="comment">// Date             : March 2, 2004</span>
<span class="comment">// Compiler         : GNU GCC 2.95.3qnx-nto</span>
<span class="comment">// Operating System : QNX Momentics 6.2.1                                </span>
<span class="comment">//========================================================================</span>

<span class="preprocessor">#include "<a class="code" href="Wingman3D_8hpp.htm">Wingman3D.hpp</a>"</span>
<span class="preprocessor">#include &lt;stdio.h&gt;</span>
<span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<span class="preprocessor">#include &lt;unistd.h&gt;</span>

<span class="keywordtype">int</span> main()
{
 <a class="code" href="classWingman3D.htm">Wingman3D</a> joystick(0);

 <span class="keywordflow">if</span>( !joystick.isStatusOk() ) {
  fprintf(stderr, <span class="stringliteral">"%s\n"</span>, joystick.getStatusMessage());
  <span class="keywordflow">return</span> EXIT_FAILURE;
 }
 sleep(1);
 joystick.printDeviceInfo(3);

 <span class="keywordflow">while</span>(1)
 {
  fprintf(stdout, <span class="stringliteral">"\nx: %03d y: %03d z: %03d slide: %03d hat: %03d buttons: "</span>, 
   joystick.getX(), joystick.getY(), joystick.getTwist(),
   joystick.getSliderValue(), joystick.getHatSwitchStatus());
 
  <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 1; i &lt; joystick.getNumButtons(); i++)
   <span class="keywordflow">if</span>( joystick.isButtonPressed(i) )
    fprintf(stdout, <span class="stringliteral">"%01d "</span>, i);

  <span class="keywordflow">if</span>( !joystick.isStatusOk() )
   <span class="keywordflow">return</span> -1;
  
 }

 <span class="keywordflow">return</span> EXIT_SUCCESS;
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="7760f2d75ff0c4e3067d33f7c52bd580"></a><!-- doxytag: member="Wingman3D::Wingman3D" ref="7760f2d75ff0c4e3067d33f7c52bd580" args="(int devNum=0)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">Wingman3D::Wingman3D           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>devNum</em> = <code>0</code>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. Establishes connection with the HID driver. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>devNum</em>&nbsp;</td><td>The address of the joystick device to connect to (default = 0). </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="55b8396f759ef28e77e7073cc95303b0"></a><!-- doxytag: member="Wingman3D::~Wingman3D" ref="55b8396f759ef28e77e7073cc95303b0" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">Wingman3D::~Wingman3D           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default destructor disconnects from the HID driver and cleans up.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="da494bff603ae6837b204f8ab8a9367a"></a><!-- doxytag: member="Wingman3D::getX" ref="da494bff603ae6837b204f8ab8a9367a" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getX           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The X position </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ae761b496ce764ded2e8df645250a004"></a><!-- doxytag: member="Wingman3D::getMaxX" ref="ae761b496ce764ded2e8df645250a004" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getMaxX           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The maximum output from X axis. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c3f70ada0ba6ada1aee532fd322518ff"></a><!-- doxytag: member="Wingman3D::getY" ref="c3f70ada0ba6ada1aee532fd322518ff" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getY           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The Y position </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="9e7224761027cab263faa159cc861f6f"></a><!-- doxytag: member="Wingman3D::getMaxY" ref="9e7224761027cab263faa159cc861f6f" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getMaxY           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The maximum output from Y axis. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="61745e21bd1a94991ad7db3a4390210b"></a><!-- doxytag: member="Wingman3D::getTwist" ref="61745e21bd1a94991ad7db3a4390210b" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getTwist           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The twist handle position. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="e2d09cc870869098941343e963bb17a5"></a><!-- doxytag: member="Wingman3D::getMaxTwist" ref="e2d09cc870869098941343e963bb17a5" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getMaxTwist           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The maximum output from twist axis. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="6d376722b604b9ca5d701f9773ba8dd9"></a><!-- doxytag: member="Wingman3D::getNumButtons" ref="6d376722b604b9ca5d701f9773ba8dd9" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getNumButtons           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The number of programmable buttons available </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="3c3b40e5b9289c3967eaf4a0d117df2b"></a><!-- doxytag: member="Wingman3D::isButtonPressed" ref="3c3b40e5b9289c3967eaf4a0d117df2b" args="(int button) const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">bool Wingman3D::isButtonPressed           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>button</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>true if button <em>button</em> is pressed, else false </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="34c70c8d6d74c6905dca6d11045e7bf9"></a><!-- doxytag: member="Wingman3D::getSliderValue" ref="34c70c8d6d74c6905dca6d11045e7bf9" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getSliderValue           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The slider/throttle position. Range [0 - 255]. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ef31ec7bb34418c13cdb12a224a6504e"></a><!-- doxytag: member="Wingman3D::getMaxSliderValue" ref="ef31ec7bb34418c13cdb12a224a6504e" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getMaxSliderValue           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The maximum output from slider. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="979fe5258b624dd17b660a1b1dfc5300"></a><!-- doxytag: member="Wingman3D::getHatSwitchStatus" ref="979fe5258b624dd17b660a1b1dfc5300" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Wingman3D::getHatSwitchStatus           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>A value indicating position of the hat switch. Range [1 - 8]. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="9ae4e9e1cd4bc69a29e76893e4c1e8fa"></a><!-- doxytag: member="Wingman3D::isStatusOk" ref="9ae4e9e1cd4bc69a29e76893e4c1e8fa" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">bool Wingman3D::isStatusOk           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>true if no error, else false. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="e858ee5693d2bb3fa6dfb9514621d7de"></a><!-- doxytag: member="Wingman3D::getStatusMessage" ref="e858ee5693d2bb3fa6dfb9514621d7de" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">char* Wingman3D::getStatusMessage           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>A string carrying current status of the device. This string also carries error messages when <a class="el" href="classWingman3D.htm#9ae4e9e1cd4bc69a29e76893e4c1e8fa">isStatusOk()</a> returns false. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="cb954a7d90434fb0c34dc46c8bb8d34c"></a><!-- doxytag: member="Wingman3D::printDeviceInfo" ref="cb954a7d90434fb0c34dc46c8bb8d34c" args="(int verbosity=1) const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void Wingman3D::printDeviceInfo           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>verbosity</em> = <code>1</code>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Print information about the device to stdout. Higher values of <em>verbosity</em> mean more detailed information.     </td>
  </tr>
</table>
<a class="anchor" name="a21bb9dd000e82fbb96df957d8dc7e9d"></a><!-- doxytag: member="Wingman3D::getWingmanData" ref="a21bb9dd000e82fbb96df957d8dc7e9d" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="structwingman__data.htm">wingman_data_t</a> Wingman3D::getWingmanData           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [protected]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The whole data structure for device with current joystick data </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="056873fd712458e789ddf9e3214239b7"></a><!-- doxytag: member="Wingman3D::getWingmanMaxData" ref="056873fd712458e789ddf9e3214239b7" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="structwingman__data.htm">wingman_data_t</a> Wingman3D::getWingmanMaxData           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [protected]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>The whole data structure for device with max limits for joystick data </dd></dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Wingman3D_8hpp-source.htm">Wingman3D.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>Logitech Wingman 3D Class Driver</b></font></code> on Mon Aug 28 15:21:10 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
