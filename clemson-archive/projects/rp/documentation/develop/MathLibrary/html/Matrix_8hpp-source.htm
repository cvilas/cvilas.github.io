<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Matrix.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.htm">docs</a>&nbsp;/&nbsp;<a class="el" href="dir_000001.htm">preprocessed</a></div>
<h1>Matrix.hpp</h1><div class="fragment"><pre class="fragment">00001   
00002 <span class="preprocessor">#ifndef INCLUDED_Matrix_hpp</span>
00003 <span class="preprocessor"></span><span class="preprocessor">#define INCLUDED_Matrix_hpp</span>
00004 <span class="preprocessor"></span>
00005 <span class="preprocessor">#include "MatrixBase.hpp"</span> 
00006 <span class="preprocessor">#include "VectorBase.hpp"</span>
00007 
00008 <span class="preprocessor">#include &lt;iostream&gt;</span>
00009 <span class="preprocessor">#include &lt;iomanip&gt;</span>
00010 <span class="preprocessor">#include &lt;math.h&gt;</span>
00011 
00012 <span class="keyword">using</span> <span class="keyword">namespace </span>std; 
00032 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classMatrix.htm">Matrix</a>;
00033 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> n, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classColumnVector.htm">ColumnVector</a>; 
00034 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> n, <span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classRowVector.htm">RowVector</a>;
00035 <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;<span class="keyword">class </span><a class="code" href="classMatrixInitializer.htm">MatrixInitializer</a>;
00036 
00040 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; ostream &amp;operator&lt;&lt; (ostream &amp;out, const Matrix&lt;r,c,T&gt; &amp;m);
00041 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; istream &amp;operator&gt;&gt; (istream &amp;in, <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;m);
00042 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;rhs);
00043 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r,c,T&gt;</a> &amp;rhs);
00044 
00045 
00046 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> numRows, <span class="keywordtype">int</span> numColumns, <span class="keyword">class</span> T = <span class="keywordtype">double</span>&gt;
<a name="l00047"></a><a class="code" href="classMatrix.htm">00047</a> <span class="keyword">class </span><a class="code" href="classMatrix.htm">Matrix</a> : <span class="keyword">public</span> <a class="code" href="classMatrixBase.htm">MatrixBase</a>&lt;T&gt;
00048 {
00049   <span class="keyword">public</span>:
<a name="l00050"></a><a class="code" href="classMatrix.htm#a0">00050</a>     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm#a0">Matrix</a>() {}
00055     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm#a0">Matrix</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;matrix);
<a name="l00059"></a><a class="code" href="classMatrix.htm#a2">00059</a>     <span class="keyword">virtual</span> <a class="code" href="classMatrix.htm#a2">~Matrix</a>() {}
<a name="l00063"></a><a class="code" href="classMatrix.htm#a3">00063</a>     <span class="keyword">virtual</span> T *<a class="code" href="classMatrix.htm#a3">getElementsPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (T *) &amp;d_element[0][0]; }
<a name="l00067"></a><a class="code" href="classMatrix.htm#a4">00067</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classMatrix.htm#a4">getNumRows</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> numRows;}
<a name="l00071"></a><a class="code" href="classMatrix.htm#a5">00071</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classMatrix.htm#a5">getNumColumns</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> numColumns;}
00075     <span class="keyword">inline</span> <a class="code" href="classColumnVector.htm">ColumnVector&lt;numRows, T&gt;</a> <a class="code" href="classMatrix.htm#a6">getColumn</a>(<span class="keywordtype">int</span> c) <span class="keyword">const</span>;
00085     <span class="keyword">inline</span> <a class="code" href="classRowVector.htm">RowVector&lt;numColumns, T&gt;</a> <a class="code" href="classMatrix.htm#a7">getRow</a>(<span class="keywordtype">int</span> r) <span class="keyword">const</span>;
00090     <span class="keyword">inline</span> <span class="keyword">virtual</span> T <a class="code" href="classMatrix.htm#a8">getElement</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c) <span class="keyword">const</span>;
00096     <span class="keyword">inline</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#a9">setElement</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, T val);
00103     <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> sr, <span class="keywordtype">int</span> sc, <span class="keyword">class</span> X&gt;
00104     <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#a10">getSubMatrix</a>(<span class="keywordtype">int</span> pivotRow, <span class="keywordtype">int</span> pivotColumn, <a class="code" href="classMatrix.htm">Matrix&lt;sr, sc, X&gt;</a> &amp;m) <span class="keyword">const</span>; 
00120     <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> sr, <span class="keywordtype">int</span> sc, <span class="keyword">class</span> X&gt;
00121     <span class="keywordtype">void</span> <a class="code" href="classMatrix.htm#a11">setSubMatrix</a>(<span class="keywordtype">int</span> pivotRow, <span class="keywordtype">int</span> pivotColumn, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;sr, sc, X&gt;</a> &amp;m);
00136     <span class="keyword">inline</span> T &amp;<a class="code" href="classMatrix.htm#a12">operator()</a>(<span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c); 
00141     <span class="keyword">inline</span> T <a class="code" href="classMatrix.htm#a12">operator()</a>(<span class="keywordtype">int</span> row, <span class="keywordtype">int</span> column) <span class="keyword">const</span>;
00146     <span class="keyword">inline</span> <a class="code" href="classMatrixInitializer.htm">MatrixInitializer&lt;T&gt;</a> <a class="code" href="classMatrix.htm#a14">operator=</a>(<span class="keyword">const</span> T &amp;val);
00156     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> &amp;<a class="code" href="classMatrix.htm#a14">operator=</a>(<span class="keyword">const</span> <a class="code" href="classMatrixBase.htm">MatrixBase&lt;T&gt;</a> &amp;m);
00162     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> <a class="code" href="classMatrix.htm#a16">operator+</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;rhs);
00174     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> <a class="code" href="classMatrix.htm#a17">operator-</a>(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;rhs);
00182     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> <a class="code" href="classMatrix.htm#a18">operator*</a>(<span class="keyword">const</span> T &amp;scalar);
00194     <span class="keyword">inline</span> <a class="code" href="classMatrix.htm">Matrix</a> <a class="code" href="classMatrix.htm#a19">operator/</a>(<span class="keyword">const</span> T &amp;scalar);
00208     <span class="keyword">friend</span> ostream &amp;operator&lt;&lt; &lt;&gt;(ostream &amp;output, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;matrix);
00215     <span class="keyword">friend</span> istream &amp;operator&gt;&gt; &lt;&gt;(istream &amp;input, <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;matrix);
00223     <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator== &lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;rhs);
00227     <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator!= &lt;&gt;(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;rhs);
00231   <span class="keyword">protected</span>:
00232     T d_element[numRows][numColumns];
00233   <span class="keyword">private</span>:
00234 };
00235 
00239 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> r1, <span class="keywordtype">int</span> c1r2, <span class="keywordtype">int</span> c2, <span class="keyword">class</span> T&gt;
00240 <a class="code" href="classMatrix.htm">Matrix&lt;r1, c2, T&gt;</a> operator* (<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;r1, c1r2, T&gt;</a> &amp;m1, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;c1r2, c2, T&gt;</a> &amp;m2);
00250 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> c1r2, <span class="keyword">class</span> T&gt;
00251 T operator* (<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;1, c1r2, T&gt;</a> &amp;m1, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;c1r2, 1, T&gt;</a> &amp;m2);
00256 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> numRows, <span class="keywordtype">int</span> numColumns, <span class="keyword">class</span> T&gt;
00257 <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> operator*(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;scalar, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;m);
00268 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> numRows, <span class="keywordtype">int</span> numColumns, <span class="keyword">class</span> T&gt;
00269 <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> operator*(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;scalar, <span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;m);
00274 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> numColumns, <span class="keywordtype">int</span> numRows, <span class="keyword">class</span> T&gt;
00275 <a class="code" href="classMatrix.htm">Matrix&lt;numColumns, numRows, T&gt;</a> transpose(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;numRows, numColumns, T&gt;</a> &amp;matrix);
00279 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
00280 <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> inverse(<span class="keyword">const</span> <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> &amp;m);
00287 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt; 
00288 T determinant ( Matrix &lt;size, size, T&gt; &amp;matrix);
00292 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt; 
00293 T trace( Matrix &lt;size, size, T&gt; &amp;matrix);
00297 <span class="keyword">template</span>&lt;<span class="keywordtype">int</span> size, <span class="keyword">class</span> T&gt;
00298 <a class="code" href="classMatrix.htm">Matrix&lt;size, size, T&gt;</a> unitMatrix();
00304 };
00305 <span class="preprocessor">#endif</span>
</pre></div><hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon May 2 11:22:00 EDT 2005
<br>
Vilas Kumar Chitrakaran (cvilas at ces dot clemson dot edu)
</body>
</html>
