<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Octarm VI On-board Control System: OA6Model Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>OA6Model Class Reference</h1><!-- doxytag: class="OA6Model" -->Arm specific modelling functions and constants for Octarm 6 (Mar 2006).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="OA6Model_8hpp-source.htm">OA6Model.hpp</a>&gt;</code>
<p>
<a href="classOA6Model-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#71479ab558b5b469128d6f8b565f0f8e">OA6Model</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#f39247a67051162e86f4449e07cd27cd">~OA6Model</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#54a85d9204744eb731e4ddd08c43c561">registerQmotorParameters</a> (ControlProgram *cp)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">Vector&lt; 10 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#2b0eb074f370d92cd4230e934633efc3">getMinActuatorPosition</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">Vector&lt; 10 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#a9b3a9b78936c647088a9646c9cfe051">getMaxActuatorPosition</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">Vector&lt; 10 &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#16c1807988c8e4454ab7ab85365d64c8">getMaxActuatorEffort</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#c9d57e2094a2aaef999fb6076c5b06f9">getActuatorLengthsFromSKPhi</a> (Vector&lt; 9 &gt; &amp;skp, Vector&lt; 9 &gt; &amp;act)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#e5d0fb49dd3e1af47e0359a142ee6043">getSKPhiFromActuatorLengths</a> (Vector&lt; 9 &gt; &amp;act, Vector&lt; 9 &gt; &amp;skp)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#3650110c9fab077bf03fc67d2670453b">fKine</a> (int n, VectorBase&lt;&gt; &amp;length, Transform &amp;transform)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#c63d5a9b282b80f25b3fcb8cd28e6942">iKine</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#2d235887699ccaa721b969cabcb5a7f1">jacobian</a> (int n, VectorBase&lt;&gt; &amp;length, MatrixBase&lt;&gt; &amp;jacobian)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#0bf66f0d995af8f0f432b77018758110">jacobianPseudoInverse</a> (int n, VectorBase&lt;&gt; &amp;length, MatrixBase&lt; double &gt; &amp;jinv, MatrixBase&lt; double &gt; &amp;nullSpace)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#4cb8eb585294173a86d4ac4565422653">gravityCompensation</a> (Vector&lt; 10 &gt; &amp;position, Vector&lt; 10 &gt; &amp;control)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#b3b26c288d370fc0996d07a382dfbf8f">dampingCompensation</a> (Vector&lt; 10 &gt; &amp;positionDot, Vector&lt; 10 &gt; &amp;control)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#a6dea7783ec31552d6360df373a70313">stiffnessCompensation</a> (Vector&lt; 10 &gt; &amp;position, Vector&lt; 10 &gt; &amp;control)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#9f59153059321fe8bd6facef48995632">dynamics</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOA6Model.htm#5b40e44df3ce4ca7906f68d1a8491ed4">readGlobalConfiguration</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Arm specific modelling functions and constants for Octarm 6 (Mar 2006). 
<p>
This class contains all mechanical constants, kinematic and dynamic model parameters for the octarm. The electrical interface details are in Octarm6 class. In this class, the following are encoded : <ul>
<li>
Minimum and maximum actuator lengths (cm) </li>
<li>
Minimum and maximum base motor position (rad) </li>
<li>
Maximum actuator pressure </li>
<li>
Dead length at the end of each section (cm) </li>
<li>
Trunk radius (cm) </li>
<li>
forward kinematics </li>
<li>
inverse kinematics </li>
<li>
jacobian </li>
<li>
jacobian transpose </li>
<li>
jacobian pseudo inverse </li>
<li>
gravity compensation </li>
<li>
friction/damping compensation </li>
<li>
stiffness compensation </li>
<li>
dynamics </li>
</ul>
NOTE: We use a liberal mix of SI and imperial units!<p>
NOTE: 07/11/2005: Velocity kinematics, inverse kinematics and dynamics is not implemented. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="71479ab558b5b469128d6f8b565f0f8e"></a><!-- doxytag: member="OA6Model::OA6Model" ref="71479ab558b5b469128d6f8b565f0f8e" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">OA6Model::OA6Model           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Contructor. Does some initializations.     </td>
  </tr>
</table>
<a class="anchor" name="f39247a67051162e86f4449e07cd27cd"></a><!-- doxytag: member="OA6Model::~OA6Model" ref="f39247a67051162e86f4449e07cd27cd" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">OA6Model::~OA6Model           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructor.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="54a85d9204744eb731e4ddd08c43c561"></a><!-- doxytag: member="OA6Model::registerQmotorParameters" ref="54a85d9204744eb731e4ddd08c43c561" args="(ControlProgram *cp)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::registerQmotorParameters           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">ControlProgram *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cp</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
No control parameters are currently registered. No log variables are registered. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>cp</em>&nbsp;</td><td>A pointer to main qmotor control loop. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="5b40e44df3ce4ca7906f68d1a8491ed4"></a><!-- doxytag: member="OA6Model::readGlobalConfiguration" ref="5b40e44df3ce4ca7906f68d1a8491ed4" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::readGlobalConfiguration           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [protected]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function will search in the "OA6Model" section of the global configuration (See Octor::setGlobalConfigurationFile() ) for the following additional constants. <ul>
<li>
actuatorMinPosition - Minimum actuator position (Vector&lt;10&gt;, rad, cm). </li>
<li>
actuatorMaxPosition - Maximum actuator position (Vector&lt;10&gt;, rad, cm). </li>
<li>
feedForwardCoeffsBase - Stiffness feedforward polynomial coefficients for base section (Vector&lt;4&gt;) </li>
<li>
feedForwardCoeffsMiddle - Stiffness feedforward polynomial coefficients for middle section (Vector&lt;4&gt;) </li>
<li>
feedForwardCoeffsTip - Stiffness feedforward polynomial coefficients for tip section (Vector&lt;4&gt;) </li>
<li>
dampingCompensationConstants - gains for friction compensation (Vector&lt;10&gt;). </li>
<li>
actuatorMaxEffort - Maximum base motor torque (N-m) and actuator pressure (psi) (Vector&lt;10&gt;) </li>
<li>
sectionDeadLengths - Dead length at the end of each section (Vector&lt;3&gt;, cm). </li>
<li>
crossSectionRadius - Cross sectional radius of trunk (Vector&lt;3&gt;, cm). </li>
<li>
fkine parameters (TODO). </li>
</ul>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="2b0eb074f370d92cd4230e934633efc3"></a><!-- doxytag: member="OA6Model::getMinActuatorPosition" ref="2b0eb074f370d92cd4230e934633efc3" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">Vector&lt;10&gt; OA6Model::getMinActuatorPosition           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>Minimum actuator position (cm, rad). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a9b3a9b78936c647088a9646c9cfe051"></a><!-- doxytag: member="OA6Model::getMaxActuatorPosition" ref="a9b3a9b78936c647088a9646c9cfe051" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">Vector&lt;10&gt; OA6Model::getMaxActuatorPosition           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>Maximum actuator position (cm, rad). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="16c1807988c8e4454ab7ab85365d64c8"></a><!-- doxytag: member="OA6Model::getMaxActuatorEffort" ref="16c1807988c8e4454ab7ab85365d64c8" args="() const " --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">Vector&lt;10&gt; OA6Model::getMaxActuatorEffort           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>Maximum base motor torque (N-m) and actuator pressure (psi). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c9d57e2094a2aaef999fb6076c5b06f9"></a><!-- doxytag: member="OA6Model::getActuatorLengthsFromSKPhi" ref="c9d57e2094a2aaef999fb6076c5b06f9" args="(Vector&lt; 9 &gt; &amp;skp, Vector&lt; 9 &gt; &amp;act)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::getActuatorLengthsFromSKPhi           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">Vector&lt; 9 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>skp</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Vector&lt; 9 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>act</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Compute actuator lengths, given robot internal variables. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>skp</em>&nbsp;</td><td>The robot internal variables in the order [s1 k1 p1 s2 k2 p2 s3 k3 p3] starting from base section, where s = section length, k = section curvature, p = out of plane rotation of the section plane relative to previous section. (input) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>act</em>&nbsp;</td><td>Actuator lengths, starting from base section. (output) </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="e5d0fb49dd3e1af47e0359a142ee6043"></a><!-- doxytag: member="OA6Model::getSKPhiFromActuatorLengths" ref="e5d0fb49dd3e1af47e0359a142ee6043" args="(Vector&lt; 9 &gt; &amp;act, Vector&lt; 9 &gt; &amp;skp)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::getSKPhiFromActuatorLengths           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">Vector&lt; 9 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>act</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Vector&lt; 9 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>skp</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Compute robot internal variables, given actuator lengths. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>act</em>&nbsp;</td><td>Actuator lengths, starting from base section. (input) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>skp</em>&nbsp;</td><td>The robot internal variables in the order [s1 k1 p1 s2 k2 p2 s3 k3 p3] starting from base section, where s = section length, k = section curvature, p = out of plane rotation of the section plane relative to previous section. (output) </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="3650110c9fab077bf03fc67d2670453b"></a><!-- doxytag: member="OA6Model::fKine" ref="3650110c9fab077bf03fc67d2670453b" args="(int n, VectorBase&lt;&gt; &amp;length, Transform &amp;transform)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::fKine           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>n</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>VectorBase&lt;&gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>length</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Transform &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>transform</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. Compute forward kinematics from base to <em>n-th</em> section. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>End section (1, 2, or 3, where 1 is the base section) (input). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>Vector of actuator lengths. The dimension of this vector must be 3n (input). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>transform</em>&nbsp;</td><td>Homogeneous transformation matrix (output). </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="c63d5a9b282b80f25b3fcb8cd28e6942"></a><!-- doxytag: member="OA6Model::iKine" ref="c63d5a9b282b80f25b3fcb8cd28e6942" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::iKine           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. <dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="2d235887699ccaa721b969cabcb5a7f1"></a><!-- doxytag: member="OA6Model::jacobian" ref="2d235887699ccaa721b969cabcb5a7f1" args="(int n, VectorBase&lt;&gt; &amp;length, MatrixBase&lt;&gt; &amp;jacobian)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::jacobian           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>n</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>VectorBase&lt;&gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>length</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>MatrixBase&lt;&gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>jacobian</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. Compute jacobian from base to <em>n-th</em> section. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>End section (1, 2, or 3, where 1 is the base section) (input). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>Vector of actuator lengths. The dimension of this vector must be 3n (input). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>jacobian</em>&nbsp;</td><td>The jacobian matrix. The dimensions of this matrix must be 6 x 3n. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="0bf66f0d995af8f0f432b77018758110"></a><!-- doxytag: member="OA6Model::jacobianPseudoInverse" ref="0bf66f0d995af8f0f432b77018758110" args="(int n, VectorBase&lt;&gt; &amp;length, MatrixBase&lt; double &gt; &amp;jinv, MatrixBase&lt; double &gt; &amp;nullSpace)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::jacobianPseudoInverse           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>n</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>VectorBase&lt;&gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>length</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>MatrixBase&lt; double &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>jinv</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>MatrixBase&lt; double &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>nullSpace</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. <dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="4cb8eb585294173a86d4ac4565422653"></a><!-- doxytag: member="OA6Model::gravityCompensation" ref="4cb8eb585294173a86d4ac4565422653" args="(Vector&lt; 10 &gt; &amp;position, Vector&lt; 10 &gt; &amp;control)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::gravityCompensation           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>position</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>control</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. Compute feedforward to compensate for gravity (motor torque N-m, actuator pressure psi). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>position</em>&nbsp;</td><td>actuator position. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>control</em>&nbsp;</td><td>control effort to oppose gravity. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="b3b26c288d370fc0996d07a382dfbf8f"></a><!-- doxytag: member="OA6Model::dampingCompensation" ref="b3b26c288d370fc0996d07a382dfbf8f" args="(Vector&lt; 10 &gt; &amp;positionDot, Vector&lt; 10 &gt; &amp;control)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::dampingCompensation           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>positionDot</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>control</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Compute feedforward to compensate for friction/damping (motor torque N-m, actuator pressure psi). This function is currently implemented as frictionCompensationConstants * positionDot, i.e., a simple linear function. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>positionDot</em>&nbsp;</td><td>actuator velocities. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>control</em>&nbsp;</td><td>control effort to oppose friction and damping. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a6dea7783ec31552d6360df373a70313"></a><!-- doxytag: member="OA6Model::stiffnessCompensation" ref="a6dea7783ec31552d6360df373a70313" args="(Vector&lt; 10 &gt; &amp;position, Vector&lt; 10 &gt; &amp;control)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::stiffnessCompensation           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>position</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>Vector&lt; 10 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>control</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Compute feedforward to compensate for stiffness (motor torque N-m, actuator pressure psi). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>position</em>&nbsp;</td><td>actuator position. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>control</em>&nbsp;</td><td>control effort to oppose stiffness. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="9f59153059321fe8bd6facef48995632"></a><!-- doxytag: member="OA6Model::dynamics" ref="9f59153059321fe8bd6facef48995632" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int OA6Model::dynamics           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
NOT IMPLEMENTED. <dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error. </dd></dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="OA6Model_8hpp-source.htm">OA6Model.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>Octarm VI On-board Control System</b></font></code> on Fri Apr 14 21:18:14 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
