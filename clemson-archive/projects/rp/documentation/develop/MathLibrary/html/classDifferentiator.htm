<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>QMath Matrix Library: Differentiator&lt; T &gt; Class Template Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>Differentiator&lt; T &gt; Class Template Reference</h1>This is the base class for differentiators.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Differentiator_8hpp-source.htm">Differentiator.hpp</a>&gt;</code>
<p>
<p>Inheritance diagram for Differentiator&lt; T &gt;:
<p><center><img src="classDifferentiator.png" usemap="#Differentiator< T >_map" border="0" alt=""></center>
<map name="Differentiator< T >_map">
<area href="classDifferentiator4O.htm" alt="Differentiator4O< T >" shape="rect" coords="0,56,134,80">
</map>
<a href="classDifferentiator-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a0">Differentiator</a> (double period=0.001)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a1">~Differentiator</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a2">setSamplingPeriod</a> (double period)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a3">setCutOffFrequencyHz</a> (double f)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a4">setCutOffFrequencyRad</a> (double cutOffFrequencyRad)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a5">setDampingRatio</a> (double d)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a6">disableFilter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a7">enableFilter</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a8">reset</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual T&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDifferentiator.htm#a9">differentiate</a> (T &amp;input)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<h3>template&lt;class T = double&gt;<br>
 class Differentiator&lt; T &gt;</h3>

This is the base class for differentiators. 
<p>
This class implements numerical differentation using backward difference followed by low-pass filtering.<p>
The Differentiator performs numerical differentiation of a signal using backward difference, followed by smoothening of the differentiated signal by a 2nd order butterworth low pass filter. The filtering is usually required due to the noisy nature of the result of numerical differentiation. Unfortunately low pass filter also introduces lag and innacuracy to the result. Filtering action should be disabled using <a class="el" href="classDifferentiator.htm#a6">disableFilter()</a> if your input signal is sufficiently smooth.<p>
A derived class from Differentiator can override the differenting algorithm provided.The class <code>Differentiator</code> can be used with many data types (double, int, <a class="el" href="classRowVector.htm">RowVector</a>, <a class="el" href="classColumnVector.htm">ColumnVector</a>, <a class="el" href="classMatrix.htm">Matrix</a>, etc).<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//======================================================================== </span>
<span class="comment">// Package                      : The Math Library - Ex</span>
<span class="comment">// Authors                      : Vilas Kumar Chitrakaran</span>
<span class="comment">// Start Date           : Wed Dec 20 11:08:28 GMT 2000</span>
<span class="comment">// Compiler                     : GNU C++ 2.95.3 and above</span>
<span class="comment">// ----------------------------------------------------------------------</span>
<span class="comment">// File: Differentiator.t.cpp</span>
<span class="comment">// Example program for the Differentiator.</span>
<span class="comment">//========================================================================</span>

<span class="comment">//========================================================================</span>
<span class="comment">//Differentiator.t.cpp</span>
<span class="comment">//------------------------------------------------------------------------</span>
<span class="comment">// Demonstration of Differentiator class. The numerical differentiation</span>
<span class="comment">// result is compared with analytical solution.</span>
<span class="comment">//========================================================================</span>

<span class="preprocessor">#include "Differentiator.hpp"</span>
<span class="preprocessor">#include "ColumnVector.hpp"</span>
<span class="preprocessor">#include &lt;stdio.h&gt;</span>

<span class="keywordtype">int</span> main()
{
 FILE *outfile;  <span class="comment">// This file holds the input and output waveforms.</span>
 outfile = fopen(<span class="stringliteral">"Differentiator.dat"</span>, <span class="stringliteral">"w+"</span>);
 
 <span class="keywordtype">double</span> input;             <span class="comment">// input signal</span>
 <span class="keywordtype">double</span> output_numerical;  <span class="comment">// numerically computed derivative</span>
 <span class="keywordtype">double</span> output_actual;     <span class="comment">// analytically computed derivative</span>
 <span class="keywordtype">double</span> error;             <span class="comment">// error between numerical and analytical results</span>
 <span class="keywordtype">double</span> samplingPeriod;
 
 <span class="comment">// Create Differentiator with a sampling period of 1 milli-second.</span>
 samplingPeriod = 0.001;
 <a class="code" href="classDifferentiator.htm">Differentiator&lt;double&gt;</a> differentiator(samplingPeriod);
 
 <span class="comment">// Set filter parameters.</span>
 differentiator.setCutOffFrequencyHz(500);
 differentiator.setDampingRatio(1);
 differentiator.reset();

 fprintf(outfile, <span class="stringliteral">"%s\n%s %s %s %s\n"</span>, <span class="stringliteral">"%Differentiator output file"</span>,
         <span class="stringliteral">"%input"</span>, <span class="stringliteral">"output_actual"</span>, <span class="stringliteral">"output_numerical"</span>, <span class="stringliteral">"error"</span> );
 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 1.0/samplingPeriod; i++)
 {      
  input = cos(2*M_PI*i*samplingPeriod); <span class="comment">// 1 Hz signal</span>

  <span class="comment">// Differentiate analytically and numerically</span>
  output_actual = -(2 * M_PI) * sin(2*M_PI*i*samplingPeriod);
  output_numerical = differentiator.differentiate(input); 
  
  error = output_actual - output_numerical;
  
  <span class="comment">// write the outputs to a file... </span>
  fprintf(outfile, <span class="stringliteral">"%f %f %f %f\n"</span>, input, output_actual, output_numerical, error);
 }
 fclose(outfile);
 <span class="keywordflow">return</span>(0);
}


</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="a0" doxytag="Differentiator::Differentiator"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top"><a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::<a class="el" href="classDifferentiator.htm">Differentiator</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>period</em> = <code>0.001</code>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The Constructor initializes. The low pass filter is enabled by default, the cut-off frequency is set to half the sampling frequency and damping ratio of the low-pass filter in the differentiator is set to 1. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>period</em>&nbsp;</td><td>The sampling period of the differentiator in seconds.</td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a1" doxytag="Differentiator::~Differentiator"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">virtual <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::~<a class="el" href="classDifferentiator.htm">Differentiator</a>           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default destructor.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="a9" doxytag="Differentiator::differentiate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">virtual T <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::differentiate           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">T &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>input</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function implements the numerical method for differentiation. The user can derive a different method of differentiation in a derived class. The differentiator output in the first cycle is smoothened to zero. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>input</em>&nbsp;</td><td>The current value of the signal being differentiated.</td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classDifferentiator4O.htm#a3">Differentiator4O&lt; T &gt;</a>.    </td>
  </tr>
</table>
<a class="anchor" name="a6" doxytag="Differentiator::disableFilter"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::disableFilter           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Disable the low pass filtering after the differentiation. (Low pass filter is enabled by default.)     </td>
  </tr>
</table>
<a class="anchor" name="a7" doxytag="Differentiator::enableFilter"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::enableFilter           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Enable the low pass filtering after the differentiation.     </td>
  </tr>
</table>
<a class="anchor" name="a8" doxytag="Differentiator::reset"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::reset           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Resets the differentiator output to zero. 
<p>
Reimplemented in <a class="el" href="classDifferentiator4O.htm#a2">Differentiator4O&lt; T &gt;</a>.    </td>
  </tr>
</table>
<a class="anchor" name="a3" doxytag="Differentiator::setCutOffFrequencyHz"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::setCutOffFrequencyHz           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>f</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Differentiation is followed by a low pass filtering process. This function sets the cut-off frequency of the filter in <em>hertz</em>.     </td>
  </tr>
</table>
<a class="anchor" name="a4" doxytag="Differentiator::setCutOffFrequencyRad"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::setCutOffFrequencyRad           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cutOffFrequencyRad</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Differentiation is followed by a low pass filtering process. This function sets the cut-off frequency of the filter in <em>rad/sec</em>.     </td>
  </tr>
</table>
<a class="anchor" name="a5" doxytag="Differentiator::setDampingRatio"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::setDampingRatio           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>d</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the damping factor of the butterworth filter.     </td>
  </tr>
</table>
<a class="anchor" name="a2" doxytag="Differentiator::setSamplingPeriod"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" colspan="4">
template&lt;class T = double&gt; </td>
        </tr>
        <tr>
          <td class="md" nowrap valign="top">void <a class="el" href="classDifferentiator.htm">Differentiator</a>&lt; T &gt;::setSamplingPeriod           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>period</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the sampling period of the differentiator     </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Differentiator_8hpp-source.htm">Differentiator.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>QMath Matrix Library</b></font></code> on Mon May 2 11:22:00 EDT 2005
<br>
Vilas Kumar Chitrakaran (cvilas at ces dot clemson dot edu)
</body>
</html>
