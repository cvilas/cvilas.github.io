<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Motion Mind DC Motor Controller 1.0: MMClient Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>MMClient Class Reference</h1><!-- doxytag: class="MMClient" -->A non-blocking client to <a class="el" href="classMMServer.htm">MMServer</a>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="MMClientServer_8hpp-source.htm">MMClientServer.hpp</a>&gt;</code>
<p>
<a href="classMMClient-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#1a7ba1f080f0e99c2df684e99803e06e">MMClient</a> (char *shmName=&quot;mmc0&quot;)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#fe725c12abcd46d6f584248e2944e8ef">~MMClient</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#1fb25e09105802c6183fc01e917cedf2">isServerStatusOk</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#1207618fb6d94659ccc9542fd2b72b3b">changeSpeed</a> (int16_t speed)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#66eaf83577930d1c69115c57b45b09d0">moveToAbsolute</a> (int32_t position)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#73492b723ef0567ec2cfa4852ed4c33c">moveToRelative</a> (int32_t position)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#b7638cc99a34549f41016d4072d2444f">moveAtVelocity</a> (int16_t velocity)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMMClient.htm#ea97c8e93cd79d16c4006721ff6dcbea">getPosition</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A non-blocking client to <a class="el" href="classMMServer.htm">MMServer</a>. 
<p>
Use an object of this class to command the Motion Mind Controller through a server. The functionality is restricted to setting speed and position using modes 3 or 4 of the controller (serial open loop, and serial closed loop PID, respectively)<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//======================================================================== </span>
<span class="comment">// Package: Motion Mind DC Motor Controller</span>
<span class="comment">// Authors: Vilas Kumar Chitrakaran, Nitendra Nath</span>
<span class="comment">// Start Date: Sun Jan 15 15:36:46 EST 2006</span>
<span class="comment">// ----------------------------------------------------------------------  </span>
<span class="comment">// File: MMClientServer.t.cpp</span>
<span class="comment">//========================================================================  </span>

<span class="preprocessor">#include &lt;stdio.h&gt;</span>
<span class="preprocessor">#include "<a class="code" href="MMClientServer_8hpp.htm">MMClientServer.hpp</a>"</span>
<span class="preprocessor">#include &lt;pthread.h&gt;</span>
<span class="preprocessor">#include &lt;unistd.h&gt;</span>
<span class="preprocessor">#include &lt;math.h&gt;</span>

 
<span class="comment">//======================================================================== </span>
<span class="comment">// client </span>
<span class="comment">//========================================================================  </span>
<span class="keywordtype">int</span> client()
{
 <span class="keywordtype">int</span> t = 0;
 <a class="code" href="classMMClient.htm">MMClient</a> mmClient(<span class="stringliteral">"/mmc0"</span>);
 <span class="keywordflow">if</span>(mmClient.isServerStatusOk() != 0) {
  fprintf(stderr, <span class="stringliteral">"[client]: ERROR in server.\n"</span>);
  <span class="keywordflow">return</span> -1;
 }

 <span class="keywordflow">while</span>(1) { 
  <span class="keywordflow">if</span>(mmClient.isServerStatusOk() != 0) {
   fprintf(stderr, <span class="stringliteral">"[client]: ERROR in server.\n"</span>);
   <span class="keywordflow">return</span> -1;
  }
  mmClient.moveAtVelocity((<span class="keywordtype">int</span>)(sin((<span class="keywordtype">float</span>)t) * 100.0));
  fprintf(stdout, <span class="stringliteral">"%d\n"</span>, mmClient.getPosition());
  t+=1;
  sleep(1);
 }
 <span class="keywordflow">return</span> 0;
}

<span class="comment">//======================================================================== </span>
<span class="comment">// server</span>
<span class="comment">//========================================================================  </span>
<span class="keywordtype">void</span> *server(<span class="keywordtype">void</span> *arg)
{ 
 <a class="code" href="classMMServer.htm">MMServer</a> mmServer(<span class="stringliteral">"/mmc0"</span>, <span class="stringliteral">"/dev/ser1"</span>, 19200, 1);
 <span class="keywordflow">if</span>(mmServer.getStatusCode() != 0) {
  fprintf(stderr, <span class="stringliteral">"[server]: %s\n"</span>, mmServer.getStatusMessage());
  <span class="keywordflow">return</span> (<span class="keywordtype">void</span> *)(-1);
 }
 mmServer.doMainLoop(10);
 <span class="keywordflow">return</span> 0;
}


<span class="comment">//==============================================================================</span>
<span class="comment">// main function</span>
<span class="comment">//==============================================================================</span>
<span class="keywordtype">int</span> main()
{
 pthread_t threadId;
 pthread_create(&amp;threadId, NULL, &amp;server, NULL);
 sleep(1);
 client();
 <span class="keywordflow">return</span> 0;
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="1a7ba1f080f0e99c2df684e99803e06e"></a><!-- doxytag: member="MMClient::MMClient" ref="1a7ba1f080f0e99c2df684e99803e06e" args="(char *shmName=&quot;mmc0&quot;)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">MMClient::MMClient           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>shmName</em> = <code>&quot;mmc0&quot;</code>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. Initiates connection with server <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>shmName</em>&nbsp;</td><td>The server (<a class="el" href="classMMServer.htm">MMServer</a> class) identifier </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="fe725c12abcd46d6f584248e2944e8ef"></a><!-- doxytag: member="MMClient::~MMClient" ref="fe725c12abcd46d6f584248e2944e8ef" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">MMClient::~MMClient           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default destructor. Disconnects from server.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="1207618fb6d94659ccc9542fd2b72b3b"></a><!-- doxytag: member="MMClient::changeSpeed" ref="1207618fb6d94659ccc9542fd2b72b3b" args="(int16_t speed)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void MMClient::changeSpeed           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int16_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>speed</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Modifies speed and direction of motor when controller is operated in mode 3 (serial open loop control). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>speed</em>&nbsp;</td><td>Value in the range -1023 to +1023. The direction is determined by the sign (- reverse, + forward) and the the absolute value sets the duty cycle of the input voltage (for example -512 =&gt; motor is driven in reverse with 50% duty cycle). The timer register (MMReg_timer) and the velocity limit register (MMReg_velocityLimit) determines the ramp up time required to achieve the new speed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ea97c8e93cd79d16c4006721ff6dcbea"></a><!-- doxytag: member="MMClient::getPosition" ref="ea97c8e93cd79d16c4006721ff6dcbea" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int32_t MMClient::getPosition           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The client continously receives an update for actual motor position. This position data is updated only as fast as the server can provide this information, and hence, not guaranteed to be exactly correct. Use this method to get a rough estimate for motor position.     </td>
  </tr>
</table>
<a class="anchor" name="1fb25e09105802c6183fc01e917cedf2"></a><!-- doxytag: member="MMClient::isServerStatusOk" ref="1fb25e09105802c6183fc01e917cedf2" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int MMClient::isServerStatusOk           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>Returns:</b></dt><dd>0 if server status is OK, else -1. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="b7638cc99a34549f41016d4072d2444f"></a><!-- doxytag: member="MMClient::moveAtVelocity" ref="b7638cc99a34549f41016d4072d2444f" args="(int16_t velocity)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void MMClient::moveAtVelocity           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int16_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>velocity</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Specify velocity when operating in mode 4 (serial closed loop). The PID filter must be tuned to get best results. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>velocity</em>&nbsp;</td><td>The desired velocity as a 2's compliment integer. The velocity measurement in the controller occurs over a 5 ms period. Hence, the desired velocity setting can be computed from the following equation: velocity = (MotorShaftRotations/Second * EncoderCountPerRotation * GearRatio)/50. Use negative values for motion in reverse direction. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="66eaf83577930d1c69115c57b45b09d0"></a><!-- doxytag: member="MMClient::moveToAbsolute" ref="66eaf83577930d1c69115c57b45b09d0" args="(int32_t position)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void MMClient::moveToAbsolute           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int32_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>position</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Specify an absolute motor position when operating in mode 4 (serial closed-loop). Ensure that the PID filter is tuned, and note that the encoder is decoded on a 4:1 ratio (i.e., if the encoder gives 500 pulses for 1 rotation of the shaft, send 2000 to rotate motor shaft by one full rotation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>position</em>&nbsp;</td><td>Absolute position as a 32 bit 2's compliment number. Set velocity limit bit in the function register (MMFunc_velocityLimit) and load velocity limit register (mmcreg_velocityLimit) to limit average velocity during motion. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="73492b723ef0567ec2cfa4852ed4c33c"></a><!-- doxytag: member="MMClient::moveToRelative" ref="73492b723ef0567ec2cfa4852ed4c33c" args="(int32_t position)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void MMClient::moveToRelative           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int32_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>position</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Specify movement to a position relative to current position, when operating in mode 4 (serial closed loop). Ensure that the PID filter is tuned, and note that the encoder is decoded on a 4:1 ratio (i.e., if the encoder gives 500 pulses for 1 rotation of the shaft, send 2000 to rotate motor shaft by one full rotation. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>position</em>&nbsp;</td><td>Relative position as a 32 bit 2's compliment number. Set velocity limit bit in the function register (MMFunc_velocityLimit) and load velocity limit register (MMReg_velocityLimit) to limit average velocity during motion. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="MMClientServer_8hpp-source.htm">MMClientServer.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>Motion Mind DC Motor Controller</b></font></code> on Tue Apr 11 14:51:00 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
