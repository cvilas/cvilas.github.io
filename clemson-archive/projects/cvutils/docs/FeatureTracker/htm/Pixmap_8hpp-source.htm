<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Real-time Feature Tracker Library: Pixmap.hpp Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.htm"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>Pixmap.hpp</h1><a href="Pixmap_8hpp.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="preprocessor">#ifndef _PIXMAP_HPP_INCLUDED</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="preprocessor">#define _PIXMAP_HPP_INCLUDED</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;malloc.h&gt;</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;typeinfo&gt;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;inttypes.h&gt;</span>
<a name="l00012"></a>00012 
<a name="l00018"></a><a class="code" href="struct__rgb.htm">00018</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct__rgb.htm">_rgb</a>
<a name="l00019"></a>00019 {
<a name="l00020"></a><a class="code" href="struct__rgb.htm#3c108e3307135b59849ee04b2876170d">00020</a>   <a class="code" href="struct__rgb.htm#7b05a2baa2564f827db0db6ed65a0742">_rgb</a>(uint8_t R = 0, uint8_t G = 0, uint8_t B = 0) : <a class="code" href="struct__rgb.htm#3c108e3307135b59849ee04b2876170d">r</a>(R), <a class="code" href="struct__rgb.htm#ea31171ec354f20e4b07552fadeea0d4">g</a>(G), <a class="code" href="struct__rgb.htm#936712d4cd0fccb6c372287af6521542">b</a>(B) {};
<a name="l00021"></a>00021   uint8_t <a class="code" href="struct__rgb.htm#3c108e3307135b59849ee04b2876170d">r</a>; 
<a name="l00022"></a><a class="code" href="struct__rgb.htm#ea31171ec354f20e4b07552fadeea0d4">00022</a>   uint8_t <a class="code" href="struct__rgb.htm#ea31171ec354f20e4b07552fadeea0d4">g</a>; 
<a name="l00023"></a><a class="code" href="struct__rgb.htm#936712d4cd0fccb6c372287af6521542">00023</a>   uint8_t <a class="code" href="struct__rgb.htm#936712d4cd0fccb6c372287af6521542">b</a>; 
<a name="l00024"></a>00024 }<a class="code" href="struct__rgb.htm">rgb_t</a>;
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="keywordtype">bool</span> <a class="code" href="Pixmap_8hpp.htm#d60b33683292eb1ccac625a343861a03">operator==</a>(<span class="keyword">const</span> <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;c1, <span class="keyword">const</span> <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;c2);
<a name="l00028"></a>00028 <span class="keywordtype">bool</span> <a class="code" href="Pixmap_8hpp.htm#c7bdeb5b971ed86c855a1df3e4a98212">operator!=</a>(<span class="keyword">const</span> <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;c1, <span class="keyword">const</span> <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;c2);
<a name="l00029"></a>00029 std::ostream &amp;<a class="code" href="Pixmap_8hpp.htm#5d00a2eaca28342c01dba506ee404975">operator&lt;&lt; </a>(std::ostream &amp;out, <span class="keyword">const</span> <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;rgb);
<a name="l00030"></a>00030 std::istream &amp;<a class="code" href="Pixmap_8hpp.htm#15a4cfe81d7ff2c2fb733bb7d9c600f3">operator&gt;&gt; </a>(std::istream &amp;in, <a class="code" href="struct__rgb.htm">rgb_t</a> &amp;rgb);
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00047"></a>00047 <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="comment">// supported types T = uint8_t, rgb_t</span>
<a name="l00048"></a><a class="code" href="classPixmap.htm">00048</a> <span class="keyword">class </span><a class="code" href="classPixmap.htm">Pixmap</a>
<a name="l00049"></a>00049 {
<a name="l00050"></a>00050   <span class="keyword">public</span>:
<a name="l00051"></a>00051     <a class="code" href="classPixmap.htm#9c7f4877fa0c9f65cd88eb7c82c1ecd9">Pixmap</a>();
<a name="l00055"></a>00055     <a class="code" href="classPixmap.htm#9c7f4877fa0c9f65cd88eb7c82c1ecd9">Pixmap</a>(<span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h);
<a name="l00061"></a>00061     <a class="code" href="classPixmap.htm#9c7f4877fa0c9f65cd88eb7c82c1ecd9">Pixmap</a>(uint8_t *buffer, <span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h);
<a name="l00071"></a>00071     <span class="keyword">virtual</span> <a class="code" href="classPixmap.htm#d7b4fe1d9f6eed495fc325f40216d073">~Pixmap</a>();
<a name="l00075"></a>00075     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#05ab8f8248666656cd2340cdf07e70a0">create</a>(<span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h);
<a name="l00084"></a>00084     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#913cb96d4a11047594f7a8242f0b26bb">attach</a>(uint8_t *buffer, <span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h);
<a name="l00094"></a>00094     <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#02e9822f3fe2f920ba1f5a66f83c573b">getWidth</a>() <span class="keyword">const</span>;
<a name="l00098"></a>00098     <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#ad7a7553b8dd73c34b53f9dec153656f">getHeight</a>() <span class="keyword">const</span>;
<a name="l00102"></a>00102     <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#a7c28ec5233e2a60c866095f700b7402">getBytesPerPixel</a>() <span class="keyword">const</span>;
<a name="l00106"></a>00106     <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classPixmap.htm#529cc5c1deea7cd27f2021c9931b64ae">isIndexValid</a>(<span class="keywordtype">int</span> i);
<a name="l00112"></a>00112     <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="classPixmap.htm#529cc5c1deea7cd27f2021c9931b64ae">isIndexValid</a>(<span class="keywordtype">int</span> c, <span class="keywordtype">int</span> r);
<a name="l00118"></a>00118     <span class="keyword">inline</span> T* <a class="code" href="classPixmap.htm#c61314716a60f549164ed9cba6d4fe3b">getPointer</a>(<span class="keywordtype">int</span> i);
<a name="l00124"></a>00124     <span class="keyword">inline</span> T* <a class="code" href="classPixmap.htm#c61314716a60f549164ed9cba6d4fe3b">getPointer</a>(<span class="keywordtype">int</span> c, <span class="keywordtype">int</span> r);
<a name="l00130"></a>00130     <span class="keyword">inline</span> T &amp;<a class="code" href="classPixmap.htm#e336cdfb93dfa0f8bf76d5746493151e">operator()</a>(<span class="keywordtype">int</span> i);
<a name="l00138"></a>00138     <span class="keyword">inline</span> T &amp;<a class="code" href="classPixmap.htm#e336cdfb93dfa0f8bf76d5746493151e">operator()</a>(<span class="keywordtype">int</span> c, <span class="keywordtype">int</span> r);
<a name="l00146"></a>00146     <a class="code" href="classPixmap.htm">Pixmap&lt;T&gt;</a> &amp;<a class="code" href="classPixmap.htm#cf1872e381a0106bef0e4166862dd08d">operator=</a>(<span class="keyword">const</span> <a class="code" href="classPixmap.htm">Pixmap&lt;T&gt;</a> &amp;p);
<a name="l00151"></a>00151     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#1cd16f98faca76a7efeb0b8f43be4694">loadPixmap</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *fileName);
<a name="l00157"></a>00157     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#cb1ba67b85f0849341aa37785980d05b">savePixmap</a>(<span class="keywordtype">char</span> *fileName); 
<a name="l00163"></a>00163   <span class="keyword">protected</span>:
<a name="l00164"></a><a class="code" href="classPixmap.htm#4c65e80657da82654fa777376d36fd2a">00164</a>     <span class="keywordtype">bool</span> <a class="code" href="classPixmap.htm#4c65e80657da82654fa777376d36fd2a">d_usingExternalBuffer</a>;
<a name="l00165"></a><a class="code" href="classPixmap.htm#146facfb036b2dc05e385425d5223e8e">00165</a>     T *<a class="code" href="classPixmap.htm#146facfb036b2dc05e385425d5223e8e">d_imgData</a>;
<a name="l00166"></a><a class="code" href="classPixmap.htm#050756c902ea421683f75ff8dd5ea64e">00166</a>     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#050756c902ea421683f75ff8dd5ea64e">d_w</a>;
<a name="l00167"></a><a class="code" href="classPixmap.htm#695b06bdf4229e7e0c5c956aae6305b2">00167</a>     <span class="keywordtype">int</span> <a class="code" href="classPixmap.htm#695b06bdf4229e7e0c5c956aae6305b2">d_h</a>;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169   <span class="keyword">private</span>:
<a name="l00170"></a>00170     <a class="code" href="classPixmap.htm#9c7f4877fa0c9f65cd88eb7c82c1ecd9">Pixmap</a>(<a class="code" href="classPixmap.htm">Pixmap</a> &amp;p) {<span class="keywordflow">return</span>;};
<a name="l00173"></a>00173 };
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 
<a name="l00180"></a><a class="code" href="classPixmapGray.htm">00180</a> <span class="keyword">class </span><a class="code" href="classPixmapGray.htm">PixmapGray</a> : <span class="keyword">public</span> <a class="code" href="classPixmap.htm">Pixmap</a>&lt;uint8_t&gt;{};  
<a name="l00181"></a>00181 
<a name="l00186"></a><a class="code" href="classPixmapRgb.htm">00186</a> <span class="keyword">class </span><a class="code" href="classPixmapRgb.htm">PixmapRgb</a> : <span class="keyword">public</span> <a class="code" href="classPixmap.htm">Pixmap</a>&lt;rgb_t&gt;{};
<a name="l00187"></a>00187 
<a name="l00188"></a>00188 };
<a name="l00189"></a>00189 <span class="preprocessor">#endif //_PIXMAP_HPP_INCLUDED</span>
</pre></div><hr>
Created for project <code><font color="red"><b>Real-time Feature Tracker Library</b></font></code> on Thu Sep 14 20:30:15 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
