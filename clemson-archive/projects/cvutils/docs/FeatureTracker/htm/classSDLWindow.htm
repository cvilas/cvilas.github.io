<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Real-time Feature Tracker Library: SDLWindow Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>SDLWindow Class Reference</h1><!-- doxytag: class="SDLWindow" -->A window for image display.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="TrackerUtils_8hpp-source.htm">TrackerUtils.hpp</a>&gt;</code>
<p>
<a href="classSDLWindow-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#b081329db76eaeaed1716c2e3bad50b2">SDLWindow</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#7a0af0daec54970ff2262b67a6ece281">~SDLWindow</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#5f2f381d5f1d0a17ffd02710f431e010">init</a> (int w, int h, const char *title)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#0b641989984e26c3a8748e7996dd814c">updateScreenBuffer</a> (char *buf, int w, int h, int bpp, const char *msg=NULL)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#18585e21d2a7be0fe62514f598ff3a06">refresh</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">SDL_Surface *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSDLWindow.htm#80294dacd64c512a5915d16fa67c302a">getScreenPointer</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A window for image display. 
<p>
The <a class="el" href="classSDLWindow.htm">SDLWindow</a> class uses the SDL library to display images. Use SDL event handling routines to catch events such as mouse clicks.<p>
<b>Example Program:</b> <div class="fragment"><pre class="fragment"><span class="comment">//==============================================================================</span>
<span class="comment">// SDLWindow.t.cpp : Example program for SDLWindow and Pixmap class.</span>
<span class="comment">// Author          : Vilas Kumar Chitrakaran</span>
<span class="comment">//==============================================================================</span>

<span class="preprocessor">#include "<a class="code" href="TrackerUtils_8hpp.htm">TrackerUtils.hpp</a>"</span>
<span class="preprocessor">#include "SDL/SDL_events.h"</span>
<span class="preprocessor">#include "<a class="code" href="Pixmap_8hpp.htm">Pixmap.hpp</a>"</span>
<span class="preprocessor">#include &lt;iostream&gt;</span>

<span class="keyword">using namespace </span>std;

<span class="keyword">static</span> <span class="keywordtype">int</span> quit = 0;
<span class="keywordtype">int</span> filterSDLQuitEvent(<span class="keyword">const</span> SDL_Event *event);
 <span class="comment">// filter out SDL_QUIT and handle it here.</span>
 
<span class="comment">//==============================================================================</span>
<span class="comment">// This example demonstrates how to display an image, and process user mouse</span>
<span class="comment">// clicks.</span>
<span class="comment">//==============================================================================</span>
<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
{
 <a class="code" href="classSDLWindow.htm">SDLWindow</a> window;  <span class="comment">// image window</span>
 <a class="code" href="classPixmapRgb.htm">PixmapRgb</a> image;   <span class="comment">// image</span>
 <span class="keywordtype">char</span> *pointer;
 <span class="keywordtype">int</span> w, h, bpp;
 
 <span class="comment">// open an image</span>
 <span class="keywordflow">if</span>( image.<a class="code" href="classPixmap.htm#1cd16f98faca76a7efeb0b8f43be4694">loadPixmap</a>(<span class="stringliteral">"images/ash_P6.ppm"</span>) != 0 )
  <span class="keywordflow">return</span> -1;

 pointer = (<span class="keywordtype">char</span> *)image.<a class="code" href="classPixmap.htm#c61314716a60f549164ed9cba6d4fe3b">getPointer</a>(0);
 w = image.<a class="code" href="classPixmap.htm#02e9822f3fe2f920ba1f5a66f83c573b">getWidth</a>();
 h = image.<a class="code" href="classPixmap.htm#ad7a7553b8dd73c34b53f9dec153656f">getHeight</a>();
 bpp = image.<a class="code" href="classPixmap.htm#a7c28ec5233e2a60c866095f700b7402">getBytesPerPixel</a>();
  
 <span class="comment">// Display the image on screen</span>
 <span class="keywordflow">if</span>( window.<a class="code" href="classSDLWindow.htm#0b641989984e26c3a8748e7996dd814c">updateScreenBuffer</a>(pointer, w, h, bpp, NULL) != 0)
  <span class="keywordflow">return</span> -1;
 window.<a class="code" href="classSDLWindow.htm#18585e21d2a7be0fe62514f598ff3a06">refresh</a>();

 <span class="comment">// handle mouse events (standard SDL event handling)</span>
 SDL_Event event;
 SDL_SetEventFilter(filterSDLQuitEvent); <span class="comment">// handle SDL_QUIT</span>
 <span class="keywordflow">while</span>( SDL_WaitEvent(&amp;event) &amp;&amp; !quit ) {
  <span class="keywordflow">switch</span>(event.type) {
   <span class="keywordtype">int</span> x, y;
   <span class="keywordflow">case</span> SDL_MOUSEBUTTONDOWN:
    x = event.button.x;
    y = event.button.y;
    cout &lt;&lt; image(x,y) &lt;&lt; endl;
    image(x,y) = <a class="code" href="Pixmap_8hpp.htm#92dee112d35af8592983d64642fa2c45">rgb_t</a>(0xFF, 0, 0);
   <span class="keywordflow">break</span>;
  
   <span class="keywordflow">default</span>:
   <span class="keywordflow">break</span>;
  }
  <span class="keywordflow">if</span>( window.<a class="code" href="classSDLWindow.htm#0b641989984e26c3a8748e7996dd814c">updateScreenBuffer</a>(pointer, w, h, bpp, NULL) != 0)
   <span class="keywordflow">return</span> -1;
  window.<a class="code" href="classSDLWindow.htm#18585e21d2a7be0fe62514f598ff3a06">refresh</a>();
 }
 <span class="keywordflow">return</span> 0;
}

 
<span class="comment">//==============================================================================</span>
<span class="comment">// filterSDLQuitEvent</span>
<span class="comment">//==============================================================================</span>
<span class="keywordtype">int</span> filterSDLQuitEvent(<span class="keyword">const</span> SDL_Event *event)
{ 
 <span class="keywordflow">if</span>( event-&gt;type == SDL_QUIT) {
  cout &lt;&lt; <span class="stringliteral">"Quitting."</span> &lt;&lt; endl;
  quit = 1;
 }
 <span class="keywordflow">return</span>(1);
}
</pre></div> 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="b081329db76eaeaed1716c2e3bad50b2"></a><!-- doxytag: member="SDLWindow::SDLWindow" ref="b081329db76eaeaed1716c2e3bad50b2" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">SDLWindow::SDLWindow           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. Does some initializations.     </td>
  </tr>
</table>
<a class="anchor" name="7a0af0daec54970ff2262b67a6ece281"></a><!-- doxytag: member="SDLWindow::~SDLWindow" ref="7a0af0daec54970ff2262b67a6ece281" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">SDLWindow::~SDLWindow           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The destructor cleans up.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="5f2f381d5f1d0a17ffd02710f431e010"></a><!-- doxytag: member="SDLWindow::init" ref="5f2f381d5f1d0a17ffd02710f431e010" args="(int w, int h, const char *title)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int SDLWindow::init           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>w</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>h</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>title</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initialize an SDL screen buffer. Window doesn't show up until <a class="el" href="classSDLWindow.htm#18585e21d2a7be0fe62514f598ff3a06">refresh()</a> is called. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>w,h</em>&nbsp;</td><td>Window width and height. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>title</em>&nbsp;</td><td>A title for the window. Should be set to NULL if not desired. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error (error message redirected to stderr). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="0b641989984e26c3a8748e7996dd814c"></a><!-- doxytag: member="SDLWindow::updateScreenBuffer" ref="0b641989984e26c3a8748e7996dd814c" args="(char *buf, int w, int h, int bpp, const char *msg=NULL)" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int SDLWindow::updateScreenBuffer           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>w</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>h</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>bpp</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>msg</em> = <code>NULL</code></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Update the screen buffer with data from user provided image buffer. Window doesn't show up on until <a class="el" href="classSDLWindow.htm#18585e21d2a7be0fe62514f598ff3a06">refresh()</a> is called. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>A pointer to the image buffer, provided by the user. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>w,h</em>&nbsp;</td><td>Image width and height. Provided here to reinitialize SDL screen if they are different from parameters used for <a class="el" href="classSDLWindow.htm#5f2f381d5f1d0a17ffd02710f431e010">init()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bpp</em>&nbsp;</td><td>The bytes per pixel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>msg</em>&nbsp;</td><td>An optional message upto 80 characters long. Useful to print helpful information on the screen. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>0 on success, -1 on error (error message redirected to stderr). </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="18585e21d2a7be0fe62514f598ff3a06"></a><!-- doxytag: member="SDLWindow::refresh" ref="18585e21d2a7be0fe62514f598ff3a06" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void SDLWindow::refresh           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Display the video on screen.     </td>
  </tr>
</table>
<a class="anchor" name="80294dacd64c512a5915d16fa67c302a"></a><!-- doxytag: member="SDLWindow::getScreenPointer" ref="80294dacd64c512a5915d16fa67c302a" args="()" --><p>
<table class="mdTable" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">SDL_Surface* SDLWindow::getScreenPointer           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="TrackerUtils_8hpp-source.htm">TrackerUtils.hpp</a></ul>
<hr>
Created for project <code><font color="red"><b>Real-time Feature Tracker Library</b></font></code> on Thu Sep 14 20:30:15 EDT 2006
<br>
 for Vilas Kumar Chitrakaran (cvilas(@)ces.clemson.edu). 
<br>
Documentation generated using <a href=http://www.doxygen.org>Doxygen</a>
.
</body>
</html>
